@{
    Layout = null;
}
@model PerformanceManagement.Models.PlanningAdmin.View.TaskDefinitionEditionView

<form method="post" id="UpdatetTaskDefinitionFrm" class="form-horizontal">
    <input type="hidden" id="periodDefinitionId" name="@Model.PeriodDefinitionId" value="@Model.PeriodDefinitionId" />
    <div class="modal fade modalClass" id="UpdateTaskDefinitionModal" tabindex="" aria-hidden="true">
        <div class="modal-dialog ">
            <div class="modal-content">
                <div class="modal-header bg-blue">
                    <button type="button" id="modal-close" class="close"
                            data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">
                        <i class="fa fa-file-o"></i>
                        ویرایش @Model.Title

                    </h4>
                </div>

                <div class="modal-body">
                    <div class="form-body">

                        <div id="alert_danger" class="alert alert-danger display-hide">
                            <button class="close" data-close="alert"></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-4">
                                        نوع
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-8">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select id="taskType" name="taskType" class="select2 select2-2 taskType form-control">
                                                <option></option>
                                                @if (Model.Type == 1)
                                                {
                                                    <option selected="selected" value="1">هدف سازمانی</option>
                                                    <option value="2">هدف معاونتی</option>
                                                }
                                                else
                                                {
                                                    <option value="1">هدف سازمانی</option>
                                                    <option selected="selected" value="2">هدف معاونتی</option>
                                                }
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-4">
                                        متن هدف
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-8">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <input type="text" taskId="@Model.TaskId" value="@Model.Title" name="title" id="title" class="form-control title" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-4">
                                        در راستای
                                        <span class="required">
                                            
                                        </span>
                                    </label>
                                    <div class="col-md-8">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select id="relatedWithTask2" name="relatedWithTask2" class="select2 select2-2 taskType form-control input-large">
                                               
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @if (Model.Criterias != null)
                        {
                            int i = 0;
                            <fieldset>
                                <legend>شاخص ها</legend>
                                @foreach (var item in Model.Criterias)
                                {
                                    i += 1;
                                    string criteriaId = "criteriaId" + i;
                                    string limitOfAdmission = "limitOfAdmission" + i;
                                    string criteriaType = "criteriaType" + i;
                                    string calculationWay = "calculationWay" + i;

                                    <div class="row criteria">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="control-label col-md-3">

                                                    <span class="required">

                                                    </span>
                                                </label>
                                                <div class="col-md-9">
                                                    <div class="input-icon right">
                                                        <i class="fa"></i>
                                                        <select id="@criteriaType" name="@criteriaType"
                                                                class="select2 select2-2 form-control criteriaTypeValidation">
                                                            <option value=""></option>
                                                            @if (item.CriteriaType == 1)
                                                            {
                                                                <option selected="selected" value="1">KRI</option>
                                                                <option value="2">KPI</option>
                                                                <option value="3">PI</option>
                                                            }
                                                            else if (item.CriteriaType == 2)
                                                            {
                                                                <option value="1">KRI</option>
                                                                <option selected="selected" value="2">KPI</option>
                                                                <option value="3">PI</option>
                                                            }
                                                            else if (item.CriteriaType == 3)
                                                            {
                                                                <option value="1">KRI</option>
                                                                <option value="2">KPI</option>
                                                                <option selected="selected" value="3">PI</option>
                                                            }
                                                            else if (item.CriteriaType == null || item.CriteriaType==0)
                                                            {
                                                                <option value="1">KRI</option>
                                                                <option value="2">KPI</option>
                                                                <option value="3">PI</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-9">
                                            <div class="form-group">
                                                <div class="col-md-12 input-icon right">
                                                    <i class="fa"></i>
                                                    <input type="text" criteriaId="@item.CriteriaId" value="@item.Title" name="@criteriaId" id="@criteriaId" class="form-control criteriaValidation" placeholder="عنوان شاخص" />

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="col-md-12 input-icon right">
                                                    <i class="fa"></i>
                                                    <input name="@calculationWay" id="@calculationWay" value="@item.CalculationWay" type="text" class="form-control calculationWayValidation" placeholder="نحوه محاسبه">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <div class="col-md-12 input-icon right">
                                                    <i class="fa"></i>
                                                    <input type="text" value="@item.LimitOfAdmission" name="@limitOfAdmission" id="@limitOfAdmission" class="form-control limitOfAdmissionValidation" placeholder="حد پذیرش" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr />
                                }
                            </fieldset>
                        }

                    </div>
                    <!-- END FORM-->
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn green input-sm input-small" id="updateTaskBTN">ذخيره</button>
                    <button type="button" class="btn red input-sm input-small" id="cancel11" data-dismiss="modal"><i class="fa fa-times"></i>انصراف</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</form>
<script>
    $('.select2-2').select2({
        placeholder: "انتخاب کنید",
        allowClear: true
    });
    $('#UpdateTaskDefinitionModal').modal('show');

    $("#UpdatetTaskDefinitionFrm").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();

        var form = $('#UpdatetTaskDefinitionFrm');

        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                title: {
                    required: true
                },
                taskType: {
                    required: true
                }
            },
            messages: {
                title: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                taskType: {
                    required: "پر کردن این فیلد الزامی می باشد"
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })

        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {

            var TaskDefinitionEditionView = {};
            var listOfCriteria = [];
            if ($("#title").length > 0) {
                TaskDefinitionEditionView.TaskId = $("#title").attr("taskId");
                TaskDefinitionEditionView.Title = $("#title").val();
                TaskDefinitionEditionView.Type = $('#taskType').children('option:selected').val();
                TaskDefinitionEditionView.PeriodDefinitionId = $("#periodDefinitionId").val();
                TaskDefinitionEditionView.ParentTaskId = $('#relatedWithTask2').children('option:selected').val();
            }
            if ($(".criteria").length > 0) {
                $(".criteria").each(function (i, d) {
                    var Criterias = {};

                    Criterias.CriteriaId = $(this).find("input[id^='criteriaId']").attr("criteriaId");
                    Criterias.Title = $(this).find("input[id^='criteriaId']").val();
                    Criterias.CriteriaType = $(this).find("select[id^='criteriaType']").val();
                    Criterias.CalculationWay = $(this).find("input[id^='calculationWay']").val();
                    Criterias.limitOfAdmission = $(this).find("input[id^='limitOfAdmission']").val();

                    listOfCriteria.push(Criterias);
                })
                TaskDefinitionEditionView.Criterias = listOfCriteria;
            }
            
            console.log(TaskDefinitionEditionView);

            //$("#articleSubmit").addClass('disabled');
            var btn = $("#updateTaskBTN");
            btn.button('loading');
            //var postdata = new FormData(this);
            //listOfSubTask = JSON.stringify(listOfSubTask);
            //var postdata = $(this).serializeArray();
            //postdata.append(JSON.stringify(listOfSubTask));
            //console.log(postdata);
            $.ajax(
                {
                    //data:postdata,
                    url: '/Task/EditTaskDefinition',
                    //url : formURL,
                    //data: postdata,
                    data: JSON.stringify(TaskDefinitionEditionView),
                    //data: "firstName=" + $("fn").val(),
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    datatype: 'json',
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',

                    success: function (data, textStatus, jqXHR) {
                        var message = "";
                        if (data > 0) {
                            message += "<span>اطلاعات  مورد نظر با موفقیت ویرایش گردید</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.success(message);
                            dt.ajax.reload();
                            $("#UpdatetTaskDefinitionFrm")[0].reset();
                            $("#UpdateTaskDefinitionModal").modal("hide");
                        }
                        else if (data == 0) {
                            message += "<span>اطلاعات  مورد نظر ویرایش نگردید..</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("erorr00000");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $("#updateTaskBTN").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $("#articleForm")[0].reset();
            //});
            e.preventDefault(e);
        }
    });

    var taskTitleVal = $("#title").val();

    $("#title").val("");
    $("#updateTaskBTN").trigger('click');
    $('.criteriaTypeValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });

    $('.criteriaValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });

    $('.limitOfAdmissionValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });

    $('.calculationWayValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    })

    $("#updateTaskBTN").trigger('click');
    $("#title").val(taskTitleVal);
    $.ajax({
            type: 'get',
            url: '/task/TaskList',
            //data: { roleId: roleId },
            async: false,
            success: function (data) {
                $('#relatedWithTask2').empty();
                $('#relatedWithTask2').append("<option></option>");

                $(data).each(function (i, d) {
                    //$("#parentName").select2("val", d.departmentId);
                    $('#relatedWithTask2').append("<option value='" + d.TaskId + "'>" + d.Title + "</option>");
                })
                $('#relatedWithTask2').select2({
                    placeholder: "انتخاب کنید",
                    allowClear: true
                });
            },
            error: function (status) {
                alert("Error0000");
            }
    })
    $("#relatedWithTask2").val(@Model.ParentTaskId).select2();
</script>
