@{
    Layout = null;
}
<form id="changePasswordForm" method="post">
    <div class="form-group">
        <label class="control-label">
            پسورد جاری
            <span class="required">
                *
            </span>
        </label>
        <div class="input-icon right">
            <i class="fa"></i>
            <input id="currentPassword" name="currentPassword" type="password" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">
            پسورد جدید
            <span class="required">
                *
            </span>
        </label>
        <div class="input-icon right">
            <i class="fa"></i>
            <input id="newPassword" name="newPassword" type="password" class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">
            تکرار پسورد جدید
            <span class="required">
                *
            </span>
        </label>
        <div class="input-icon right">
            <i class="fa"></i>
            <input id="confirmPassword" name="confirmPassword" type="password" class="form-control" />
        </div>
    </div>
    <div class="margin-top-10">
        <button type="submit" class="btn green input-sm input-small" id="changePasswordBtn">ذخيره</button>
        <button type="reset" class="btn red input-sm input-small" id="cancel"><i class="fa fa-times"></i>انصراف</button>
    </div>
</form>

<script>
    $("#changePasswordForm").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();
        //debugger;

        var form = $('#changePasswordForm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                currentPassword: {
                    required: true
                },
                newPassword: {
                    required: true,
                    rangelength: [6, 12]
                },
                confirmPassword: {
                    required: true,
                    equalTo: "#newPassword",
                    rangelength: [6, 12]
                }
            },
            messages: {
                currentPassword: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                newPassword: {
                    required: "پر کردن این فیلد الزامی می باشد",
                    rangelength: "طول مجاز بین 6 تا 12 کاراکتر می باشد"
                },
                confirmPassword: {
                    required: "پر کردن این فیلد الزامی می باشد",
                    equalTo: "یکسان بودن کاراکترهای مورد نظر با پسورد جدید الزامی می باشد",
                    rangelength: "طول مجاز بین 6 تا 12 کاراکتر می باشد"
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {
            //$("#articleSubmit").addClass('disabled');
            $("#changePasswordBtn").attr("disabled", "disabled");

            var btn = $("#changePasswordBtn");
            btn.button('loading');
            var postdata = new FormData(this);
            //listOfSubTask = JSON.stringify(listOfSubTask);
            //var postdata = $(this).serializeArray();
            //postdata.append(JSON.stringify(listOfSubTask));
            //console.log(postdata);
            $.ajax(
                {
                    url: '/profile/ChangePassword',
                    //url : formURL,
                    data: postdata,
                    //data: JSON.stringify(CoveredEmployee),
                    //data: "firstName=" + $("fn").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    //datatype: 'json',
                    //contentType: 'application/json; charset=utf-8',
                    type: 'POST',

                    success: function (data, textStatus, jqXHR) {
                        var message = "";
                        if (data == 1) {
                            message += "<span>اطلاعات مورد نظر با موفقیت ثبت گردید.</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.success(message);
                            $("#changePasswordForm")[0].reset();
                        }
                        else if (data.hasOwnProperty('passError')) {
                            $(data.passError).each(function (i, d) {
                                message += "<span>" + d + "</span><br>";
                            });
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        } else if (data == -1) {
                            message += "<span>پسورد مورد نظر معتبر نمی باشد</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        }else if (data == -2) {
                            message += "<span>آخرین پسورد با پسورد جدید نمی توانند یکسان باشند</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        }

                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("erorr00000");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $("#changePasswordBtn").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $("#articleForm")[0].reset();
            //});
            e.preventDefault(e);
        }
    });
</script>