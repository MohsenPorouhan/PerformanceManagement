@{
    ViewData["Title"] = "سایر ارزیاب شایستگی های رفتاری";
}
@section Styles{
    @*<link rel="stylesheet" type="text/css" href="/assets/plugins/jquery-multi-select/css/multi-select-rtl.css" />*@
    <link rel="stylesheet" type="text/css" href="/assets/plugins/bootstrap-toastr/toastr-rtl.min.css" />
    @*<link rel="stylesheet" type="text/css" href="/assets/plugins/select2/select2-rtl.css" />*@
    <link rel="stylesheet" type="text/css" href="/assets/plugins/select2v4/select2/dist/css/select2.css" />
    @*<link id="select2-metronic" rel="stylesheet" type="text/css" href="/assets/plugins/select2/select2-metronic-rtl.css" />*@
    @*<link href="/assets/plugins/bootstrap-modal/css/bootstrap-modal-bs3patch.css" rel="stylesheet" type="text/css" />
        <link href="/assets/plugins/bootstrap-modal/css/bootstrap-modal.css" rel="stylesheet" type="text/css" />*@
    <link rel="stylesheet" href="/assets/plugins/jQuery-tagEditor-master/jquery.tag-editor.css" />

    <link rel="stylesheet" href="/assets/advancedDataTable/jquery.dataTables.css" />
    <link rel="stylesheet" href="/assets/advancedDataTable/buttons.dataTables.css" />
    <style>
        .tag-editor li {
            float: right;
        }

        .input-icon.right i {
            left: auto !important;
        }

        .tag-editor {
            line-height: 27px;
            /*max-width: 300px;*/
            overflow: auto;
        }

        .btn-sm, .btn-xs {
            margin: 2px;
        }

        td.details-control {
            background: url('/assets/img/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.details td.details-control {
            background: url('/assets/img/details_close.png') no-repeat center center;
        }

        .dataTable .details td, .dataTable .details th {
            padding: 8px;
            background: none;
            border: 0;
        }

        .input-DT {
            margin-left: 5px;
        }

        .select2-container .select2-choice > .select2-chosen {
            /*display: block;*/
            overflow: initial;
        }

        .btn-add, .h3-section {
            margin-right: 10px !important;
        }

        .input-icon.right i {
            z-index: +100;
        }

        .select2-container--open .select2-dropdown {
            z-index: 99999999
        }

        #dataTables_filter_subSet {
            margin-top: 32px;
        }
        /*generated dynamically in textTaskIndirect and because of bug had set width*/
        #participantt2Select21 {
            width: 176px;
        }

        table.dataTable tbody tr.selected td {
            background-color: #B0BED9;
        }
    </style>
}
<!-- BEGIN PAGE HEADER-->
<div class="row">
    <div class="col-md-12">
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class="page-title">
            <small></small>

        </h3>
        <div class="clearfix"></div>
        <ul class="page-breadcrumb breadcrumb">
            <li>
                <i class="fa fa-home"></i>
                <a href="/home">
                    خانه
                </a>
                <i class="fa fa-angle-left"></i>
            </li>
            <li>
                <a href="#">
                    مسیر مورد نظر
                </a>
            </li>
            <li class="pull-right">
                <div id="dashboard-report-range" class="dashboard-date-range tooltips" data-placement="top" data-original-title="Change dashboard date range">
                    <i class="fa fa-calendar"></i>
                    <span>
                    </span>
                    <i class="fa fa-angle-down"></i>
                </div>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
<!-- END PAGE HEADER-->

<div class="row">
    <div class="col-md-12">
        <div class="portlet blue box">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-cogs"></i>سایر ارزیاب شایستگی های رفتاری
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse">
                    </a>
                    <a href="#portlet-config" data-toggle="modal" class="config">
                    </a>
                    <a href="javascript:;" id="reload" class="reload">
                    </a>
                    <a href="javascript:;" class="remove">
                    </a>
                </div>
            </div>
            <div class="portlet-body">

                <a id="carryoutConfirmationBtn" class="btn blue btn-sm pull-left" data-toggle="modal"> تایید/عدم تایید به عنوان سایر ارزیاب شایستگی </a>
                <a id="scoreBtn" class="btn blue btn-sm pull-left" data-toggle="modal">نمره دهی به عنوان سایر ارزیاب شایستگی ها </a>
                <div class="clearfix">
                </div>
                <table class="table table-striped table-bordered table-hover" id="CompetencyAssignmentTable">
                    <thead>
                        <tr>
                            <th>
                                کد دوره
                            </th>
                            <th>
                                نام دوره
                            </th>
                            <th>
                                نام اختصاص دهنده
                            </th>
                            <th>
                                واحد اختصاص دهنده
                            </th>
                            <th>
                                نقش اختصاص دهنده
                            </th>
                            <th>
                                نام کارمند
                            </th>
                            <th>
                                واحد سازمانی کارمند
                            </th>
                            <th>
                                عنوان شایستگی
                            </th>
                            <th>
                                وزن شایستگی
                            </th>
                            <th>
                                وضعیت اختصاص
                            </th>
                            <th>
                                وضعیت پذیرش
                            </th>
                            <th>
                                مشاهده نمره
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Plugins{
    <script src="/assets/plugins/jquery-validation/dist/jquery.validate.min.js" type="text/javascript"></script>
    <script src="/assets/plugins/bootstrap-toastr/toastr.min.js"></script>
    <script src="/assets/scripts/custom/ui-toastr.js"></script>

    @*
        <script type="text/javascript" src="/assets/plugins/select2/select2.min.js"></script>*@

    <script type="text/javascript" src="/assets/plugins/select2v4/select2/dist/js/select2.min.js"></script>
    <script src="/assets/plugins/jQuery-tagEditor-master/jquery.caret.min.js"></script>
    <script src="/assets/plugins/jQuery-tagEditor-master/jquery.tag-editor.min.js"></script>


    <script src="/assets/plugins/jquery-validation/dist/jquery.validate.min.js" type="text/javascript"></script>

    @*
        <script src="/assets/plugins/bootstrap-modal/js/bootstrap-modalmanager.js" type="text/javascript"></script>
        <script src="/assets/plugins/bootstrap-modal/js/bootstrap-modal.js" type="text/javascript"></script>*@

    <script src="/assets/advancedDataTable/DataTables-1.10.19.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/Buttons-for-DataTables-1.5.2.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/buttons.print.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/buttons.ColVis.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/jsZip.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/pdfmake.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/pdfmake.font.js" type="text/javascript"></script>
    <script src="/assets/advancedDataTable/buttons.html5.js" type="text/javascript"></script>

}

@section Scripts{

    <script>
        var dt;

        function show_dataTable() {
            dt = $('#CompetencyAssignmentTable').DataTable({
                dom: 'CT<"clearfix">lBfrtip',
                buttons: [
                    'copy', 'csv', 'excel',
                    'pdf',
                    {
                        extend: 'pdfHtml5',
                        download: 'open',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':visible'
                        }
                    },
                    'colvis'
                ],
                columnDefs: [
                    {
                        targets: [-1],
                        visible: false
                    }
                ],
                "fnInitComplete": function (oSettings, json) {

                },
                "fnDrawCallback": function (oSettings) {

                    $(".viewScoreBtn").click(function () {
                        $('#CompetencyAssignmentTable >tbody>tr').each(function () {
                            $(this).removeClass('selected');
                        })
                        $.ajax(
                            {
                                url: "/ParticipantCompetencyAssignment/ViewScore",
                                contentType: 'aplication/json;charset=utf-8',
                                type: "GET",
                                datatype: 'html',
                                //data: { CoacherType: $(this).attr("coacherType") },
                                success: function (data, textStatus, jqXHR) {
                                    $("#modalPlace").html(data);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    alert("erorr");
                                    alert(jqXHR);
                                    alert(textStatus);
                                }
                            });
                    });

                    //// Array to track the ids of the details displayed rows
                    //var detailRows = [];
                    //$('.details-control').on('click', function () {
                    //    var tr = $(this).closest('tr');
                    //    var row = dt.row(tr);
                    //    var idx = $.inArray(tr.attr('id'), detailRows);

                    //    if (row.child.isShown()) {
                    //        tr.removeClass('details');
                    //        row.child.hide();

                    //        // Remove from the 'open' array
                    //        detailRows.splice(idx, 1);
                    //    }
                    //    else {
                    //        tr.addClass('details');
                    //        row.child(format(row.data())).show();

                    //        // Add to the 'open' array
                    //        if (idx === -1) {
                    //            detailRows.push(tr.attr('id'));
                    //        }
                    //    }
                    //});
                    //// On each draw, loop over the `detailRows` array and show any child rows
                    //dt.on('draw', function () {
                    //    $.each(detailRows, function (i, id) {
                    //        $('#' + id + ' td.details-control').trigger('click');
                    //    });
                    //});
                },
                "pagingType": "full_numbers",
                "lengthMenu": [
                    [10, 25, 50, -1],
                    [10, 25, 50, "All"]
                ],
                "columnDefs": [
                    { "orderable": false, "targets": [0] }
                ],
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "/ParticipantCompetencyAssignment/GetAssignedCompetencyList",
                    "type": "Post",
                    "data": function (d) {
                        d.periodDefinitionIdDT = $('#periodDefinitionIdDT').children('option:selected').val(),
                            d.departmentIdDT = $('#departmentId').children('option:selected').val()
                    },
                    //"contentType": 'application/json; charset=utf-8',
                    //"cache": false,
                    "dataType": "json",
                    //'data': function (data) {
                    //    data = JSON.stringify(data)
                    //    return data;
                    //}
                },
                "aoColumns": [
                    {
                        "mData": "PeriodCode",
                    },
                    {
                        "mData": "PeriodTitle"
                    },
                    {
                        "mData": "AllocatorFullName",
                        "render": function (data, type, row, meta) {
                            if (data == null) {
                                data = '----'
                            }
                            return data;
                        }
                    },
                    {
                        "mData": "AllocatorDepartmentName",
                        "render": function (data, type, row, meta) {
                            if (data == null) {
                                data = '----'
                            }
                            return data;
                        }
                    },
                    {
                        "mData": "RoleName",
                        "render": function (data, type, row, meta) {
                            if (data == "PlanningAdmin") {
                                data = 'ادمین برنامه ریزی'
                            }
                            else if (data == "Coacher") {
                                data = 'مربی'
                            }
                            else if (data == "HRAdmin") {
                                data = 'ادمین سرمایه انسانی'
                            }
                            return data;
                        }
                    },
                    {
                        "mData": "FullName"
                    },
                    {
                        "mData": "ShortName"
                    },
                    {
                        "mData": "CompetencyTitle"
                    },
                    {
                        "mData": "BehaviouralCompetencyWeight"
                    },
                    {
                        "mData": "EvaluationAcceptanceStatusId",
                        "render": function (data, type, row, meta) {
                            if (data == "1") {
                                data = "<span class='label label-sm label-success'>" + row.EvalAcceptanceTitle + "</span>";
                            }
                            else if (data == "2") {
                                data = "<span class='label label-sm label-warning'>" + row.EvalAcceptanceTitle + "</span>";
                            }
                            else if (data == "3") {
                                data = "<span class='label label-sm label-info'>" + row.EvalAcceptanceTitle + "</span>";
                            } else if (data == "4") {
                                data = "<span class='label label-sm label-danger'>" + row.EvalAcceptanceTitle + "</span>";
                            }
                            return data;
                        }
                    },
                    {
                        "mData": "Confirmation",
                        "render": function (data, type, row, meta) {
                            if (data == null) {
                                data = "<span class='label label-sm label-warning'>نامشخص</span>";
                            } else if (data == true) {
                                data = "<span class='label label-sm label-success'>پذیرش</span>";
                            } else if (data == false) {
                                data = "<span class='label label-sm label-info'>عدم پذیرش</span>";
                            }
                            return data;
                        }
                    },
                    {
                        "mData": null,
                        "render": function (data, type, row, meta) {
                            data = "<a href='#' data-toggle='modal' class='viewScoreBtn'>مشاهده نمره</a>";
                            return data;
                        }
                    }
                    //{
                    //    "class": "details-control",
                    //    "orderable": false,
                    //    "data": null,
                    //    "defaultContent": ""
                    //}
                ]
            });
        }
        show_dataTable();

        $("#CompetencyAssignmentTable_filter").after("<div id='departmentIdDT' class='dataTables_filter input-DT'><label>انتخاب سمت سازمانی:<select name='departmentId' id='departmentId' class='form-control input-medium'></select></label></div>");

        $("#CompetencyAssignmentTable_filter").after("<div class='dataTables_filter input-DT'><label>انتخاب دوره:<select name='periodDefinitionIdDT' id='periodDefinitionIdDT' class='form-control input---medium'></select></label></div>");

        $("#CompetencyAssignmentTable_filter").after("<div class='clearfix'></div>");

        $.ajax({
            type: 'get',
            url: '/share/GetPeriodDefinitionFromEvaluation',
            //data: { roleId: roleId },
            success: function (periodDefinition) {
                $("#periodDefinitionIdDT").empty();
                $("#periodDefinitionIdDT").append("<option></option>");

                $(periodDefinition).each(function (i, p) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#periodDefinitionIdDT").append("<option value='" + p.periodDefinitoionId + "'>" + p.periodTitle + " (" + p.periodCode + ")</option>");
                })
            },
            error: function (status) {
                alert("Error");
            }
        })

        $('#periodDefinitionIdDT').on('change', function () {
            $.ajax({
                type: 'get',
                url: '/EmployeeTaskAssignment/GetDepartmentList',
                data: { periodDefinitionId: $('#periodDefinitionIdDT').children('option:selected').val() },
                success: function (DepartmentResponsibilty) {

                    $("#departmentIdDT #departmentId").empty();
                    $("#departmentIdDT #departmentId").append("<option></option>");
                    dt.ajax.url("/ParticipantCompetencyAssignment/GetAssignedCompetencyList");
                    dt.ajax.reload();
                    $(DepartmentResponsibilty).each(function (i, p) {
                        //$("#parentName").select2("val", d.departmentId);
                        $("#departmentId").append("<option value='" + p.EvaluationHierarchyId + "'>" + p.ShortName + "</option>");
                    })
                },
                error: function (status) {
                    alert("Error");
                }
            })
        });

        $('#departmentId').on('change', function () {
            //if ($('#periodDefinitionIdDT').children('option:selected').val() == "" && $('#departmentId').children('option:selected').val() != "") {
            dt.ajax.url("/ParticipantCompetencyAssignment/GetAssignedCompetencyList");
            dt.ajax.reload();
            //}
        });
        $("#reload").click(function () {
            $("#periodDefinitionIdDT").val(null);
            $("#departmentId").val(null);
            dt.ajax.url("/ParticipantCompetencyAssignment/GetAssignedCompetencyList");
            dt.ajax.reload();
        })

        $("#CompetencyAssignmentTable tbody").on('click', 'tr', function () {
            $(this).toggleClass('selected');
        });
        $("#carryoutConfirmationBtn").click(function () {
            if (!dt.data().count()) {
                alert('شایستگی رفتاری برای انتخاب وجود ندارد');
            }
            else if ($('#periodDefinitionIdDT').children('option:selected').val() != "" && $('#departmentId').children('option:selected').val() != "") {
                $.ajax(
                    {
                        url: "/ParticipantCompetencyAssignment/ParticipantPerformCompetencyConfirmation",
                        contentType: 'aplication/json;charset=utf-8',
                        type: "GET",
                        datatype: 'html',
                        //data: { CoacherType: $(this).attr("coacherType") },
                        success: function (data, textStatus, jqXHR) {
                            $("#modalPlace").html(data);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("erorr");
                            alert(jqXHR);
                            alert(textStatus);
                        }
                    });
            }
            else {
                alert("دوره و سمت سازمانی می بایست در حالت انتخاب باشد");
            }
        });
        
        $("#scoreBtn").click(function () {
            if (!dt.data().count()) {
                alert('وظیفه ای برای انتخاب وجود ندارد');
            }
            else if ($('#periodDefinitionIdDT').children('option:selected').val() != "" && $('#departmentId').children('option:selected').val() != "") {
                $.ajax(
                    {
                        url: "/ParticipantCompetencyAssignment/BehaviouralScoreAssignment",
                        contentType: 'aplication/json;charset=utf-8',
                        type: "GET",
                        datatype: 'html',
                        //data: { CoacherType: $(this).attr("coacherType") },
                        success: function (data, textStatus, jqXHR) {
                            $("#modalPlace").html(data);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("erorr");
                            alert(jqXHR);
                            alert(textStatus);
                        }
                    });
            }
            else {
                alert("دوره و سمت سازمانی می بایست در حالت انتخاب باشد");
            }
        });
    </script>
}
