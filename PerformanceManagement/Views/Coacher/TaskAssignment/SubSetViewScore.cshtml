@{
    Layout = null;
}
<div class="modal fade department modalClass" id="scoreAssignmentModal2" tabindex="" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header bg-blue">
                <button type="button" id="modal-close" class="close"
                        data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">
                    <i class="fa fa-file-o"></i>
                    مشاهده نمره
                </h4>
            </div>

            <div class="modal-body">
                <div class="form-body" id="scoreTbl2">

                </div>
                <!-- END FORM-->
            </div>

            <div class="modal-footer">
                <button type="button" class="btn green input-sm input-small" id="cancel112" data-dismiss="modal"><i class="fa fa-times"></i>بستن</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<script>
    //  $(document).ready(function () {

    var isTrue2 = false;
    var finalResult2 = false;
    var row2;
    var coacherId2;
    var allocatorLevel2;
    var coacherLevell2
    $.ajax({
        type: 'get',
        url: '/Share/GetCurrentUserInfo',
        async: false,
        success: function (data) {
            coacherId2 = data;
        },
        error: function (status) {
            alert("Error");
        }
    })

    var type2;
    var length2 = dt2.rows('.selected').data().length;
    var selector2;
    if (length2 > 0) {
        selector2 = "#subSetScoreTable >tbody>tr.selected";
    } else {
        selector2 = "#subSetScoreTable >tbody>tr";
    }
    var criteriaCount;
    $(selector2).each(function (i, tr) {
        row2 = dt2.row(tr);

        $.ajax({
            type: 'get',
            url: '/Share/CriteiaCount',
            data: { taskId: row2.data().TaskId },
            async: false,
            success: function (data) {
                criteriaCount = data;
            },
            error: function (status) {
                alert("Error");
            }
        })

        if (row2.data().Levell == 2 && ((row2.data().AllocatorPersonId == coacherId2 && row2.data().allocatorRoleName != "PlanningAdmin") || row2.data().allocatorRoleName == "HRAdmin")) {
            $.ajax({
                url: '/TaskAssignment/GetScore',
                data: {
                    evaluationId: row2.data().EvaluationId
                    , hasCriteria: criteriaCount
                    , hasParticipant: row2.data().hasParticipant
                    , participantConfirmation: row2.data().participantConfirmation
                    , type: 1
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl2').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult2 = true;
        }
        else if (row2.data().Levell >= 3 && (row2.data().allocatorRoleName == "HRAdmin")) {
            $.ajax({
                url: '/TaskAssignment/GetScore',
                data: {
                    evaluationId: row2.data().EvaluationId
                    , hasCriteria: criteriaCount
                    , hasParticipant: row2.data().hasParticipant
                    , participantConfirmation: row2.data().participantConfirmation
                    , type: 2
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl2').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult2 = true;
        }
        else if (row2.data().Levell >= 2 && row2.data().allocatorRoleName == "PlanningAdmin") {
            $.ajax({
                url: '/TaskAssignment/GetScore',
                data: {
                    evaluationId: row2.data().EvaluationId
                    , hasCriteria: criteriaCount
                    , hasParticipant: row2.data().hasParticipant
                    , participantConfirmation: row2.data().participantConfirmation
                    , type: 3
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl2').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult2 = true;
        }
        else if (row2.data().Levell >= 3 && row2.data().AllocatorEvaluationHierarchyId == row2.data().parent && row2.data().allocatorRoleName != "HRAdmin" && row2.data().allocatorRoleName != "PlanningAdmin") {
            $.ajax({
                url: '/TaskAssignment/GetScore',
                data: {
                    evaluationId: row2.data().EvaluationId
                    , hasCriteria: criteriaCount
                    , hasParticipant: row2.data().hasParticipant
                    , participantConfirmation: row2.data().participantConfirmation
                    , type: 2
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl2').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult2 = true;
        }
        else if (row2.data().Levell >= 3 && (row2.data().AllocatorPersonId == coacherId2 && row2.data().allocatorRoleName != "PlanningAdmin" && row2.data().allocatorRoleName != "HRAdmin")) {
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: row2.data().AllocatorPersonId
                    , coacherDepartmentId: row2.data().AllocatorEvaluationHierarchyId
                    , departmentId: row2.data().RecieverAllocationEvaluationHierarchyId
                    , personId: row2.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    allocatorLevel2 = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            $.ajax({
                url: '/TaskAssignment/GetScore',
                data: {
                    evaluationId: row2.data().EvaluationId
                    , hasCriteria: criteriaCount
                    , hasParticipant: row2.data().hasParticipant
                    , participantConfirmation: row2.data().participantConfirmation
                    , type: 4
                    , coacherLevel: (4-allocatorLevel2)
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl2').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult2 = true;
        }
        else {
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: row2.data().AllocatorPersonId
                    , coacherDepartmentId: row2.data().AllocatorEvaluationHierarchyId
                    , departmentId: row2.data().RecieverAllocationEvaluationHierarchyId
                    , personId: row2.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    allocatorLevel2 = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: coacherId2
                    , coacherDepartmentId: $('#departmentId2').children('option:selected').val()
                    , departmentId: row2.data().RecieverAllocationEvaluationHierarchyId
                    , personId: row2.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    coacherLevell2 = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            if (row2.data().Levell >= 3 && (row2.data().AllocatorPersonId != coacherId2 && row2.data().allocatorRoleName != "PlanningAdmin" && row2.data().allocatorRoleName != "HRAdmin" && row2.data().AllocatorEvaluationHierarchyId != row2.data().parent) && coacherLevell2 <= allocatorLevel2) {
                finalResult2 = true;
                $.ajax({
                    url: '/TaskAssignment/GetScore',
                    data: {
                        evaluationId: row2.data().EvaluationId
                        , hasCriteria: criteriaCount
                        , hasParticipant: row2.data().hasParticipant
                        , participantConfirmation: row2.data().participantConfirmation
                        , type: 5
                        , coacherLevel: (4-allocatorLevel2)
                    },
                    //contentType: 'aplication/json;charset=utf-8',
                    type: "POST",
                    datatype: 'html',
                    async: false,
                    success: function (data) {
                        $('#scoreTbl2').html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Error");
                    }
                })
            }
        }
    })
    if (!finalResult2) {
        alert("مجاز به مشاهده نمرات وظیفه مورد نظر نمی باشید.");
    } else if (finalResult2) {
        $('#scoreAssignmentModal2').modal('show');
    }
</script>