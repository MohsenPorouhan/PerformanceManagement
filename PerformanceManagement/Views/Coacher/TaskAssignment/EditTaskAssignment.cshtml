@{
    Layout = null;
}

@model PerformanceManagement.Models.Coacher.View.EvaluationView

<form method="post" id="UpdatetEvaluationFrm" class="form-horizontal">
    <div class="modal fade modalClass" id="UpdatetEvaluationModal" tabindex="" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-wide">
            <div class="modal-content">
                <div class="modal-header bg-blue">
                    <button type="button" id="modal-close" class="close"
                            data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">
                        <i class="fa fa-file-o"></i>
                        ویرایش @Model.TaskTitle

                    </h4>
                </div>

                <div class="modal-body">
                    <div class="form-body">
                        <div id="alert_danger" class="alert alert-danger display-hide">
                            <button class="close" data-close="alert"></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>

                        <div class="row">
                            @if (Model.ResourceType == 4)
                            {
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            نام وظیفه
                                            <span class="required">
                                                *
                                            </span>
                                        </label>
                                        <div class="col-md-9">
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                <input type="text" taskId="@Model.TaskId" value="@Model.TaskTitle" name="taskTitle" id="taskTitle" class="form-control taskTitle" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-3">
                                            در راستای
                                            <span class="required">
                                                *
                                            </span>
                                        </label>
                                        <div class="col-md-9">
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                <select id="relatedWithTask" name="relatedWithTask" class="select2 select2-2 taskType form-control input-large"></select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (Model.ParticipantConfirmation ?? false)
                            {
                                <input type="hidden" id="evalParticipantId" value="@Model.EvaluationParticipantId" />
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-md-4">
                                            سایرارزیاب
                                            <span class="required">
                                                *
                                            </span>
                                        </label>
                                        <div class="col-md-8">
                                            <div class="input-icon right">
                                                <i class="fa"></i>
                                                <select id="participantId" name="participantId" class="select2 select2-2 participant form-control">
                                                    <option></option>
                                                    @foreach (var item2 in Model.EvaluationParticipants)
                                                    {
                                                        if (item2.PeopleId == Model.ParticipantId && item2.EvaluationHierarchyId == Model.ParticipantDepartmentId)
                                                        {
                                                            <option selected="selected" value="@item2.EvaluationHierarchyId-@item2.PeopleId"> @item2.fullname </option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@item2.EvaluationHierarchyId-@item2.PeopleId"> @item2.fullname </option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <fieldset>
                            <legend>شاخص ها</legend>
                            @if (Model.Criterias != null)
                            {
                                int i = 0;
                                @foreach (var item in Model.Criterias)
                                {
                                    i += 1;
                                    string criteriaId = "criteriaId" + i;
                                    string limitOfAdmission = "limitOfAdmission" + i;
                                    string calculationWay = "calculationWay" + i;
                                    string isProcessingCriteria = "isProcessingCriteria" + i;
                                    string checkedProcessingCriteria = "";
                                    @if (item.IsProcessingCriteria)
                                    {
                                        checkedProcessingCriteria = "checked";
                                    }

                                    <div class="row criteria">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="control-label col-md-2">
                                                    عنوان
                                                    <span class="required">
                                                        *
                                                    </span>
                                                </label>
                                                <div class="col-md-10">
                                                    <div class="input-icon right">
                                                        <i class="fa"></i>
                                                        <input type="text" criteriaId="@item.CriteriaId" value="@item.Title" name="@criteriaId" id="@criteriaId" class="form-control criteriaValidation" />
                                                    </div>

                                                </div>

                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="control-label col-md-3">
                                                    نحوه محاسبه
                                                    <span class="required">
                                                        *
                                                    </span>
                                                </label>
                                                <div class="col-md-9">
                                                    <div class="input-icon right">
                                                        <i class="fa"></i>
                                                        <input type="text" criteriaId="@item.CalculationWay" value="@item.CalculationWay" name="@calculationWay" id="@calculationWay" class="form-control criteriaValidation" />
                                                    </div>

                                                </div>

                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">
                                                    حد پذیرش
                                                    <span class="required">
                                                        *
                                                    </span>
                                                </label>
                                                <div class="col-md-8">
                                                    <div class="input-icon right">
                                                        <i class="fa"></i>
                                                        <input type="text" value="@item.LimitOfAdmission" name="@limitOfAdmission" id="@limitOfAdmission" class="form-control limitOfAdmissionValidation" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <div class="form-group">
                                                @*<label>Checkboxes</label>*@
                                                <div class="checkbox-list">
                                                    <label>
                                                        <input type="checkbox" class="processingCriteria" @checkedProcessingCriteria name="@isProcessingCriteria" id="@isProcessingCriteria"> شاخص شناسنامه فرآیند
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                @*<label class="control-label col-md-3">حذف</label>*@
                                                <div class="col-md-9">
                                                    <input type="checkbox" class="make-switch criteriaSwitch" checked data-text-label="حذف" data-on-label="<i class='fa fa-thumbs-down'></i>" data-off-label="<i class='fa fa-trash-o'></i>">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }

                            }
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <a href="#" id="addCriteriaBtn" class="btn green btn-add addCriteriaBtn">
                                            افزودن شاخص <i class="fa fa-plus"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div id="criteriaRow"></div>
                        </fieldset>
                        <fieldset>
                            <legend>نیازهای آموزشی</legend>
                            @if (Model.TrainingNeeds != null)
                            {
                                int j = 0;

                                <div class='row trainingNeedField'>
                                    @foreach (var item3 in Model.TrainingNeeds)
                                    {
                                        j += 1;
                                        string trainingNeedId = "trainingNeedId" + j;
                                        <div class="trainingNeedDiv col-md-4">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">
                                                    نیازآموزشی
                                                    <span class="required">
                                                        *
                                                    </span>
                                                </label>
                                                <div class="col-md-8">
                                                    <div class="input-icon right">
                                                        <i class="fa"></i>
                                                        <input type="text" trainingNeedId="@item3.TrainingNeedId" value="@item3.Title" name="@trainingNeedId" id="@trainingNeedId" class="form-control trainingNeedValidation" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                @*<label class="control-label col-md-3">حذف</label>*@
                                                <div class="col-md-9">
                                                    <input type="checkbox" class="make-switch trainingNeedSwitch" checked data-text-label="حذف" data-on-label="<i class='fa fa-thumbs-down'></i>" data-off-label="<i class='fa fa-trash-o'></i>">
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                        نیازهای آموزشی
                                        <span class="required">

                                        </span>
                                    </label>
                                    <div class="col-md-10">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <textarea id="tagEditorTrainingNeedId" name="tagEditorTrainingNeedId" class="form-control tag-editor-hidden-src tagEditorTrainingNeed"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <!-- END FORM-->
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn green input-sm input-small" id="updateEvaluationBTN">ذخيره</button>
                    <button type="button" class="btn red input-sm input-small" id="cancel11" data-dismiss="modal"><i class="fa fa-times"></i>انصراف</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
</form>

<script type="text/html" id="addCriteriaRow">
    <div class="row" index="{0}">
        <!--/span-->
        <div class="col-md-12">
            <div class="form-group">
                @*<label class="control-label col-md-1">
                    عنوان
                    <span class="required">
                        *
                    </span>
                </label>*@
                <div class="col-md-12">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <input type="text" name="criteriaTitle{0}" id="criteriaTitle{0}" class="form-control criteriaTitle" placeholder="عنوان" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @*<label class="control-label col-md-3">
                    نحوه محاسبه
                    <span class="required">
                        *
                    </span>
                </label>*@
                <div class="col-md-12">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <input type="text" name="calculationWay{0}" id="calculationWay{0}" class="form-control calculationWay" placeholder="نحوه محاسبه" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @*<label class="control-label col-md-4">
                    حد پذیرش
                    <span class="required">
                        *
                    </span>
                </label>*@
                <div class="col-md-12">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <input type="text" name="limitOfAdmission{0}" id="limitOfAdmission{0}" class="form-control limitOfAdmission" placeholder="حد پذیرش" />
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @*<label>Checkboxes</label>*@
                <div class="checkbox-list">
                    <label>
                        <input type="checkbox" name="isProcessingCriteriaInsertion{0}" id="isProcessingCriteriaInsertion{0}"> آیا از شاخص های شناسنامه فرآیند می باشد؟
                    </label>
                </div>
            </div>
        </div>
        <a href="#" index="{0}" class="btn btn-xs purple removeCriteriaBtnn">
            <i class="fa fa-times"></i>
        </a>
    </div>
    <hr />
</script>
<script>
    var citeriaRowIndex = 1000;

    $('.select2-2').select2({
        placeholder: "انتخاب کنید",
        allowClear: true
    });
    $('#UpdatetEvaluationModal').modal('show');
    var template4 = jQuery.validator.format($.trim($("#addCriteriaRow").html()));
    $('#addCriteriaBtn').click(function () {
        $(template4(citeriaRowIndex++)).appendTo($("#criteriaRow"));
        $('.criteriaTitle').each(function () {
            $(this).rules("add", {
                required: true,
                messages: {
                    required: "پرکردن این فیلد الزامی می باشد",
                }
            });
        });
        $('.limitOfAdmission').each(function () {
            $(this).rules("add", {
                required: true,
                messages: {
                    required: "پرکردن این فیلد الزامی می باشد",
                }
            });
        });
        $('.calculationWay').each(function () {
            $(this).rules("add", {
                required: true,
                messages: {
                    required: "پرکردن این فیلد الزامی می باشد",
                }
            });
        });
    });
    $("#tagEditorTrainingNeedId").tagEditor({
        placeholder: 'افزودن نیازهای آموزشی'
    });
    $("#UpdatetEvaluationFrm").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();
        //debugger;

        var form = $('#UpdatetEvaluationFrm');

        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                taskTitle: {
                    required: true
                },
                participantId: {
                    required: true
                },
                trainingNeedId1: {
                    required: true
                },
                relatedWithTask: {
                    required: true
            }
            },
            messages: {
                taskTitle: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                participantId: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                trainingNeedId1: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                relatedWithTask: {
                    required: "پر کردن این فیلد الزامی می باشد"
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })

        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {

            var EvaluationEditionView = {};
            var listOfCriteria = [];
            var listOfTrainingNeed = [];

            var criteriaDeletionList = [];
            var trainingNeedDeletionList = [];

            var listOfCriteriaInsertion = [];

            if ($("#taskTitle").length > 0) {
                EvaluationEditionView.TaskId = $("#taskTitle").attr("taskId");
                EvaluationEditionView.TaskTitle = $("#taskTitle").val();
            }
            EvaluationEditionView.ParentTaskId = $("#relatedWithTask").children('option:selected').val();
            EvaluationEditionView.EvaluationId = @Model.EvaluationId;

            if ($('#participantId').children('option:selected').length > 0) {
                EvaluationEditionView.ParticipantId = $('#participantId').children('option:selected').val().split("-")[1];
                EvaluationEditionView.ParticipantDepartmentId = $('#participantId').children('option:selected').val().split("-")[0];
                EvaluationEditionView.EvaluationParticipantId = $("#evalParticipantId").val();
            }
            if ($(".criteria").length > 0) {
                $(".criteria").each(function (i, d) {
                    var CriteriaView = {};

                    CriteriaView.CriteriaId = $(this).find("input[id^='criteriaId']").attr("criteriaId");
                    CriteriaView.Title = $(this).find("input[id^='criteriaId']").val();
                    CriteriaView.limitOfAdmission = $(this).find("input[id^='limitOfAdmission']").val();
                    CriteriaView.CalculationWay = $(this).find("input[id^='calculationWay']").val();
                    if ($(this).find('input[class~="criteriaSwitch"]').prop('checked') == false) {
                        criteriaDeletionList.push(CriteriaView.CriteriaId);
                    }
                    if ($(this).find('input[class~="processingCriteria"]').is(":checked")) {
                        CriteriaView.IsProcessingCriteria = 1;
                    } else {
                        CriteriaView.IsProcessingCriteria = 0;
                    }
                    listOfCriteria.push(CriteriaView);
                })
                EvaluationEditionView.CriteriaDeletion = criteriaDeletionList;
                EvaluationEditionView.CriteriaViews = listOfCriteria;
            }

            $("#criteriaRow div[class=row]").each(function (ii2, dd2) {
                    var CriteriaInsertionView = {};
                    CriteriaInsertionView.Title = $(dd2).find("input:eq(0)").val();
                    CriteriaInsertionView.CalculationWay = $(dd2).find("input:eq(1)").val();
                    CriteriaInsertionView.LimitOfAdmission = $(dd2).find("input:eq(2)").val();
                    if ( $(dd2).find("input:eq(3)").is(":checked")) {
                        CriteriaInsertionView.IsProcessingCriteria = 1;
                    } else {
                        CriteriaInsertionView.IsProcessingCriteria = 0;
                    }
                    listOfCriteriaInsertion.push(CriteriaInsertionView);
            })
            EvaluationEditionView.CriteriaInsertionViews = listOfCriteriaInsertion;

            if ($(".trainingNeedField input[type=text]").length > 0) {
                $(".trainingNeedField input[type=text]").each(function (i, d) {
                    var TrainingNeed = {};

                    TrainingNeed.TrainingNeedId = $(this).attr("trainingNeedId");
                    TrainingNeed.Title = $(this).val();

                    if ($(this).closest('div[class~="trainingNeedDiv"]').next().find('input[class~="trainingNeedSwitch"]').prop('checked') == false) {
                        trainingNeedDeletionList.push(TrainingNeed.TrainingNeedId);
                    }
                    listOfTrainingNeed.push(TrainingNeed);
                })
                EvaluationEditionView.TrainingNeedDeletion=trainingNeedDeletionList;
                EvaluationEditionView.TrainingNeeds = listOfTrainingNeed;
            }
            EvaluationEditionView.TrainingNeedInsertion = $("#tagEditorTrainingNeedId").val();
            console.log(EvaluationEditionView);

            //$("#articleSubmit").addClass('disabled');
            var btn = $("#updateEvaluationBTN");
            btn.button('loading');
            //var postdata = new FormData(this);
            //listOfSubTask = JSON.stringify(listOfSubTask);
            //var postdata = $(this).serializeArray();
            //postdata.append(JSON.stringify(listOfSubTask));
            //console.log(postdata);
            $.ajax(
                {
                    //data:postdata,
                    url: '/TaskAssignment/EditTaskAssignment',
                    //url : formURL,
                    //data: postdata,
                    data: JSON.stringify(EvaluationEditionView),
                    //data: "firstName=" + $("fn").val(),
                    //cache: false,
                    //contentType: false,
                    //processData: false,
                    datatype: 'json',
                    contentType: 'application/json; charset=utf-8',
                    type: 'POST',

                    success: function (data, textStatus, jqXHR) {
                        var message = "";
                        var message2 = "";

                        if (data.success > 0 || data.successDeletion>0) {
                            message += "<span>اطلاعات  مورد نظر با موفقیت ویرایش گردید</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.success(message);
                            dt.ajax.reload();
                            $("#UpdatetEvaluationFrm")[0].reset();
                            $("#UpdatetEvaluationModal").modal("hide");
                        }
                        else if (data.success == 0 || data.successDeletion>0) {
                            message += "<span>اطلاعات  مورد نظر ویرایش نگردید..</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        }
                         if (data.hasOwnProperty('requirement') && data.requirement == -1) {
                            message2 += "<span> شاخص/شاخص های مورد نظر حذف نگردید زیرا وجود حداقل یک شاخص الزامی می باشد</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message2);
                        }
                        if (data.hasOwnProperty('DbUpdateException') && data.DbUpdateException !="") {
                            message2 += "<span>"+data.DbUpdateException+"</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message2);
                        }
                        //$("#periodDefinitionTable").DataTable().destroy();
                        //show_dataTable();
                        //dt.ajax.url("/TaskAssignment/GetAssignedTaskList");
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("erorr00000");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $("#updateEvaluationBTN").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $("#articleForm")[0].reset();
            //});
            e.preventDefault(e);
        }
    });

    var participantIdVal = $('#participantId').children('option:selected').val();
    var trainingNeedVal = $("#trainingNeedId1").val();
    var taskTitleVal = $("#taskTitle").val();

    $("#participantId").val("").select2();
    $("#trainingNeedId1").val("");
    $("#taskTitle").val("");
    $("#updateEvaluationBTN").trigger('click');
    $('.trainingNeedValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });

    $('.criteriaValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });

    $('.limitOfAdmissionValidation').each(function (i, d) {
        $(this).rules("add", {
            required: true,
            messages: {
                required: "پرکردن این فیلد الزامی می باشد",
            }
        });
    });
    $("#updateEvaluationBTN").trigger('click');
    $("#participantId").val(participantIdVal).select2();
    $("#trainingNeedId1").val(trainingNeedVal);
    $("#taskTitle").val(taskTitleVal);
    $('#criteriaRow').on('click', '.removeCriteriaBtnn', function () {
        $(this).closest('div.row').next().remove();
        $(this).closest('div.row').remove();
    })
    $.ajax({
            type: 'get',
            url: '/TaskAssignment/RelatedTaskList',
            data: { departmentId: @Model.AllocatorDepartmentId },
            async: false,
            success: function (data) {
                //$("select" + param).empty();
                $("#relatedWithTask").append("<option></option>");

                $(data).each(function (i, d) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#relatedWithTask").append("<option value='" + d.taskId + "'>" + d.title + "</option>");
                })

                $("#relatedWithTask").val(@Model.ParentTaskId).select2();
            },
            error: function (status) {
                alert("Error");
            }
    })

</script>
