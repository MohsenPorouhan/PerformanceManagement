@{
    Layout = null;
}
<div class="modal fade department modalClass" id="scoreAssignmentModal" tabindex="" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content">
            <div class="modal-header bg-blue">
                <button type="button" id="modal-close" class="close"
                        data-dismiss="modal" aria-hidden="true"></button>
                <h4 id="sabt_hazine_personnel" class="modal-title">
                    <i class="fa fa-file-o"></i>
                    مشاهده نمره
                </h4>
            </div>

            <div class="modal-body">
                <div class="form-body" id="scoreTbl">

                </div>
                <!-- END FORM-->
            </div>

            <div class="modal-footer">
                <button type="button" class="btn green input-sm input-small" id="cancel11" data-dismiss="modal"><i class="fa fa-times"></i>بستن</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<script>
    //  $(document).ready(function () {

    var isTrue = false;
    var finalResult = false;
    var row;
    var coacherId;
    var allocatorLevel;
    var coacherLevell
    $.ajax({
        type: 'get',
        url: '/Share/GetCurrentUserInfo',
        async: false,
        success: function (data) {
            coacherId = data;
        },
        error: function (status) {
            alert("Error");
        }
    })

    var type;
    var length = dt.rows('.selected').data().length;
    var selector;
    if (length > 0) {
        selector = "#competencyAssignmentTable >tbody>tr.selected";
    } else {
        selector = "#competencyAssignmentTable >tbody>tr";
    }
    $(selector).each(function (i, tr) {
        row = dt.row(tr);
        if (row.data().Levell == 2 && ((row.data().AllocatorPersonId == coacherId) || row.data().allocatorRoleName == "HRAdmin")) {
            $.ajax({
                url: '/BehaviouralCompetencyAssignment/GetScore',
                data: {
                    evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                    , hasParticipant: row.data().hasParticipant
                    , participantConfirmation: row.data().participantConfirmation
                    , type: 1
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult = true;
        }
        else if (row.data().Levell >= 3 && (row.data().allocatorRoleName == "HRAdmin")) {
            $.ajax({
                url: '/BehaviouralCompetencyAssignment/GetScore',
                data: {
                    evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                    , hasParticipant: row.data().hasParticipant
                    , participantConfirmation: row.data().participantConfirmation
                    , type: 2
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult = true;
        }
        else if (row.data().Levell >= 3 && row.data().AllocatorEvaluationBehaviouralHierarchyId == row.data().parent && row.data().allocatorRoleName != "HRAdmin") {
            $.ajax({
                url: '/BehaviouralCompetencyAssignment/GetScore',
                data: {
                    evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                    , hasParticipant: row.data().hasParticipant
                    , participantConfirmation: row.data().participantConfirmation
                    , type: 2
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult = true;
        }
        else if (row.data().Levell >= 3 && (row.data().AllocatorPersonId == coacherId && row.data().allocatorRoleName != "HRAdmin")) {
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: row.data().AllocatorPersonId
                    , coacherDepartmentId: row.data().AllocatorEvaluationBehaviouralHierarchyId
                    , departmentId: row.data().RecieverAllocationEvaluationBehaviouralHierarchyId
                    , personId: row.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    console.log(data)
                    allocatorLevel = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            $.ajax({
                url: '/BehaviouralCompetencyAssignment/GetScore',
                data: {
                    evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                    , hasParticipant: row.data().hasParticipant
                    , participantConfirmation: row.data().participantConfirmation
                    , type: 4
                    , coacherLevel: (4-allocatorLevel)
                },
                //contentType: 'aplication/json;charset=utf-8',
                type: "POST",
                datatype: 'html',
                async: false,
                success: function (data) {
                    $('#scoreTbl').html(data);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert("Error");
                }
            })
            finalResult = true;
        }
        else {
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: row.data().AllocatorPersonId
                    , coacherDepartmentId: row.data().AllocatorEvaluationBehaviouralHierarchyId
                    , departmentId: row.data().RecieverAllocationEvaluationBehaviouralHierarchyId
                    , personId: row.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    allocatorLevel = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            $.ajax({
                type: 'get',
                url: '/Share/AllocatorLevel',
                async: false,
                data: {
                    coacherId: coacherId
                    , coacherDepartmentId: $('#departmentId').children('option:selected').val()
                    , departmentId: row.data().RecieverAllocationEvaluationBehaviouralHierarchyId
                    , personId: row.data().RecieverAllocationPersonId
                },
                success: function (data) {
                    coacherLevell = data[0].Levell;
                },
                error: function (status) {
                    alert("Error");
                }
            })
            if (row.data().Levell >= 3 && (row.data().AllocatorPersonId != coacherId && row.data().allocatorRoleName != "HRAdmin" && row.data().AllocatorEvaluationBehaviouralHierarchyId != row.data().parent) && coacherLevell <= allocatorLevel) {
                finalResult = true;
                $.ajax({
                    url: '/BehaviouralCompetencyAssignment/GetScore',
                    data: {
                        evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                        , hasParticipant: row.data().hasParticipant
                        , participantConfirmation: row.data().participantConfirmation
                        , type: 5
                        , coacherLevel: (4-allocatorLevel)
                    },
                    //contentType: 'aplication/json;charset=utf-8',
                    type: "POST",
                    datatype: 'html',
                    async: false,
                    success: function (data) {
                        $('#scoreTbl').html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Error");
                    }
                })
            }
        }
    })
    if (!finalResult) {
        alert("مجاز به مشاهده نمرات شایستگی مورد نظر نمی باشید.");
    } else if (finalResult) {
        $('#scoreAssignmentModal').modal('show');
    }
</script>