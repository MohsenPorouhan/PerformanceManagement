@{
    Layout = null;
}

<form method="post" id="competencyAssignmentFrm" class="form-horizontal">
    <div class="modal fade department modalClass" id="competencyAssignModal" aria-hidden="true" data-backdrop="static">
        <div class="modal-dialog modal-wide">
            <div class="modal-content">
                <div class="modal-header bg-blue">
                    <button type="button" id="modal-close" class="close"
                            data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">
                        <i class="fa fa-file-o"></i>
                        اختصاص شایستگی رفتاری
                    </h4>
                </div>

                <div class="modal-body">
                    <div class="form-body">

                        <div id="alert_danger" class="alert alert-danger display-hide">
                            <button class="close" data-close="alert"></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                         دوره
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="periodDefinitionId" id="periodDefinitionId" class="form-control input-medium"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                         مسئولیت واحد سازمانی
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="departmentSupervisor" id="departmentSupervisor" class="form-control input-medium"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <!--/span-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="mojri_name_label" class="control-label col-md-3">
                                        کارمندان
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="subSetEmployeeId" id="subSetEmployeeId" class="select2 selectt2 form-control input-medium" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="mojri_name_label" class="control-label col-md-3">
                                        راهنما
                                    </label>
                                    <div class="col-md-9">
                                        <a class="btn btn-sm blue" target="_blank" href="/guideFile/competencyModel.pdf"><i class="fa fa-file-o"></i>  سند شایستگی</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                         شایستگی رفتاری
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="behaviourCompetency" id="behaviourCompetency" class="form-control select2 selectt2 input-medium" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6" hidden="hidden">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        تعیین سایر ارزیاب
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="participant" id="participant" class="form-control select2 selectt2 input-medium"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        افزودن مصادیق
                                        <span class="required">

                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <textarea id="tagEditorTruth" name="tagEditorTruth" class="form-control tag-editor-hidden-src"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- END FORM-->
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn green input-sm input-small" id="competencyAssignBTN">ذخيره</button>
                    <button type="button" class="btn red input-sm input-small" id="cancel2" data-dismiss="modal"><i class="fa fa-times"></i>انصراف</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <div id="critriaModalPlaceHolder"></div>
</form>
<script>
    $(document).ready(function () {
        $('#competencyAssignModal').modal('show');
        $('#tagEditorCompetency').tagEditor({
            placeholder: 'آیتم های مورد نظر را تایپ نمایید',
            maxLength: [1000],
            clickDelete: true
            //beforeTagDelete: function (field, editor, tags, val) {
            //    var q = confirm('Remove tag "' + val + '"?');
            //    if (q) $('#response').prepend('Tag ' + val + ' deleted.');
            //    else $('#response').prepend('Removal of ' + val + ' discarded.');
            //    return q;
            //}
        });
        $('#tagEditorTruth').tagEditor({
            placeholder: 'آیتم های مورد نظر را تایپ نمایید',
            maxLength: [1000],
            clickDelete: true
            //beforeTagDelete: function (field, editor, tags, val) {
            //    var q = confirm('Remove tag "' + val + '"?');
            //    if (q) $('#response').prepend('Tag ' + val + ' deleted.');
            //    else $('#response').prepend('Removal of ' + val + ' discarded.');
            //    return q;
            //}
        });
        $('.selectt2').select2({
            placeholder: "انتخاب کنید",
            allowClear: true
        });
        $.ajax({
            type: 'get',
            url: '/share/GetPeriodDefinition',
            //data: { roleId: roleId },
            success: function (periodDefinition) {
                $("#periodDefinitionId").empty();
                //$("#periodDefinitionId").append("<option></option>");

                $(periodDefinition).each(function (i, p) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#periodDefinitionId").append("<option value='" + p.periodDefinitoionId + "'>" + p.periodTitle + " (" + p.periodCode + ")</option>");
                })
            },
            error: function (status) {
                alert("Error");
            }
        })
        $.ajax({
            type: 'get',
            url: '/TaskAssignment/GetDepartmentSupervisorList',
            async: true,
            //data: { roleId: roleId },
            success: function (department) {
                $("#departmentSupervisor").empty();
                $("#departmentSupervisor").append("<option></option>");

                $(department).each(function (i, d) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#departmentSupervisor").append("<option value='" + d.EvaluationHierarchyId + "-" + d.PeopleId + "'>" + d.ShortName + "</option>");
                    if (d.PositionType == 1) {
                        $("#departmentSupervisor").val(d.EvaluationHierarchyId + "-" + d.PeopleId);
                        $("#departmentSupervisor").trigger('change');
                    }
                })
            },
            error: function (status) {
                alert("Error");
            }
        })
        function formatResult2(node) {
            var level = 0;
            var $result
            if (node.element !== undefined) {
                level = (node.element.className);
                if (level.trim() !== '') {
                    level = (parseFloat(level.match(/\d+/)[0]));
                }

                if (node.element.className == 'level_0' || node.element.className == 'level_1') {
                    $result = $('<span style="padding-right:' + (20 * level) + 'px;font-weight: bold;" > ' + node.text + '</span>');
                } else {
                    $result = $('<span style="padding-right:' + (20 * level) + 'px;" > ' + node.text + '</span>');

                }
            }


            return $result;
        }
        function buildHierarchy2(arry) {

            var roots = [], children = {};

            // find the top level nodes and hash the children based on parent
            for (var i = 0, len = arry.length; i < len; ++i) {
                var item = arry[i],
                    p = item.parent,
                    target = !p ? roots : (children[p] || (children[p] = []));
                target.push({ value: item });
            }

            // function to recursively build the tree
            var findChildren2 = function (parent) {
                if (children[parent.value.EvaluationHierarchyId]) {
                    parent.children = children[parent.value.EvaluationHierarchyId];
                    $(parent.children).each(function (i, p) {
                        //$("<option class='level_" + p.value.Levell + "' value='" + p.value.EvaluationHierarchyId + "'>" + p.value.text + "</option>").insertAfter("#subSetDepartmentIdDT option[value='" + parent.value.EvaluationHierarchyId + "']");
                        if ($("#subSetEmployeeId option[parent='" + p.value.parent + "']:last").length > 0) {
                            $("<option val=" + p.value.EvalHierarchyId + " parent=" + parent.value.EvaluationHierarchyId + " class='level_" + p.value.Levell + "' value='" + p.value.EvalHierarchyId + '-' + p.value.PeopleId + "'>" + p.value.text + "</option>").insertAfter("#subSetEmployeeId option[parent='" + p.value.parent + "']:last");
                        } else {
                            $("<option val=" + p.value.EvalHierarchyId + " parent=" + parent.value.EvaluationHierarchyId + " class='level_" + p.value.Levell + "' value='" + p.value.EvalHierarchyId + '-' + p.value.PeopleId + "'>" + p.value.text + "</option>").insertAfter("#subSetEmployeeId option[val='" + p.value.parent + "']");
                        }

                    })
                    for (var i = 0, len = parent.children.length; i < len; ++i) {

                        findChildren2(parent.children[i]);
                    }
                }
            };

            // enumerate through to handle the case where there are multiple roots
            for (var i = 0, len = roots.length; i < len; ++i) {
                $(roots).each(function (i, p) {
                    $("#subSetEmployeeId").append("<option val=" + p.value.EvalHierarchyId + "  parent=" + p.value.EvaluationHierarchyId + " class='level_" + p.value.Levell + "' value='" + p.value.EvalHierarchyId + '-' + p.value.PeopleId + "'>" + p.value.text + "</option>");
                })
                findChildren2(roots[i]);
            }

            return roots;
        }

        $('#departmentSupervisor').on('change', function () {
            //if ($('#periodDefinitionIdDT').children('option:selected').val() == "" && $('#departmentId').children('option:selected').val() != "") {
            //    dt.ajax.url("/AssignTask/GetTaskAssignmentList");
            //    dt.ajax.reload();
            //}
            ///////////////////////Begin--------From third period we deactivate InDirectEmployees 
            //$.ajax({
            //    type: 'get',
            //    url: '/TaskAssignment/GetInDirectEmployees',
            //    data: {
            //        departmentId: $('#departmentSupervisor').children('option:selected').val().split("-")[0],
            //        peopleId: $('#departmentSupervisor').children('option:selected').val().split("-")[1]
            //    },
            //    success: function (DepartmentResponsibilty) {
            //        $("#subSetEmployeeId").empty();
            //        $("#subSetEmployeeId").append("<option></option>");


            //        var items = DepartmentResponsibilty;
            //        buildHierarchy2(items);
            //        $("#subSetEmployeeId option[class='level_0']").attr("disabled", "disabled");
            //        //$("#subSetEmployeeId option[class='level_1']").attr("disabled", "disabled");

            //        $('#subSetEmployeeId').select2({
            //            placeholder: "انتخاب واحد زیر مجموعه",
            //            allowClear: true,
            //            width: "300px",
            //            templateResult: formatResult2
            //        });
            //    },
            //    error: function (status) {
            //        alert("Error");
            //    }
            //})
            ///////////////////////End--------From third period we deactivate InDirectEmployees 

            ///////////////////////Begin--------From third period we activate DirectEmployees 
            $.ajax({
                type: 'get',
                url: '/TaskAssignment/GetDirectEmployee',
                data: {
                    departmentId: $('#departmentSupervisor').children('option:selected').val().split("-")[0],
                    peopleId: $('#departmentSupervisor').children('option:selected').val().split("-")[1]
                },
                success: function (data) {
                    $("#subSetEmployeeId").empty();
                    $("#subSetEmployeeId").append("<option></option>");

                    $(data).each(function (i, d) {
                        //$("#parentName").select2("val", d.departmentId);
                        $("#subSetEmployeeId").append("<option value='" + d.EvaluationHierarchyId + "-" + d.PeopleId + "'>" + d.fullname + "</option>");
                    })
                },
                error: function (status) {
                    alert("Error");
                }
            })
            ///////////////////////End--------From third period we activate DirectEmployees
        });

        $.ajax({
            type: 'get',
            url: '/share/BehaviouralCompetencyList',
            //data: { roleId: roleId },
            success: function (data) {
                $("#behaviourCompetency").empty();
                $("#behaviourCompetency").append("<option></option>");

                $(data).each(function (i, d) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#behaviourCompetency").append("<option value='" + d.behaviouralCompetencyId + "'>" + d.title + "</option>");
                })
            },
            error: function (status) {
                alert("Error");
            }
        })
        $.ajax({
            type: 'get',
            url: '/share/ParticipantList',
            //data: { roleId: roleId },
            success: function (data) {
                $("#participant").empty();
                $("#participant").append("<option></option>");

                $(data).each(function (i, d) {
                    //$("#parentName").select2("val", d.departmentId);
                    $("#participant").append("<option value='" + d.EvaluationHierarchyId + '-' + d.PeopleId + "'>" + d.fullname + "</option>");
                })
            },
            error: function (status) {
                alert("Error");
            }
        })


        $("#competencyAssignmentFrm").submit(function (e) {
            //alert('dpCreationSubmit');
            //var postdata2 = $(this).serializeArray();
            //debugger;

            var form = $('#competencyAssignmentFrm');

            form.validate({
                //console.log($('#registerform').serializeArray());
                errorElement: 'span', //default input error message container
                errorClass: 'help-block', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",
                rules: {
                    periodDefinitionId: {
                        required: true
                    },
                    departmentSupervisor: {
                        required: true
                    },
                    subSetEmployeeId: {
                        required: true
                    },
                    behaviourCompetency: {
                        required: true
                    }
                },
                messages: {
                    periodDefinitionId: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    departmentSupervisor: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    subSetEmployeeId: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    behaviourCompetency: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit
                    //                    success2.hide();
                    //                    error2.show();
                    //                    App.scrollTo(error2, -200);
                },
                errorPlacement: function (error, element) { // render error placement for each input type
                    var icon = $(element).parent('.input-icon').children('i');
                    icon.removeClass('fa-check').addClass("fa-warning");
                    icon.attr("data-original-title", error.text()).tooltip();
                },
                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight

                },

                success: function (label, element) {
                    var icon = $(element).parent('.input-icon').children('i');
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    icon.removeClass("fa-warning").addClass("fa-check");
                },

                submitHandler: function (form) {
                    //                    success2.show();
                    //                    error2.hide();
                }
            })
            if (form.valid() == false) {
                //console.log($('#registerform').serializeArray());
                return false;
            } else {
                //$("#articleSubmit").addClass('disabled');
                $("#competencyAssignBTN").attr("disabled", "disabled");
                var btn = $("#competencyAssignBTN");
                btn.button('loading');
                var postdata = new FormData(this);
                //listOfSubTask = JSON.stringify(listOfSubTask);
                //var postdata = $(this).serializeArray();
                //postdata.append(JSON.stringify(listOfSubTask));
                //console.log(postdata);
                $.ajax(
                    {
                        //data:postdata,
                        url: '/BehaviouralCompetencyAssignment/BehaviouralCompetencyAssignment',
                        //datatype: 'json',
                        //url : formURL,
                        //data: postdata2,
                        data: postdata,
                        //data: "firstName=" + $("fn").val(),
                        cache: false,
                        contentType: false,
                        processData: false,
                        type: "post",

                        success: function (data, textStatus, jqXHR) {
                            var message = "";
                            var duplicate = "";
                            if (data.result > 0) {
                                message += "<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>";
                                toastr.options.timeOut = "15000";
                                toastr.options.positionClass = "toast-top-center";
                                toastr.success(message);
                                // dt.ajax.url("/TaskAssignment/GetAssignedTaskList");
                                dt.ajax.reload();
                            }
                            else if (data.result == 0) {
                                message += "<span>اطلاعات  مورد نظر ثبت نگردید..</span><br><br>";
                                toastr.options.timeOut = "15000";
                                toastr.options.positionClass = "toast-top-center";
                                toastr.info(message);
                            }
                            if (data.duplicate != "") {
                                $(data.duplicate).each(function (i, m) {
                                    duplicate += "<span>  " + m + "  </span><br><br>";
                                })
                                toastr.options.timeOut = "15000";
                                toastr.options.positionClass = "toast-top-center";
                                toastr.info(duplicate);
                            }

                            if (data.notAuthorized) {
                                message = "کاربر گرامی جهت تخصیص با سمت سازمانی مورد نظر در بازه زمانی مجاز اقدام نمایید.";
                                toastr.options.timeOut = "15000";
                                toastr.options.positionClass = "toast-top-center";
                                toastr.info(message);
                            }
                            //resetFormValidation();
                            //$("#competencyAssignmentFrm")[0].reset();
                            //$("#taskAssignmentTable").DataTable().destroy();
                            //show_dataTable();
                            $("#competencyAssignModal").modal("hide");
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("erorr00000");
                            alert(jqXHR);
                            alert(textStatus);
                        }
                    }).always(function () {
                        $("#competencyAssignBTN").button('reset');
                    });
                //$.getScript('/assets/javascript/articleForm.js', function () {
                //    ArticleForm.init(postdata);
                //    $("#articleForm")[0].reset();
                //});
                e.preventDefault(e);
            }
        });
    });
</script>