@{
    Layout = null;
}
<form method="post" id="switchDepartment" action="/EvaluationHierarchy/SwitchDepartment" class="form-horizontal modalClass">
    <div class="row switch_department">
        <!--/span-->
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-5">
                    واحد مورد نظر
                    <span class="required">
                        *
                    </span>
                </label>
                <div class="col-md-7">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <select name="selectedDepartment2" id="selectedDepartment2" class="select2 form-control input-sm input-small"></select>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-5">
                    نام واحد پدر
                    <span class="required">
                        *
                    </span>

                </label>
                <div class="col-md-7">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <select name="parentName2" id="parentName2" class="parentNamee2 select2 form-control input-sm input-small"></select>
                    </div>
                </div>
            </div>
        </div>
        <!--/span-->
    </div>

    <div class="row switch_department">
        <!--/span-->
        <div class="col-md-6">
            <div class="form-group">
                <label id="mojri_name_label" class="control-label col-md-5">
                    واحد اصلی/فرعی
                    <span class="required">
                        *
                    </span>
                </label>
                <div class="col-md-7">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <select name="positionType2" id="positionType2"
                                class="select2 form-control input-sm input-small">
                            <option></option>
                            <option value="1">واحد اصلی</option>
                            <option value="2">واحد فرعی</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-5">
                    رده سازمانی
                    <span class="required">
                        *
                    </span>
                </label>
                <div class="col-md-7">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <select name="positionId3" id="positionId3"
                                class="select2 form-control input-sm input-small">
                            <option></option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <!--/span-->
    </div>
    <div class="row switch_department">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-5">
                    نوع واحد
                    <span class="required">
                        *
                    </span>
                </label>
                <div class="col-md-7">
                    <div class="input-icon right">
                        <i class="fa"></i>
                        <select id="department_type2" name="departmentType2" class="form-control input-sm input-small">
                            <option></option>
                            <option value="1">انتصاب مستقیم فقط 1 نفر</option>
                            <option value="2">انتصاب مستقیم بیش از 1 نفر</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    $(".modal-dialog").draggable({
        handle: ".modal-header"
    });
    $(".modal-header").css("cursor", "move");
    $(".ChangeSupervisorPartialbtn").click(function () {
        //alert('switchDepartmnetPlaceHolder');
        var cause2 = $('#department_cause').children('option:selected').val();
        if (cause2 == "3") {
            debugger;
            var form = $('#switchDepartment');
            form.validate({
                //console.log($('#registerform').serializeArray());
                errorElement: 'span', //default input error message container
                errorClass: 'help-block', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",
                rules: {
                    selectedDepartment2: {
                        required: true
                    },
                    parentName2: {
                        required: true
                    },
                    positionType2: {
                        required: true
                    },
                    positionId3: {
                        required: true
                    },
                    departmentType2: {
                        required: true
                    }
                },
                messages: {
                    selectedDepartment2: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    parentName2: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    positionType2: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    positionId3: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    },
                    departmentType2: {
                        required: "پر کردن این فیلد الزامی می باشد"
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit
                    //                    success2.hide();
                    //                    error2.show();
                    //                    App.scrollTo(error2, -200);
                },
                errorPlacement: function (error, element) { // render error placement for each input type
                    var icon = $(element).parent('.input-icon').children('i');
                    icon.removeClass('fa-check').addClass("fa-warning");
                    icon.attr("data-original-title", error.text()).tooltip();
                },
                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight

                },

                success: function (label, element) {
                    var icon = $(element).parent('.input-icon').children('i');
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    icon.removeClass("fa-warning").addClass("fa-check");
                },

                submitHandler: function (form) {
                    //                    success2.show();
                    //                    error2.hide();
                }
            })
            if (form.valid() == false) {
                //console.log($('#registerform').serializeArray());
                return false;
            } else {
                // $("#articleSubmit").addClass('disabled');
                $("#dpCreationSubmit").attr("disabled", "disabled");
                var btn = $("#dpCreationSubmit");
                btn.button('loading');
                console.log("setup");
                //var postdata = new FormData(this);
                var postdata = $("#switchDepartment").serializeArray();
                console.log(postdata);
                $.ajax(
                    {
                        //data:postdata,
                        url: "/EvaluationHierarchy/SwitchDepartment?departmentCause=" + cause2,
                        //url : formURL,
                        //                        data: postdata2,
                        data: postdata,
                        //cache: false,
                        //contentType: false,
                        //processData: false,
                        type: "post",

                        success: function (data, textStatus, jqXHR) {
                            ;
                            //if ($.trim(data) === "yess")
                            //alert("That's one I wanted. Excellent")
                            //if (data > 0) {
                            //    toastr.options.timeOut = "8000";
                            //    toastr.options.positionClass = "toast-top-center";
                            //    toastr.success("اطلاعات مورد نظر با موفقیت ویرایش گردید.");
                            //    //$('#treeview').jstree(true).refresh(true);
                            //    $('#treeview').jstree("destroy");
                            //    show_jstree();
                            //}

                            $(data).each(function (i, d) {
                                if (d.hasOwnProperty('successfully') && d.successfully > 0) {
                                    toastr.options.timeOut = "8000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.success("اطلاعات مورد نظر با موفقیت ثبت گردید.");
                                    //$('#treeview').jstree(true).refresh(true);
                                    $('#treeview').jstree("destroy");
                                    show_jstree();
                                }
                                if (d.hasOwnProperty('notAllowedSameOriginDestination') && d.notAllowedSameOriginDestination != null) {
                                    toastr.options.timeOut = "15000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.info(d.notAllowedSameOriginDestination);
                                }
                                if (d.hasOwnProperty('moreThanOnePrimaryPositionType') && d.moreThanOnePrimaryPositionType != null) {
                                    toastr.options.timeOut = "15000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.info(d.moreThanOnePrimaryPositionType);
                                }
                                if (d.hasOwnProperty('notAllowedSameParent') && d.notAllowedSameParent != null) {
                                    toastr.options.timeOut = "15000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.info(d.notAllowedSameParent);
                                }
                                if (d.hasOwnProperty('notAllowedMoreThan6Level') && d.notAllowedMoreThan6Level != null) {
                                    toastr.options.timeOut = "15000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.info(d.notAllowedMoreThan6Level);
                                }
                                if (d.hasOwnProperty('notAllowedShiftParentToChild') && d.notAllowedShiftParentToChild != null) {
                                    toastr.options.timeOut = "15000";
                                    toastr.options.positionClass = "toast-top-center";
                                    toastr.info(d.notAllowedShiftParentToChild);
                                }
                            });

                            $("#switchDepartment")[0].reset();
                            $("#department_creation").modal("hide")
                            resetFormValidation();
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert("erorr");
                            alert(jqXHR);
                            alert(textStatus);
                        }
                    }).always(function () {
                        $("#dpCreationSubmit").button('reset');
                    });
                //$.getScript('/assets/javascript/articleForm.js', function () {
                //    ArticleForm.init(postdata);
                //    $("#articleForm")[0].reset();
                //});
                //e.preventDefault(e);
            }
        }
    });

    $('#switchDepartmentPlaceHolder .select2').select2({
        placeholder: "انتخاب کنید",
        allowClear: true
    });

    $('.switch_department').hide();

    $('#department_cause').on('change', function () {
        if ($('#department_cause').children('option:selected').val() == "3") {
            $('.switch_department').show();
            $('.supervisor_change').hide();
            $('.department_creation').hide();


            $.ajax({
                type: 'get',
                url: '/EvaluationHierarchy/GetDepartment',
                //data: { roleId: roleId },
                success: function (department) {
                    $("#selectedDepartment2").empty();
                    $("#selectedDepartment2").append("<option></option>");
                    debugger;

                    $(department).each(function (i, d) {
                        //$("#selectedDepartment").select2("val", d.departmentId);
                        $("#selectedDepartment2").append("<option value='" + d.departmentId + "'>" + d.shortName + "</option>");
                    })
                },
                error: function (status) {
                    alert("Error");
                }
            })
            $.ajax({
                type: 'get',
                url: '/EvaluationHierarchy/GetPositionList',
                //data: { roleId: roleId },
                success: function (people) {
                    $("#positionId3").empty();
                    $("#positionId3").append("<option></option>");
                    debugger;

                    $(people).each(function (i, p) {
                        $("#positionId3").append("<option value='" + p.jobId + "'>" + p.title + "</option>");
                    })
                },
                error: function (status) {
                    alert("Error");
                }
            })
        }
    })

    $.ajax({
        type: 'get',
        url: '/EvaluationHierarchy/GetDepartment',
        //data: { roleId: roleId },
        success: function (department) {
            $("#parentName2").empty();
            $("#parentName2").append("<option></option>");
            debugger;

            $(department).each(function (i, d) {
                //$("#parentName").select2("val", d.departmentId);
                $("#parentName2").append("<option value='" + d.departmentId + "'>" + d.shortName + "</option>");
            })
        },
        error: function (status) {
            alert("Error");
        }
    })
</script>