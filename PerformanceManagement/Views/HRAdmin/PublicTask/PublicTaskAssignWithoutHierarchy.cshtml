@{
    Layout = null;
}

<div class="modal fade" id="public_assign_without_hierarchy_modal" tabindex="" role="" aria-hidden="true">
    <div class="modal-dialog modal-wide">
        <div class="modal-content">
            <div class="modal-header bg-blue">
                <button type="button" id="modal-close" class="close"
                        data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">
                    <i class="fa fa-file-o"></i>
                    تخصیص وظایف عمومی
                </h4>
            </div>
            <form id="publicAssignWithoutHierarchyFrm" method="post" class="form-horizontal">
                <div class="modal-body">
                    <!-- BEGIN FORM-->
                    <div class="form-body">

                        <div id="alert_danger" class="alert alert-danger display-hide">
                            <button class="close" data-close="alert"></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
                        <div class="alert alert-block alert-info fade in">
                            <button type="button" class="close" data-dismiss="alert"></button>
                            <h4 class="alert-heading">روش وزن دهی</h4>
                            <p id="weightWayInfo">

                            </p>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        انتخاب دوره
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="periodDefinitionId" id="periodDefinitionId" class="form-control input-medium"></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        انتخاب کارمند/کارمندان
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="employee" id="employee" class="form-control select2 input-medium" multiple>
                                                <option></option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        انتخاب وظیفه عمومی
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>
                                            <select name="publicTask" id="publicTask" class="form-control select2 input-medium" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!--/span-->
                            <!--/span-->
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label id="mojri_name_label" class="control-label col-md-3">
                                        تعیین وزن
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <div class="input-icon right">
                                            <i class="fa"></i>

                                            <input type="text" name="taskWeight" id="taskWeight" class="form-control input-medium" placeholder="تعیین وزن">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6" hidden>
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        تعیین سایر ارزیاب
                                        <span class="required">
                                            *
                                        </span>
                                    </label>
                                    <div class="col-md-9">
                                        <i class="fa"></i>
                                        <select name="participant" id="participant" class="form-control select2 input-medium"></select>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                            <!--/span-->
                        </div>
                        <!--/row-->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn green input-sm input-small" id="publicTaskWhithoutHierarchySubmit">ذخيره</button>
                    <button type="button" class="btn red input-sm input-small" id="cancel" data-dismiss="modal"><i class="fa fa-times"></i>انصراف</button>
                </div>
            </form>
            <!-- END FORM-->
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<script>
    $("#public_assign_without_hierarchy_modal").modal('show');
    $('.select2').select2({
        placeholder: "انتخاب کنید",
        allowClear: true
    });

    $.ajax({
        type: 'get',
        url: '/share/GetPeriodDefinition',
        //data: { roleId: roleId },
        async: true,
        success: function (periodDefinition) {
            $("#periodDefinitionId").empty();
            $("#periodDefinitionId").append("<option></option>");

            $(periodDefinition).each(function (i, p) {
                //$("#parentName").select2("val", d.departmentId);
                $("#periodDefinitionId").append("<option value='" + p.periodDefinitoionId + "'>" + p.periodTitle + " (" + p.periodCode + ")</option>");
            })
        },
        error: function (status) {
            alert("Error");
        }
    })
    $.ajax({
        type: 'get',
        url: '/share/PublicTaskList',
        //data: { roleId: roleId },
        async: true,
        success: function (data) {
            $("#publicTask").empty();
            $("#publicTask").append("<option></option>");

            $(data).each(function (i, d) {
                //$("#parentName").select2("val", d.departmentId);
                $("#publicTask").append("<option value='" + d.taskId + "'>" + d.title + "</option>");
            })
        },
        error: function (status) {
            alert("Error");
        }
    })
   
    $.ajax({
        type: 'post',
        url: '/share/GetAllEmployeeDepartment',
        async: true,
        success: function (department) {
            $(department).each(function (i, d) {
                //$("#parentName").select2("val", d.departmentId);
                $("#employee").append("<option value='" + d.EvaluationHierarchyId + '-' + d.PeopleId + "'>" + d.FullName + "</option>");
            })
        },
        error: function (status) {
            alert("Error");
        }
    })

    $.ajax({
        type: 'get',
        url: '/share/ParticipantList',
        //data: { roleId: roleId },
        async: true,
        success: function (data) {
            $("#participant").empty();
            $("#participant").append("<option></option>");

            $(data).each(function (i, d) {
                //$("#parentName").select2("val", d.departmentId);
                $("#participant").append("<option value='" + d.EvaluationHierarchyId + '-' + d.PeopleId + "'>" + d.fullname + "</option>");
            })
        },
        error: function (status) {
            alert("Error");
        }
    })

    var weightWay = "";
    var numberScaleList = [];
    $.ajax({
        type: 'get',
        url: '/Share/GetTaskWeightWay',
        //data: { periodDefinitionId: 4 },
        async: false,
        success: function (data) {
            weightWay = data;
            if (data == 1) {
                $("#weightWayInfo").html("وزن دهی به صورت درصدی و بازه مجاز از 1 تا 100 می باشد.");
            } else if (data == 2) {
                $.ajax({
                    type: 'get',
                    url: '/Share/GetWeightLikertScale',
                    //data: { periodDefinitionId: 4 },
                    async: false,
                    success: function (data) {
                        $("#weightWayInfo").html("وزن دهی به صورت طیف لیکرت می باشد. و بازه های مجاز جهت وزن دهی ");
                        $(data).each(function (i, d) {
                            numberScaleList.push(d.numberScale);
                            $("#weightWayInfo").append(d.numberScale + ":" + d.titleScale + "  ");
                        });
                    },
                    error: function (status) {
                        alert("Error");
                    }
                })
            }
        },
        error: function (status) {
            alert("Error");
        }
    })
    var min;
    var max;
    var message;
    if (weightWay == 1) {
        min = 1;
        max = 100;
        message = "لطفا عددی بین 1 تا 100 وارد نمایید";
    } else if (weightWay == 2) {
        min = Math.min.apply(Math, numberScaleList);
        max = Math.max.apply(Math, numberScaleList);
        message = "لطفا عددی بین " + Math.min.apply(Math, numberScaleList) + " تا " + Math.max.apply(Math, numberScaleList) + " وارد نمایید";
    }

    $("#publicAssignWithoutHierarchyFrm").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();
        //debugger;
        var form = $('#publicAssignWithoutHierarchyFrm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: "",
            rules: {
                periodDefinitionId: {
                    required: true
                },
                employee: {
                    required: true
                },
                publicTask: {
                    required: true
                },
                taskWeight: {
                    required: true,
                    range: [min, max]
                }
            },
            messages: {
                periodDefinitionId: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                employee: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                publicTask: {
                    required: "پر کردن این فیلد الزامی می باشد"
                },
                taskWeight: {
                    required: "پر کردن این فیلد الزامی می باشد",
                    range: message
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass("fa-warning");
                icon.attr("data-original-title", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass("fa-warning").addClass("fa-check");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {
            //$("#articleSubmit").addClass('disabled');
            $("#publicTaskWhithoutHierarchySubmit").attr("disabled", "disabled");
            var btn = $("#publicTaskWhithoutHierarchySubmit");
            btn.button('loading');
            var postdata = new FormData(this);
            //var postdata = $('#dpcreation').serializeArray();

            //console.log(postdata);
            $.ajax(
                {
                    //data:postdata,
                    url: "/PublicTask/PublicTaskAssign",
                    //url : formURL,
                    //data: postdata2,
                    data: postdata,
                    //data: "firstName=" + $("fn").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: "post",

                    success: function (data, textStatus, jqXHR) {
                        //if ($.trim(data) === "yess")
                        //alert("That's one I wanted. Excellent")
                        //alert(data);
                        var message = "";
                        var duplicate = "";
                        if (data.result > 0) {
                            message += "<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.success(message);
                        }
                        else if (data.result == 0) {
                            message += "<span>اطلاعات  مورد نظر ثبت نگردید..</span><br><br>";
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(message);
                        }
                        if (data.duplicate != "") {
                            $(data.duplicate).each(function (i, m) {
                                duplicate += "<span>  " + m + "  </span><br><br>";
                            })
                            toastr.options.timeOut = "15000";
                            toastr.options.positionClass = "toast-top-center";
                            toastr.info(duplicate);
                        }
                        $("#publicAssignWithoutHierarchyFrm")[0].reset();
                        //resetFormValidation();
                        $("#public_assign_without_hierarchy_modal").modal("hide");
                        //$("#periodDefinitionTable").DataTable().destroy();
                        //show_dataTable();
                        //dt.ajax.url("/BehaviouralCompetency/GetBehaviouralList");
                        dt.ajax.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("erorr00000");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $("#publicTaskWhithoutHierarchySubmit").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $("#articleForm")[0].reset();
            //});
            e.preventDefault(e);
        }
    });
</script>
