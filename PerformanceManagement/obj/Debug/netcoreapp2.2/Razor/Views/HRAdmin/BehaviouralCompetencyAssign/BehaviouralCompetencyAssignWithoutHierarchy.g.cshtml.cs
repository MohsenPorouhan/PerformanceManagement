#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\BehaviouralCompetencyAssign\BehaviouralCompetencyAssignWithoutHierarchy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "813f045436fc1e4a7e1da110dfaae76c801e4565"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_HRAdmin_BehaviouralCompetencyAssign_BehaviouralCompetencyAssignWithoutHierarchy), @"mvc.1.0.view", @"/Views/HRAdmin/BehaviouralCompetencyAssign/BehaviouralCompetencyAssignWithoutHierarchy.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/HRAdmin/BehaviouralCompetencyAssign/BehaviouralCompetencyAssignWithoutHierarchy.cshtml", typeof(AspNetCore.Views_HRAdmin_BehaviouralCompetencyAssign_BehaviouralCompetencyAssignWithoutHierarchy))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"813f045436fc1e4a7e1da110dfaae76c801e4565", @"/Views/HRAdmin/BehaviouralCompetencyAssign/BehaviouralCompetencyAssignWithoutHierarchy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_HRAdmin_BehaviouralCompetencyAssign_BehaviouralCompetencyAssignWithoutHierarchy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("behaviourAssignWithoutHierarchyFrm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\BehaviouralCompetencyAssign\BehaviouralCompetencyAssignWithoutHierarchy.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(27, 586, true);
            WriteLiteral(@"
<div class=""modal fade"" id=""competency_assign_without_hierarchy_modal"" tabindex="""" role="""" aria-hidden=""true"">
    <div class=""modal-dialog modal-wide"">
        <div class=""modal-content"">
            <div class=""modal-header bg-blue"">
                <button type=""button"" id=""modal-close"" class=""close""
                        data-dismiss=""modal"" aria-hidden=""true""></button>
                <h4 class=""modal-title"">
                    <i class=""fa fa-file-o""></i>
                    تخصیص شایستگی های رفتاری عمومی
                </h4>
            </div>
            ");
            EndContext();
            BeginContext(613, 6554, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "813f045436fc1e4a7e1da110dfaae76c801e45657064", async() => {
                BeginContext(697, 2678, true);
                WriteLiteral(@"
                <div class=""modal-body"">
                    <!-- BEGIN FORM-->
                    <div class=""form-body"">

                        <div id=""alert_danger"" class=""alert alert-danger display-hide"">
                            <button class=""close"" data-close=""alert""></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
                        <div class=""alert alert-block alert-info fade in"">
                            <button type=""button"" class=""close"" data-dismiss=""alert""></button>
                            <h4 class=""alert-heading"">روش وزن دهی</h4>
                            <p id=""weightWayInfo"">

                            </p>
                        </div>
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                            ");
                WriteLiteral(@"            انتخاب دوره
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""periodDefinitionId"" id=""periodDefinitionId"" class=""form-control input-medium""></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                    ");
                WriteLiteral(@"                    انتخاب کارمند/کارمندان
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""employee"" id=""employee"" class=""form-control select2 input-medium"" multiple>
                                                ");
                EndContext();
                BeginContext(3375, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "813f045436fc1e4a7e1da110dfaae76c801e456510264", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3392, 3768, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخاب شایستگی رفتاری
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""behaviourCompetency"" id=""behaviourCompetency"" class=""form-control select2 input-medium"" m");
                WriteLiteral(@"ultiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!--/span-->
                            <!--/span-->
                        </div>
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label id=""mojri_name_label"" class=""control-label col-md-3"">
                                        تعیین وزن
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>

            ");
                WriteLiteral(@"                                <input type=""text"" name=""competencyWeight"" id=""competencyWeight"" class=""form-control input-medium"" placeholder=""تعیین وزن"">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"" hidden>
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        تعیین سایر ارزیاب
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <i class=""fa""></i>
                                        <select name=""participant"" id=""participant"" class=""form-control select2 input-me");
                WriteLiteral(@"dium""></select>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                            <!--/span-->
                        </div>
                        <!--/row-->
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn green input-sm input-small"" id=""behaviourSubmit"">ذخيره</button>
                    <button type=""button"" class=""btn red input-sm input-small"" id=""cancel"" data-dismiss=""modal""><i class=""fa fa-times""></i>انصراف</button>
                </div>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7167, 12624, true);
            WriteLiteral(@"
            <!-- END FORM-->
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>



<script>
    $(""#competency_assign_without_hierarchy_modal"").modal('show');
    $('.select2').select2({
        placeholder: ""انتخاب کنید"",
        allowClear: true
    });

    $.ajax({
        type: 'get',
        url: '/AssignTask/GetAssistantDepartment',
        async: false,
        //data: { roleId: roleId },
        success: function (department) {
            $(""#assistant"").empty();
            $(""#assistant"").append(""<option></option>"");
            $(""#assistant"").append(""<option value='0'>همه</option>"");
            $(""#assistant"").append(""<option value='-1'>هیچکدام</option>"");

            $(department).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#assistant"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
            })
        },
    ");
            WriteLiteral(@"    error: function (status) {
            alert(""Error"");
        }
    })
    $.ajax({
        type: 'get',
        url: '/share/GetPeriodDefinition',
        //data: { roleId: roleId },
        success: function (periodDefinition) {
            $(""#periodDefinitionId"").empty();
            $(""#periodDefinitionId"").append(""<option></option>"");

            $(periodDefinition).each(function (i, p) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#periodDefinitionId"").append(""<option value='"" + p.periodDefinitoionId + ""'>"" + p.periodTitle + "" ("" + p.periodCode + "")</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })
    $.ajax({
        type: 'get',
        url: '/BehaviouralCompetency/BehaviouralCompetencyList',
        //data: { roleId: roleId },
        success: function (data) {
            $(""#behaviourCompetency"").empty();
            $(""#behaviourCompetency"").append(""<opti");
            WriteLiteral(@"on></option>"");

            $(data).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#behaviourCompetency"").append(""<option value='"" + d.behaviouralCompetencyId + ""'>"" + d.title + ""</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    $.ajax({
        type: 'post',
        url: '/share/GetAllEmployeeDepartment',
        async: true,
        success: function (department) {
            $(department).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.FullName + ""</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    $.ajax({
        type: 'get',
        url: '/share/ParticipantList',
        //data: { roleId: roleId },
        success: ");
            WriteLiteral(@"function (data) {
            $(""#participant"").empty();
            $(""#participant"").append(""<option></option>"");

            $(data).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#participant"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })


    var weightWay = """";
    var numberScaleList = [];
    $.ajax({
        type: 'get',
        url: '/Share/GetBehaviourWeightWay',
        //data: { periodDefinitionId: 4 },
        async: false,
        success: function (data) {
            weightWay = data;
            if (data == 1) {
                $(""#weightWayInfo"").html(""وزن دهی به صورت درصدی و بازه مجاز از 1 تا 100 می باشد."");
            } else if (data == 2) {
                $.ajax({
                    type: 'get',
                    url: '/Share/G");
            WriteLiteral(@"etBehaviourLikertScale',
                    //data: { periodDefinitionId: 4 },
                    async: false,
                    success: function (data) {
                        $(""#weightWayInfo"").html(""وزن دهی به صورت طیف لیکرت می باشد. و بازه های مجاز جهت وزن دهی "");
                        $(data).each(function (i, d) {
                            numberScaleList.push(d.numberScale);
                            $(""#weightWayInfo"").append(d.numberScale + "":"" + d.titleScale + ""  "");
                        });
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        },
        error: function (status) {
            alert(""Error"");
        }
    })
    var min;
    var max;
    var message;
    if (weightWay == 1) {
        min = 1;
        max = 100;
        message = ""لطفا عددی بین 1 تا 100 وارد نمایید"";
    } else if (weightWay == 2) {
        min = Math.mi");
            WriteLiteral(@"n.apply(Math, numberScaleList);
        max = Math.max.apply(Math, numberScaleList);
        message = ""لطفا عددی بین "" + Math.min.apply(Math, numberScaleList) + "" تا "" + Math.max.apply(Math, numberScaleList) + "" وارد نمایید"";
    }
    $(""#behaviourAssignWithoutHierarchyFrm"").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();
        //debugger;
        var form = $('#behaviourAssignWithoutHierarchyFrm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: """",
            rules: {
                periodDefinitionId: {
                    required: true
                },
                assistant: {
                    required: true
                },
   ");
            WriteLiteral(@"             management: {
                    required: true
                },
                chairmanship: {
                    required: true
                },
                department: {
                    required: true
                },
                employee: {
                    required: true
                },
                behaviourCompetency: {
                    required: true
                },
                competencyWeight: {
                    required: true,
                    range: [min, max]
                }
            },
            messages: {
                periodDefinitionId: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                assistant: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                management: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                chairmanship: {
                    re");
            WriteLiteral(@"quired: ""پر کردن این فیلد الزامی می باشد""
                },
                department: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                employee: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                behaviourCompetency: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                competencyWeight: {
                    required: ""پر کردن این فیلد الزامی می باشد"",
                    range: message
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).pa");
            WriteLiteral(@"rent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass(""fa-warning"");
                icon.attr(""data-original-title"", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass(""fa-warning"").addClass(""fa-check"");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                 ");
            WriteLiteral(@"   error2.hide();
            }
        })
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {
            //$(""#articleSubmit"").addClass('disabled');
            $(""#behaviourSubmit"").attr(""disabled"", ""disabled"");
            var btn = $(""#behaviourSubmit"");
            btn.button('loading');
            var postdata = new FormData(this);
            //var postdata = $('#dpcreation').serializeArray();

            console.log(postdata);
            $.ajax(
                {
                    //data:postdata,
                    url: ""/BehaviouralCompetencyAssign/BehaviouralCompetencyAssignment"",
                    //url : formURL,
                    //data: postdata2,
                    data: postdata,
                    //data: ""firstName="" + $(""fn"").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                ");
            WriteLiteral(@"    type: ""post"",

                    success: function (data, textStatus, jqXHR) {
                        //if ($.trim(data) === ""yess"")
                        //alert(""That's one I wanted. Excellent"")
                        //alert(data);
                        var message = """";
                        var duplicate = """";
                        if (data.result > 0) {
                            message += ""<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.success(message);
                        }
                        else if (data.result == 0) {
                            message += ""<span>اطلاعات  مورد نظر ثبت نگردید..</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                   ");
            WriteLiteral(@"         toastr.info(message);
                        }
                        if (data.duplicate != """") {
                            $(data.duplicate).each(function (i, m) {
                                duplicate += ""<span>  "" + m + ""  </span><br><br>"";
                            })
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.info(duplicate);
                        }
                        $(""#behaviourAssignWithoutHierarchyFrm"")[0].reset();
                        $(""#competency_assign_without_hierarchy_modal"").modal(""hide"");
                        dt.ajax.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr00000"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
     ");
            WriteLiteral(@"               $(""#behaviourSubmit"").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $(""#articleForm"")[0].reset();
            //});
            e.preventDefault(e);
        }
    });
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
