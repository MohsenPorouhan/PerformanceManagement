#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\Employee\ParticipantCompetencyAssignment\BehaviouralScoreAssignment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d935bae8813c6bd775605c9f779d37c2eae8bb8a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_ParticipantCompetencyAssignment_BehaviouralScoreAssignment), @"mvc.1.0.view", @"/Views/Employee/ParticipantCompetencyAssignment/BehaviouralScoreAssignment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Employee/ParticipantCompetencyAssignment/BehaviouralScoreAssignment.cshtml", typeof(AspNetCore.Views_Employee_ParticipantCompetencyAssignment_BehaviouralScoreAssignment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d935bae8813c6bd775605c9f779d37c2eae8bb8a", @"/Views/Employee/ParticipantCompetencyAssignment/BehaviouralScoreAssignment.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_ParticipantCompetencyAssignment_BehaviouralScoreAssignment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("scoreAssignmentFrm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\Employee\ParticipantCompetencyAssignment\BehaviouralScoreAssignment.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(27, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(29, 2040, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d935bae8813c6bd775605c9f779d37c2eae8bb8a6204", async() => {
                BeginContext(97, 1965, true);
                WriteLiteral(@"
    <div class=""modal fade department modalClass"" id=""scoreAssignmentModal"" tabindex="""" aria-hidden=""true"">
        <div class=""modal-dialog "">
            <div class=""modal-content"">
                <div class=""modal-header bg-blue"">
                    <button type=""button"" id=""modal-close"" class=""close""
                            data-dismiss=""modal"" aria-hidden=""true""></button>
                    <h4 id=""sabt_hazine_personnel"" class=""modal-title"">
                        <i class=""fa fa-file-o""></i>
                        ثبت نمره عملکردی
                    </h4>
                </div>

                <div class=""modal-body"">
                    <div class=""form-body"">

                        <div id=""alert_danger"" class=""alert alert-danger display-hide"">
                            <button class=""close"" data-close=""alert""></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>

                        <div class=""alert ale");
                WriteLiteral(@"rt-block alert-info fade in"">
                            <button type=""button"" class=""close"" data-dismiss=""alert""></button>
                            <h4 class=""alert-heading"">روش نمره دهی</h4>
                            <p id=""weightWayInfo"">

                            </p>
                        </div>

                        <div id=""competencyScoreRow""></div>


                    </div>
                    <!-- END FORM-->
                </div>

                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn green input-sm input-small"" id=""assignScoreBTN"">ذخيره</button>
                    <button type=""button"" class=""btn red input-sm input-small"" id=""cancel11"" data-dismiss=""modal""><i class=""fa fa-times""></i>انصراف</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2069, 12114, true);
            WriteLiteral(@"
<script type=""text/html"" id=""appendCompetencyForScore"">
    <div class=""row"">
        <!--/span-->
        <div class=""col-md-6"">
            <div class=""form-group"">
                <label class=""control-label col-md-6"">
                    {1} :
                    <span class=""required"">
                        *
                    </span>
                </label>
                <div class=""col-md-6"">
                    <div class=""input-icon right"">
                        <i class=""fa""></i>
                        <input type=""text"" name=""competencyScore{0}"" id=""competencyScore{0}"" behaviouralCompetencyId=""{2}"" evaluationBehaviouralCompetencyId=""{3}"" periodDefinitionId=""{4}"" class=""form-control competencyScore input-small input-sm"" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    //  $(document).ready(function () {
    var i = 1;
    var index;
    var j = 1;
    var index2;
    var template = jQuery");
            WriteLiteral(@".validator.format($.trim($(""#appendCompetencyForScore"").html()));
    var finalResult = false;

    var competencyScoreIndex = 0;
    
    var row;
    var length = dt.rows('.selected').data().length;
    var selector;
    if (length > 0) {
        selector = ""#CompetencyAssignmentTable >tbody>tr.selected"";
    } else {
        selector = ""#CompetencyAssignmentTable >tbody>tr"";
    }

    $(selector).each(function (i, tr) {
        row = dt.row(tr);
        if (row.data().Confirmation == true) {
            index = competencyScoreIndex++;
            $(template(index, row.data().CompetencyTitle, row.data().BehaviouralCompetencyId, row.data().EvaluationBehaviouralCompetencyId, row.data().PeriodDefinitoionId, row.data().Levell - 1)).appendTo(""#competencyScoreRow"");

            finalResult = true;
        }
    })
    if (!finalResult) {
        alert(""شایستگی هایی را که وضعیت آن در حالت پذیرش باشد را مجاز به نمره دهی می باشید."");
    } else if (finalResult) {
        var weightWay = """);
            WriteLiteral(@""";
        var numberScaleList = [];
        $.ajax({
            type: 'get',
            url: '/Share/GetScoreWeightWay',
            data: { periodDefinitionId: row.data().PeriodDefinitoionId },
            async: false,
            success: function (data) {
                weightWay = data;
                if (data == 1) {
                    $(""#weightWayInfo"").html(""نمره دهی به صورت درصدی و بازه مجاز از 1 تا 100 می باشد."");
                } else if (data == 2) {
                    $.ajax({
                        type: 'get',
                        url: '/Share/GetScoreLikertScale',
                        data: { periodDefinitionId: row.data().PeriodDefinitoionId },
                        async: false,
                        success: function (data) {
                            $(""#weightWayInfo"").html(""نمره دهی به صورت طیف لیکرت می باشد. و بازه های مجاز جهت نمره دهی "");
                            $(data).each(function (i, d) {
                                numberScaleList");
            WriteLiteral(@".push(d.numberScale);
                                $(""#weightWayInfo"").append(d.numberScale + "":"" + d.titleScale + ""  "");
                            });
                        },
                        error: function (status) {
                            alert(""Error"");
                        }
                    })
                }
            },
            error: function (status) {
                alert(""Error"");
            }
        })

        $('#scoreAssignmentModal').modal('show');

        $('.modalClass .select2').select2({
            placeholder: ""انتخاب کنید"",
            allowClear: true
        });

        $(""#assignScoreBTN"").click(function () {
            //alert('dpCreationSubmit');
            //var postdata2 = $(this).serializeArray();
            var form = $(""#scoreAssignmentFrm"");
            form.validate({
                //console.log($('#registerform').serializeArray());
                errorElement: 'span', //default input error message co");
            WriteLiteral(@"ntainer
                errorClass: 'help-block', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: """",
                rules: {
                    competencyScore0: {
                        required: true,
                    }
                },
                messages: {
                    competencyScore0: {
                        required: ""پر کردن این فیلد الزامی می باشد""
                    }
                },
                invalidHandler: function (event, validator) { //display error alert on form submit
                    //                    success2.hide();
                    //                    error2.show();
                    //                    App.scrollTo(error2, -200);
                },
                errorPlacement: function (error, element) { // render error placement for each input type
                    var icon = $(element).parent('.input-icon').children('i');
");
            WriteLiteral(@"                    icon.removeClass('fa-check').addClass(""fa-warning"");
                    icon.attr(""data-original-title"", error.text()).tooltip();
                },
                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight

                },

                success: function (label, element) {
                    var icon = $(element).parent('.input-icon').children('i');
                    $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    icon.removeClass(""fa-warning"").addClass(""fa-check"");
                },

                submitHandler: function (form) {
                    //                    success2.show();
       ");
            WriteLiteral(@"             //                    error2.hide();
                }
            })
            if (form.valid() == false) {
                //console.log($('#registerform').serializeArray());

                return false;
            } else {
                var listOfEvaluation = [];
                var coacherLavel = -1;
                $(""#competencyScoreRow input[type=text]"").each(function () {
                    var EvaluationCompetencyView = {};
                    EvaluationCompetencyView.BehaviouralCompetencyId = $(this).attr(""behaviouralCompetencyId"");
                    EvaluationCompetencyView.CompetencyScore = $(this).val();
                    EvaluationCompetencyView.CoacherLevel = coacherLavel;
                    EvaluationCompetencyView.EvaluationBehaviouralCompetencyId = $(this).attr(""evaluationBehaviouralCompetencyId"");
                    EvaluationCompetencyView.PeriodDefinitionId = $(this).attr(""periodDefinitionId"");
                    listOfEvaluation.push(Evaluatio");
            WriteLiteral(@"nCompetencyView);
                });
                console.log(listOfEvaluation);
                //$(""#articleSubmit"").addClass('disabled');
                // $(""#dpCreationSubmit"").attr(""disabled"", ""disabled"");
                var btn = $(""#assignScoreBTN"");
                btn.button('loading');
                //var postdata = new FormData(this);
                //var postdata = $('#scoreAssignmentFrm').serializeArray();

                //console.log(postdata);


                $.ajax(
                    {
                        datatype: ""json"",
                        //data:postdata,
                        url: ""/ParticipantCompetencyAssignment/BehaviouralScoreAssignment"",
                        //url : formURL,
                        //                        data: postdata2,
                        data: JSON.stringify(listOfEvaluation),
                        //data: ""firstName="" + $(""fn"").val(),
                        //cache: false,
                        conte");
            WriteLiteral(@"ntType: 'application/json; charset=utf-8',
                        //contentType: false,
                        //processData: false,
                        type: ""POST"",

                        success: function (data, textStatus, jqXHR) {
                            //if ($.trim(data) === ""yess"")
                            //i = 1;
                            //j = 1;
                            if (data.giveWeight != null) {
                                toastr.options.timeOut = ""15000"";
                                toastr.options.positionClass = ""toast-top-center"";
                                toastr.info(data.giveWeight);
                            } else if (data.result > 0) {
                                //$(""#dpcreation"")[0].reset();
                                $(""#scoreAssignmentModal"").modal(""hide"");
                                dt.ajax.url(""/ParticipantCompetencyAssignment/GetAssignedCompetencyList"");
                                dt.ajax.reload();
       ");
            WriteLiteral(@"                         //resetFormValidation();
                                toastr.options.timeOut = ""15000"";
                                toastr.options.positionClass = ""toast-top-center"";
                                toastr.success(""اطلاعات مورد نظر با موفقیت ثبت گردید."");
                            } else if (data.result == 0) {
                                toastr.options.timeOut = ""15000"";
                                toastr.options.positionClass = ""toast-top-center"";
                                toastr.error(""اطلاعات مورد نظر ثبت نگردید."");
                            } else {
                                toastr.options.timeOut = ""15000"";
                                toastr.options.positionClass = ""toast-top-center"";
                                toastr.info(data.result);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert(""erorr"");
              ");
            WriteLiteral(@"              alert(jqXHR);
                            alert(textStatus);
                        }
                    }).always(function () {
                        $(""#assignScoreBTN"").button('reset');
                    });



                //$.getScript('/assets/javascript/articleForm.js', function () {
                //    ArticleForm.init(postdata);
                //    $(""#articleForm"")[0].reset();
                //});
                // e.preventDefault(e);
            }
        });
        //Begin of validation of form
        $(""#assignScoreBTN"").trigger('click');

        $('.competencyScore').each(function (i, d) {
            $(this).rules(""add"", {
                required: true,
                messages: {
                    required: ""پرکردن این فیلد الزامی می باشد"",
                }
            });
            $(this).rules(""add"", {
                number: true,
                messages: {
                    number: ""لطفا عدد وارد نمایید"",
            ");
            WriteLiteral(@"    }
            });
            if (weightWay == 1) {
                $(d).rules(""add"", {
                    range: [1, 100],
                    messages: {
                        range: ""لطفا عددی بین 1 تا 100 وارد نمایید"",
                    }
                });
            } else if (weightWay == 2) {
                $(this).rules(""add"", {
                    range: [Math.min.apply(Math, numberScaleList), Math.max.apply(Math, numberScaleList)],
                    messages: {
                        range: ""لطفا عددی بین "" + Math.min.apply(Math, numberScaleList) + "" تا "" + Math.max.apply(Math, numberScaleList) + "" وارد نمایید"",
                    }
                });
            }
        });

        $(""#assignScoreBTN"").trigger('click');
        //End of validation of form
        //});
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
