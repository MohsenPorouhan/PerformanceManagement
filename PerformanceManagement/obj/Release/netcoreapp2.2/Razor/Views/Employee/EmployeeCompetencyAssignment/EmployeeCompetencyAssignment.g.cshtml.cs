#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\Employee\EmployeeCompetencyAssignment\EmployeeCompetencyAssignment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c626c6f7048067a44a78f00cfa6069bea7f0c44f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_EmployeeCompetencyAssignment_EmployeeCompetencyAssignment), @"mvc.1.0.view", @"/Views/Employee/EmployeeCompetencyAssignment/EmployeeCompetencyAssignment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Employee/EmployeeCompetencyAssignment/EmployeeCompetencyAssignment.cshtml", typeof(AspNetCore.Views_Employee_EmployeeCompetencyAssignment_EmployeeCompetencyAssignment))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c626c6f7048067a44a78f00cfa6069bea7f0c44f", @"/Views/Employee/EmployeeCompetencyAssignment/EmployeeCompetencyAssignment.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_EmployeeCompetencyAssignment_EmployeeCompetencyAssignment : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\Employee\EmployeeCompetencyAssignment\EmployeeCompetencyAssignment.cshtml"
  
    ViewData["Title"] = "شایستگی های رفتاری اختصاصی به کارمند";

#line default
#line hidden
            DefineSection("Styles", async() => {
                BeginContext(88, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(209, 102, true);
                WriteLiteral("<link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/plugins/bootstrap-toastr/toastr-rtl.min.css\" />\r\n");
                EndContext();
                BeginContext(409, 105, true);
                WriteLiteral("<link rel=\"stylesheet\" type=\"text/css\" href=\"/assets/plugins/select2v4/select2/dist/css/select2.css\" />\r\n");
                EndContext();
                BeginContext(872, 1680, true);
                WriteLiteral(@"<link rel=""stylesheet"" href=""/assets/plugins/jQuery-tagEditor-master/jquery.tag-editor.css"" />

<link rel=""stylesheet"" href=""/assets/advancedDataTable/jquery.dataTables.css"" />
<link rel=""stylesheet"" href=""/assets/advancedDataTable/buttons.dataTables.css"" />
<style>
    .tag-editor li {
        float: right;
    }

    .input-icon.right i {
        right: auto !important;
    }

    .tag-editor {
        line-height: 27px;
        /*max-width: 300px;*/
        overflow: auto;
    }

    .btn-sm, .btn-xs {
        margin: 2px;
    }

    td.details-control {
        background: url('/assets/img/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.details td.details-control {
        background: url('/assets/img/details_close.png') no-repeat center center;
    }

    .dataTable .details td, .dataTable .details th {
        padding: 8px;
        background: none;
        border: 0;
    }

    .input-DT {
        margin-left: 5px;
    }

    ");
                WriteLiteral(@".select2-container .select2-choice > .select2-chosen {
        /*display: block;*/
        overflow: initial;
    }

    .btn-add, .h3-section {
        margin-right: 10px !important;
    }

    .input-icon.right i {
        z-index: +100;
    }

    .select2-container--open .select2-dropdown {
        z-index: 99999999
    }

    #dataTables_filter_subSet {
        margin-top: 32px;
    }
    /*generated dynamically in textTaskIndirect and because of bug had set width*/
    #participantt2Select21 {
        width: 176px;
    }

    table.dataTable tbody tr.selected td {
        background-color: #B0BED9;
    }
</style>
");
                EndContext();
            }
            );
            BeginContext(2555, 3733, true);
            WriteLiteral(@"<!-- BEGIN PAGE HEADER-->
<div class=""row"">
    <div class=""col-md-12"">
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class=""page-title"">
            <small></small>

        </h3>
        <div class=""clearfix""></div>
        <ul class=""page-breadcrumb breadcrumb"">
            <li>
                <i class=""fa fa-home""></i>
                <a href=""/home"">
                    خانه
                </a>
                <i class=""fa fa-angle-left""></i>
            </li>
            <li>
                <a href=""#"">
                    مسیر مورد نظر
                </a>
            </li>
            <li class=""pull-right"">
                <div id=""dashboard-report-range"" class=""dashboard-date-range tooltips"" data-placement=""top"" data-original-title=""Change dashboard date range"">
                    <i class=""fa fa-calendar""></i>
                    <span>
                    </span>
                    <i class=""fa fa-angle-down""></i>
                </div>
            </l");
            WriteLiteral(@"i>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
<!-- END PAGE HEADER-->

<div class=""row"">
    <div class=""col-md-12"">
        <div class=""portlet blue box"">
            <div class=""portlet-title"">
                <div class=""caption"">
                    <i class=""fa fa-cogs""></i>شایستگی های رفتاری اختصاصی به کارمند
                </div>
                <div class=""tools"">
                    <a href=""javascript:;"" class=""collapse"">
                    </a>
                    <a href=""#portlet-config"" data-toggle=""modal"" class=""config"">
                    </a>
                    <a href=""javascript:;"" id=""reload"" class=""reload"">
                    </a>
                    <a href=""javascript:;"" class=""remove"">
                    </a>
                </div>
            </div>
            <div class=""portlet-body"">

                <a id=""carryoutConfirmationBtn"" class=""btn blue btn-sm pull-left"" data-toggle=""modal"">تایید/عدم تایید شایستگی اختصاصی");
            WriteLiteral(@"</a>
                <a id=""scoreBtn"" class=""btn blue btn-sm pull-left"" data-toggle=""modal"">خود ارزیابی</a>
                <div class=""clearfix"">
                </div>
                <table class=""table table-striped table-bordered table-hover"" id=""CompetencyAssignmentTable"">
                    <thead>
                        <tr>
                            <th>
                                کد دوره
                            </th>
                            <th>
                                نام دوره
                            </th>
                            <th>
                                نام اختصاص دهنده
                            </th>
                            <th>
                                واحد اختصاص دهنده
                            </th>
                            <th>
                                نقش اختصاص دهنده
                            </th>
                            <th>
                                عنوان شایستگی
                    ");
            WriteLiteral(@"        </th>
                            <th>
                                وزن شایستگی
                            </th>
                            <th>
                                وضعیت اختصاص
                            </th>
                            <th>
                                مشاهده نمرات
                            </th>
                            <th>
                                انتخاب/عدم انتخاب
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("Plugins", async() => {
                BeginContext(6305, 247, true);
                WriteLiteral("\r\n<script src=\"/assets/plugins/jquery-validation/dist/jquery.validate.min.js\" type=\"text/javascript\"></script>\r\n<script src=\"/assets/plugins/bootstrap-toastr/toastr.min.js\"></script>\r\n<script src=\"/assets/scripts/custom/ui-toastr.js\"></script>\r\n\r\n");
                EndContext();
                BeginContext(6649, 398, true);
                WriteLiteral(@"
<script type=""text/javascript"" src=""/assets/plugins/select2v4/select2/dist/js/select2.min.js""></script>
<script src=""/assets/plugins/jQuery-tagEditor-master/jquery.caret.min.js""></script>
<script src=""/assets/plugins/jQuery-tagEditor-master/jquery.tag-editor.min.js""></script>


<script src=""/assets/plugins/jquery-validation/dist/jquery.validate.min.js"" type=""text/javascript""></script>

");
                EndContext();
                BeginContext(7268, 738, true);
                WriteLiteral(@"
<script src=""/assets/advancedDataTable/DataTables-1.10.19.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/Buttons-for-DataTables-1.5.2.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.print.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.ColVis.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/jsZip.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/pdfmake.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/pdfmake.font.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.html5.js"" type=""text/javascript""></script>

");
                EndContext();
            }
            );
            BeginContext(8009, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(8028, 15331, true);
                WriteLiteral(@"

<script>
    var dt;

    function show_dataTable() {
        dt = $('#CompetencyAssignmentTable').DataTable({
            dom: 'CT<""clearfix"">lBfrtip',
            buttons: [
                'copy', 'csv', 'excel',
                'pdf',
                {
                    extend: 'pdfHtml5',
                    download: 'open',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colvis'
            ],
            columnDefs: [
                {
                    targets: [-1],
                    visible: false
                }
            ],
            ""fnInitComplete"": function (oSettings, json) {

            },
            ""fnDrawCallback"": function (oSettings) {

                $("".viewScoreBtn"").");
                WriteLiteral(@"click(function () {
                    $('#CompetencyAssignmentTable >tbody>tr').each(function () {
                        $(this).removeClass('selected');
                    })
                    $.ajax(
                        {
                            url: ""/EmployeeCompetencyAssignment/ViewScore"",
                            contentType: 'aplication/json;charset=utf-8',
                            type: ""GET"",
                            datatype: 'html',
                            data: { periodDefinitionId: $(this).attr(""periodDefinitionId""), allocatorPersonId: $(this).attr(""AllocatorPersonId"") },
                            success: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
                                alert(textStatus");
                WriteLiteral(@");
                            }
                        });
                });
                $("".refutationCauseBtn"").click(function () {
                    $('#CompetencyAssignmentTable >tbody>tr').each(function () {
                        $(this).removeClass('selected');
                        $(this).find('input[type=""checkbox""]').prop('checked', false);
                    })
                    var tr = $(this).closest('tr');
                    var row = dt.row(tr);

                    $.ajax(
                        {
                            url: '/EmployeeCompetencyAssignment/EmployeeRefutationCauseCompetencyLookAt',
                            data: {
                                title: row.data().Title
                                , evaluationBehaviouralCompetencyId: row.data().EvaluationBehaviouralCompetencyId
                            },
                            datatype: 'html',
                            type: 'POST',
                            succe");
                WriteLiteral(@"ss: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
                                alert(textStatus);
                            }
                        });
                });
                //// Array to track the ids of the details displayed rows
                //var detailRows = [];
                //$('.details-control').on('click', function () {
                //    var tr = $(this).closest('tr');
                //    var row = dt.row(tr);
                //    var idx = $.inArray(tr.attr('id'), detailRows);

                //    if (row.child.isShown()) {
                //        tr.removeClass('details');
                //        row.child.hide();

                //        // Remove from the 'open' array
              ");
                WriteLiteral(@"  //        detailRows.splice(idx, 1);
                //    }
                //    else {
                //        tr.addClass('details');
                //        row.child(format(row.data())).show();

                //        // Add to the 'open' array
                //        if (idx === -1) {
                //            detailRows.push(tr.attr('id'));
                //        }
                //    }
                //});
                //// On each draw, loop over the `detailRows` array and show any child rows
                //dt.on('draw', function () {
                //    $.each(detailRows, function (i, id) {
                //        $('#' + id + ' td.details-control').trigger('click');
                //    });
                //});
            },
            ""pagingType"": ""full_numbers"",
            ""lengthMenu"": [
                [10, 25, 50, -1],
                [10, 25, 50, ""All""]
            ],
            ""columnDefs"": [
                { ""orderable"": fals");
                WriteLiteral(@"e, ""targets"": [8,9] }
            ],
            ""processing"": true,
            ""serverSide"": true,
            ""ajax"": {
                ""url"": ""/EmployeeCompetencyAssignment/GetAssignedCompetencyList"",
                ""type"": ""Post"",
                ""data"": function (d) {
                    d.periodDefinitionIdDT = $('#periodDefinitionIdDT').children('option:selected').val(),
                        d.departmentIdDT = $('#departmentId').children('option:selected').val()
                },
                //""contentType"": 'application/json; charset=utf-8',
                //""cache"": false,
                ""dataType"": ""json"",
                //'data': function (data) {
                //    data = JSON.stringify(data)
                //    return data;
                //}
            },
            ""aoColumns"": [
                {
                    ""mData"": ""PeriodCode"",
                },
                {
                    ""mData"": ""PeriodTitle""
                },
           ");
                WriteLiteral(@"     {
                    ""mData"": ""AllocatorFullName"",
                    ""render"": function (data, type, row, meta) {
                        if (data == null) {
                            data = '----'
                        }
                        return data;
                    }
                },
                {
                    ""mData"": ""AllocatorDepartmentName"",
                    ""render"": function (data, type, row, meta) {
                        if (data == null) {
                            data = '----'
                        }
                        return data;
                    }
                },
                {
                    ""mData"": ""RoleName"",
                    ""render"": function (data, type, row, meta) {
                        if (data == ""PlanningAdmin"") {
                            data = 'ادمین برنامه ریزی'
                        }
                        else if (data == ""Coacher"") {
                            data = 'مربی'
 ");
                WriteLiteral(@"                       }
                        else if (data == ""HRAdmin"") {
                            data = 'ادمین سرمایه انسانی'
                        }
                        return data;
                    }
                },
                {
                    ""mData"": ""CompetencyTitle""
                },
                {
                    ""mData"": ""BehaviouralCompetencyWeight""
                },
                {
                    ""mData"": ""EvaluationAcceptanceStatusId"",
                    ""className"": ""text-center"",
                    ""render"": function (data, type, row, meta) {
                        if (data == ""1"") {
                            data = ""<span class='label label-sm label-success'>"" + row.EvalAcceptanceTitle + ""</span>"";
                        }
                        else if (data == ""2"") {
                            data = ""<a href='#' data-toggle='modal' class='btn refutationCauseBtn'><span class='label label-sm label-warning'>"" + row.Eval");
                WriteLiteral(@"AcceptanceTitle + ""</span></a>"";
                        }
                        else if (data == ""3"") {
                            data = ""<a href='#' data-toggle='modal' class='btn refutationCauseBtn'><span class='label label-sm label-info'>"" + row.EvalAcceptanceTitle + ""</span></a>"";
                        } else if (data == ""4"") {
                            data = ""<a href='#' data-toggle='modal' class='btn refutationCauseBtn'><span class='label label-sm label-danger'>"" + row.EvalAcceptanceTitle + ""</span></a>"";
                        }
                        return data;
                    }
                },
                {
                    ""mData"": null,
                    ""render"": function (data, type, row, meta) {
                        data = ""<a href='#' data-toggle='modal' periodDefinitionId="" + row.PeriodDefinitoionId + "" allocatorPersonId="" + row.AllocatorPersonId + "" class='viewScoreBtn'>مشاهده نمرات</a>"";
                        return data;
                    ");
                WriteLiteral(@"}
                },
                {
                    ""mData"": null,
                    ""className"": ""text-center"",
                    ""render"": function (data, type, row, meta) {
                        data = ""<input type='checkbox'>"";
                        return data;
                    }
                }
                //{
                //    ""class"": ""details-control"",
                //    ""orderable"": false,
                //    ""data"": null,
                //    ""defaultContent"": """"
                //}
            ]
        });
    }
    show_dataTable();

    $(""#CompetencyAssignmentTable_filter"").after(""<div id='departmentIdDT' class='dataTables_filter input-DT'><label>انتخاب سمت سازمانی:<select name='departmentId' id='departmentId' class='form-control input-medium'></select></label></div>"");

    $(""#CompetencyAssignmentTable_filter"").after(""<div class='dataTables_filter input-DT'><label>انتخاب دوره:<select name='periodDefinitionIdDT' id='periodDefinitionIdDT");
                WriteLiteral(@"' class='form-control input---medium'></select></label></div>"");

    $(""#CompetencyAssignmentTable_filter"").after(""<div class='clearfix'></div>"");

    $.ajax({
        type: 'get',
        url: '/share/GetPeriodDefinitionFromEvaluation',
        //data: { roleId: roleId },
        success: function (periodDefinition) {
            $(""#periodDefinitionIdDT"").empty();
            $(""#periodDefinitionIdDT"").append(""<option></option>"");

            $(periodDefinition).each(function (i, p) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#periodDefinitionIdDT"").append(""<option value='"" + p.periodDefinitoionId + ""'>"" + p.periodTitle + "" ("" + p.periodCode + "")</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    $('#periodDefinitionIdDT').on('change', function () {
        $.ajax({
            type: 'get',
            url: '/EmployeeTaskAssignment/GetDepartmentList',
            d");
                WriteLiteral(@"ata: { periodDefinitionId: $('#periodDefinitionIdDT').children('option:selected').val() },
            success: function (DepartmentResponsibilty) {

                $(""#departmentIdDT #departmentId"").empty();
                $(""#departmentIdDT #departmentId"").append(""<option></option>"");
                dt.ajax.url(""/EmployeeCompetencyAssignment/GetAssignedCompetencyList"");
                dt.ajax.reload();
                $(DepartmentResponsibilty).each(function (i, p) {
                    //$(""#parentName"").select2(""val"", d.departmentId);
                    $(""#departmentId"").append(""<option value='"" + p.EvaluationHierarchyId + ""'>"" + p.ShortName + ""</option>"");
                })
            },
            error: function (status) {
                alert(""Error"");
            }
        })
    });

    $('#departmentId').on('change', function () {
        //if ($('#periodDefinitionIdDT').children('option:selected').val() == """" && $('#departmentId').children('option:selected').val() != ");
                WriteLiteral(@""""") {
        dt.ajax.url(""/EmployeeCompetencyAssignment/GetAssignedCompetencyList"");
        dt.ajax.reload();
        //}
    });
    $(""#reload"").click(function () {
        $(""#periodDefinitionIdDT"").val(null);
        $(""#departmentId"").val(null);
        dt.ajax.url(""/EmployeeCompetencyAssignment/GetAssignedCompetencyList"");
        dt.ajax.reload();
    })

    $(""#CompetencyAssignmentTable tbody"").on('click', 'tr', function () {
        $(this).toggleClass('selected');
        if ($(this).hasClass('selected')) {
            $(this).find('input[type=""checkbox""]').prop('checked', true);
        } else {
            $(this).find('input[type=""checkbox""]').prop('checked', false);
        }
    });
    $(""#carryoutConfirmationBtn"").click(function () {
        if (!dt.data().count()) {
            alert('شایستگی رفتاری برای انتخاب وجود ندارد');
        }
        else if ($('#periodDefinitionIdDT').children('option:selected').val() != """" && $('#departmentId').children('option:selected'");
                WriteLiteral(@").val() != """") {
            $.ajax(
                {
                    url: ""/EmployeeCompetencyAssignment/PerformCompetencyConfirmation"",
                    contentType: 'aplication/json;charset=utf-8',
                    type: ""GET"",
                    datatype: 'html',
                    //data: { CoacherType: $(this).attr(""coacherType"") },
                    success: function (data, textStatus, jqXHR) {
                        $(""#modalPlace"").html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                });
        }
        else {
            alert(""دوره و سمت سازمانی می بایست در حالت انتخاب باشد"");
        }
    });
    $(""#scoreBtn"").click(function () {
        if (!dt.data().count()) {
            alert('وظیفه ای برای انتخاب وجود ندارد');
        }
        else if ($");
                WriteLiteral(@"('#periodDefinitionIdDT').children('option:selected').val() != """" && $('#departmentId').children('option:selected').val() != """") {
            $.ajax(
                {
                    url: ""/EmployeeCompetencyAssignment/EmployeeBehaviouralScoreAssignment"",
                    contentType: 'aplication/json;charset=utf-8',
                    type: ""GET"",
                    datatype: 'html',
                    //data: { CoacherType: $(this).attr(""coacherType"") },
                    success: function (data, textStatus, jqXHR) {
                        $(""#modalPlace"").html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                });
        }
        else {
            alert(""دوره و سمت سازمانی می بایست در حالت انتخاب باشد"");
        }
    });
</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
