#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\ExtendSectionPeriod\AddExtendSectionPeriod.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b280ae94a645b350129acde984bfed10586bf757"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_HRAdmin_ExtendSectionPeriod_AddExtendSectionPeriod), @"mvc.1.0.view", @"/Views/HRAdmin/ExtendSectionPeriod/AddExtendSectionPeriod.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/HRAdmin/ExtendSectionPeriod/AddExtendSectionPeriod.cshtml", typeof(AspNetCore.Views_HRAdmin_ExtendSectionPeriod_AddExtendSectionPeriod))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b280ae94a645b350129acde984bfed10586bf757", @"/Views/HRAdmin/ExtendSectionPeriod/AddExtendSectionPeriod.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_HRAdmin_ExtendSectionPeriod_AddExtendSectionPeriod : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("extendSectionPeriodFrm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\ExtendSectionPeriod\AddExtendSectionPeriod.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(27, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(29, 29258, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf7576788", async() => {
                BeginContext(101, 5780, true);
                WriteLiteral(@"
    <div class=""modal fade"" id=""extendSectionModal"" tabindex="""" role="""" aria-hidden=""true"">
        <div class=""modal-dialog modal-wide"">
            <div class=""modal-content"">
                <div class=""modal-header bg-blue"">
                    <button type=""button"" id=""modal-close"" class=""close""
                            data-dismiss=""modal"" aria-hidden=""true""></button>
                    <h4 id=""sabt_hazine_personnel"" class=""modal-title"">
                        <i class=""fa fa-file-o""></i>
                        تمدید برای گروه/افراد خاص
                    </h4>
                </div>
                <div class=""modal-body"">
                    <!-- BEGIN FORM-->
                    <div class=""form-body"">

                        <div id=""alert_danger"" class=""alert alert-danger display-hide"">
                            <button class=""close"" data-close=""alert""></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
      ");
                WriteLiteral(@"                  <div class=""row"">
                            <div class=""col-md-12"">
                                <div class=""form-group"">
                                    <label class=""col-md-2 control-label"">تمدید:</label>
                                    <div class=""col-md-10"">
                                        <div class=""checkbox-list"">
                                            <label class=""checkbox-inline"">
                                                <input id=""periodInitialCheckBox"" name=""periodInitialCheckBox"" class=""chk-click"" type=""checkbox"" value=""1""> ابتدای دوره
                                            </label>
                                            <label class=""checkbox-inline"">
                                                <input id=""periodRunTimeCheckBox"" name=""periodRunTimeCheckBox"" class=""chk-click"" type=""checkbox"" value=""2""> حین دوره
                                            </label>
                                            <label class=""c");
                WriteLiteral(@"heckbox-inline"">
                                                <input id=""periodFinalTimeCheckBox"" name=""periodFinalTimeCheckBox"" class=""chk-click"" type=""checkbox"" value=""3""> پایان دوره
                                            </label>
                                            <label class=""checkbox-inline"">
                                                <input id=""periodProtestTimeCheckBox"" name=""periodProtestTimeCheckBox"" class=""chk-click"" type=""checkbox"" value=""4""> اعتراضات
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخ");
                WriteLiteral(@"اب دوره
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""periodDefinitionId"" id=""periodDefinitionId"" class=""form-control input-medium""></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label id=""mojri_name_label"" class");
                WriteLiteral(@"=""control-label col-md-3"">
                                        انتخاب معاونت
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""assistant"" id=""assistant"" class=""select2 form-control input-medium"" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                      ");
                WriteLiteral(@"  انتخاب مدیریت
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""management"" id=""management""
                                                    class=""select2 form-control input-medium"" multiple>
                                                ");
                EndContext();
                BeginContext(5881, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75713300", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5898, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(5948, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75714475", async() => {
                    BeginContext(5966, 3, true);
                    WriteLiteral("همه");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5978, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(6028, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75715986", async() => {
                    BeginContext(6047, 7, true);
                    WriteLiteral("هیچکدام");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6063, 1293, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>
                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label id=""mojri_name_label"" class=""control-label col-md-3"">
                                        انتخاب ریاست
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                       ");
                WriteLiteral(@"     <i class=""fa""></i>
                                            <select name=""chairmanship"" id=""chairmanship""
                                                    class=""select2 form-control input-medium"" multiple>
                                                ");
                EndContext();
                BeginContext(7356, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75718805", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7373, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(7423, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75719980", async() => {
                    BeginContext(7441, 3, true);
                    WriteLiteral("همه");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7453, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(7503, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75721491", async() => {
                    BeginContext(7522, 7, true);
                    WriteLiteral("هیچکدام");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7538, 2199, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label id="""" class=""control-label col-md-3"">
                                        انتخاب واحد
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""department"" id=""department""
                                                    class=""selec");
                WriteLiteral(@"t2 form-control input-medium"" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!--/span-->
                        </div>

                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخاب کارمند/کارمندان
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                ");
                WriteLiteral("            <select name=\"employee\" id=\"employee\" class=\"form-control select2 input-medium\" multiple>\r\n                                                ");
                EndContext();
                BeginContext(9737, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75725273", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9754, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(9804, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b280ae94a645b350129acde984bfed10586bf75726448", async() => {
                    BeginContext(9822, 3, true);
                    WriteLiteral("همه");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9834, 19446, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <fieldset id=""periodInitialTimeRow"" class=""hidden"">
                            <legend>ابتدای دوره</legend>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ شروع
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                 ");
                WriteLiteral(@"                           <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionInitialDateFrom"" name=""periodDefinitionInitialDateFrom"" class=""form-control input-medium "" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ پایان
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
             ");
                WriteLiteral(@"                           <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionInitialDateTo"" name=""periodDefinitionInitialDateTo"" class=""form-control input-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset id=""periodRunTimeRow"" class=""hidden"">
                            <legend>حین دوره</legend>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-");
                WriteLiteral(@"label col-md-3"">
                                            تاریخ شروع
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionRunTimeDateFrom"" name=""periodDefinitionRunTimeDateFrom"" class=""form-control input-medium "" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                    ");
                WriteLiteral(@"                    <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ پایان
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionRunTimeDateTo"" name=""periodDefinitionRunTimeDateTo"" class=""form-control input-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
  ");
                WriteLiteral(@"                      <fieldset id=""periodFinalTimeRow"" class=""hidden"">
                            <legend>انتهای دوره</legend>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            تاریخ شروع
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionFinalDateFrom"" name=""periodDefinitionFinalDateFrom"" class=""form-control in");
                WriteLiteral(@"put-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ پایان
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""periodDefinitionFinalDateTo");
                WriteLiteral(@""" name=""periodDefinitionFinalDateTo"" class=""form-control input-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            خود ارزیابی از
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                              ");
                WriteLiteral(@"  <i class=""fa""></i>
                                                <input type=""text"" name=""selfScoreDateFrom"" id=""selfScoreDateFrom"" class=""form-control input-medium selfScoreDateFrom"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            خود ارزیابی تا
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-");
                WriteLiteral(@"icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""selfScoreDateTo"" name=""selfScoreDateTo"" class=""form-control input-medium selfScoreDateTo"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            نمره دهی سایرارزیاب از
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
      ");
                WriteLiteral(@"                                  <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""participantScoreDateFrom"" name=""participantScoreDateFrom"" class=""form-control input-medium participantScoreDateFrom"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            نمره دهی سایرارزیاب تا
                                            <span class=""required"">
                                                *
                                            <");
                WriteLiteral(@"/span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""participantScoreDateTo"" name=""participantScoreDateTo"" class=""form-control input-medium participantScoreDateTo"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            نمره دهی مربی سطح 1 از
                        ");
                WriteLiteral(@"                    <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""coacher1ScoreDateFrom"" name=""coacher1ScoreDateFrom"" class=""form-control input-medium coacher1ScoreDateFrom"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                     ");
                WriteLiteral(@"       نمره دهی مربی سطح 1 تا
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""coacher1ScoreDateTo"" name=""coacher1ScoreDateTo"" class=""form-control input-medium coacher1ScoreDateTo"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class=");
                WriteLiteral(@"'form-group'>
                                        <label class=""control-label col-md-3"">
                                            نمره دهی مربی سطح 2 از
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""coacher2ScoreDateFrom"" name=""coacher2ScoreDateFrom"" class=""form-control input-medium coacher2ScoreDateFrom"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-");
                WriteLiteral(@"md-6"">
                                    <div class='form-group'>
                                        <label class=""control-label col-md-3"">
                                            نمره دهی مربی سطح 2 تا
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""text"" id=""coacher2ScoreDateTo"" name=""coacher2ScoreDateTo"" class=""form-control input-medium coacher2ScoreDateTo"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>");
                WriteLiteral(@"
                            </div>
                        </fieldset>
                        <fieldset id=""periodProtestTimeRow"" class=""hidden"">
                            <legend>اعتراضات</legend>
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ شروع
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa""></i>
                                                <input type=""");
                WriteLiteral(@"text"" id=""periodDefinitionProtestDateFrom"" name=""periodDefinitionProtestDateFrom"" class=""form-control input-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class=""col-md-6"">
                                    <div class='form-group'>
                                        <label id=""activity_type_label"" class=""control-label col-md-3"">
                                            تاریخ پایان
                                            <span class=""required"">
                                                *
                                            </span>
                                        </label>
                                        <div class=""col-md-9"">
                                            <div class=""input-icon right"">
                                                <i class=""fa"">");
                WriteLiteral(@"</i>
                                                <input type=""text"" id=""periodDefinitionProtestDateTo"" name=""periodDefinitionProtestDateTo"" class=""form-control input-medium"" placeholder="""" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn green input-sm input-small"" id=""extendSectionPeriodSubmit"">ذخيره</button>
                    <button type=""button"" class=""btn red input-sm input-small"" id=""cancel"" data-dismiss=""modal""><i class=""fa fa-times""></i>انصراف</button>
                </div>

                <!-- END FORM-->
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29287, 56024, true);
            WriteLiteral(@"

<script>
    $('#extendSectionModal').modal('show');
    $('.select2').select2({
        placeholder: ""انتخاب کنید"",
        allowClear: true
    });
    $('#periodInitialTimeRow').find('input').attr(""disabled"", ""disabled"");
    $('#periodRunTimeRow').find('input').attr(""disabled"", ""disabled"");
    $('#periodFinalTimeRow').find('input').attr(""disabled"", ""disabled"");
    $('#periodProtestTimeRow').find('input').attr(""disabled"", ""disabled"");

    $.ajax({
        type: 'get',
        url: '/AssignTask/GetAssistantDepartment',
        async: false,
        //data: { roleId: roleId },
        success: function (department) {
            $(""#assistant"").empty();
            $(""#assistant"").append(""<option></option>"");
            $(""#assistant"").append(""<option value='0'>همه</option>"");
            $(""#assistant"").append(""<option value='-1'>هیچکدام</option>"");

            $(department).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
           ");
            WriteLiteral(@"     $(""#assistant"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })
    $.ajax({
        type: 'get',
        url: '/share/GetPeriodDefinition',
        //data: { roleId: roleId },
        success: function (periodDefinition) {
            $(""#periodDefinitionId"").empty();
            $(""#periodDefinitionId"").append(""<option></option>"");

            $(periodDefinition).each(function (i, p) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#periodDefinitionId"").append(""<option value='"" + p.periodDefinitoionId + ""'>"" + p.periodTitle + "" ("" + p.periodCode + "")</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    $('#assistant').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
      ");
            WriteLiteral(@"  console.log(e);
        if (e.object.id == -1) {
            if ($(""#s2id_assistant >ul>li>div"").length == 0) {
                $.ajax({
                    type: 'get',
                    url: '/AssignTask/GetAllManagementDepartment',
                    //data: { roleId: roleId },
                    async: false,
                    success: function (department) {
                        $(""#management"").empty();
                        $(""#management"").append(""<option></option>"");
                        $(""#management"").append(""<option value='0'>همه</option>"");
                        $(""#management"").append(""<option value='-1'>هیچکدام</option>"");

                        $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departmentId);
                            $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                ");
            WriteLiteral(@"    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        } else if (e.object.id == 0) {
            console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentTarget.childNodes[3].value)
            $(e.currentTarget.childNodes).each(function (i, d) {
                if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#assistant option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#assistant"").trigger('change');
                }

            })
            $(""#management"").empty();
            $(""#management"").append(""<option></option>"");
            $(""#management"").append(""<option value='0'>همه</option>"");
            $(""#management"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
    ");
            WriteLiteral(@"            type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: $(""#assistant"").select2(""val"") },
                async: false,
                success: function (data) {
                    var bool = false;
                    if ($(""#management>option"").length > 3) {
                        $(data).each(function (i, d) {
                            $(""#management>option"").each(function (ii, dd) {
                                if (dd.value == d.EvaluationHierarchyId) {
                                    bool = true;
                                }
                            })
                            if (bool == false) {
                                $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                            }
                            bool = false;
                        })
                    } else {
                        $(data).each(fu");
            WriteLiteral(@"nction (i, d) {
                            $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");

                        })
                    }
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: {
                    departmentId: $(""#assistant"").select2(""val"")
                },
                success: function (department) {
                    $(department).each(function (i, d) {
                        //$(""#parentName"").select2(""val"", d.departmentId);
                        $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
  ");
            WriteLiteral(@"          })
            $(""#s2id_assistant >ul>li>div"").each(function (i, dd) {
                if ($(""#s2id_assistant >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_assistant >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })

            //$('#assistant').select2(""select2-blur"");
        } else {
            //$(""#management"").empty();
            //$(""#management"").append(""<option></option>"");
            //$(""#management"").append(""<option value='0'>همه</option>"");
            //$(""#management"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: e.object.id },
                async: false,
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.Short");
            WriteLiteral(@"Name + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: {
                    departmentId: e.object.id
                },
                success: function (department) {
                    $(department).each(function (i, d) {
                        //$(""#parentName"").select2(""val"", d.departmentId);
                        $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#assistant').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.l");
            WriteLiteral(@"og(e);
        if (e.choice.id == -1) {
            if ($(""#s2id_assistant >ul>li>div"").length == 1) {
                //$(""#management"").empty();
                //$(""#chairmanship"").empty();
                //$(""#department"").empty();

                //$(""#chairmanship"").append(""<option></option>"");
                //$(""#chairmanship"").append(""<option value='0'>همه</option>"");
                //$(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");

                //$(""#department"").append(""<option></option>"");
                //$(""#department"").append(""<option value='0'>همه</option>"");
                //$(""#department"").append(""<option value='-1'>هیچکدام</option>"");

                //$(""#management"").append(""<option></option>"");
                //$(""#management"").append(""<option value='0'>همه</option>"");
                //$(""#management"").append(""<option value='-1'>هیچکدام</option>"");
                //$(""#management"").select2(""val"", """");
                //$(""#chairmanship""");
            WriteLiteral(@").select2(""val"", """");
                //$(""#department"").select2(""val"", """");

                $(""#management > option"").each(function () {
                    $(this).remove();
                })
                $(""#s2id_management >ul>li>a"").each(function () {
                    $(this).trigger(""click"");
                })
            }
        } else {
            $.ajax({
                type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: e.choice.id },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#management > option[value='"" + d.EvaluationHierarchyId + ""']"").remove();
                        $(""#s2id_management >ul>li>div"").each(function (i, dd) {
                            if ($(""#s2id_management >ul>li:eq("" + i + "")>div"").text() == d.ShortName) {
                                $(""#s2id_management >ul>li:eq("" + i + "")>a"").trigger(""click"");
      ");
            WriteLiteral(@"                      }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })

            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: { departmentId: e.choice.id },
                async: true,
                success: function (data) {
                    $(data).each(function (i, d) {

                        $(""#employee > option[value='"" + d.EvaluationHierarchyId + ""-"" + d.PeopleId + ""']"").remove();

                        $(""#s2id_employee >ul>li>div"").each(function (ii, dd) {
                            if ($(""#s2id_employee >ul>li:eq("" + ii + "")>div"").text() == d.fullname) {
                                $(""#s2id_employee >ul>li:eq("" + ii + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: func");
            WriteLiteral(@"tion (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#management').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);

        if (e.object.id == -1) {
            if ($(""#s2id_management >ul>li>div"").length == 0) {
                $.ajax({
                    type: 'get',
                    url: '/AssignTask/GetAllChairmanshipDepartment',
                    //data: { roleId: roleId },
                    success: function (department) {
                        $(""#chairmanship"").empty();
                        $(""#chairmanship"").append(""<option></option>"");
                        $(""#chairmanship"").append(""<option value='0'>همه</option>"");
                        $(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");

                        $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"",");
            WriteLiteral(@" d.departmentId);
                            $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        }
        else
            if (e.object.id == 0) {
                console.log(e.currentTarget.childNodes)
                //alert(e.currentTarget.childNodes[3].text)
                //alert(e.currentTarget.childNodes[3].value)
                $(e.currentTarget.childNodes).each(function (i, d) {
                    if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                        //alert(d.text + ""   "" + d.value)
                        $(""#management option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                        $(""#management"").trigger('change');
                    }
        ");
            WriteLiteral(@"        })
                $(""#chairmanship"").empty();
                $(""#chairmanship"").append(""<option></option>"");
                $(""#chairmanship"").append(""<option value='0'>همه</option>"");
                $(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
                $.ajax({
                    type: 'post',
                    url: '/assigntask/GetChairmanshipDepartment',
                    data: { departmentId: $(""#management"").select2(""val"") },
                    success: function (data) {
                        var bool = false;
                        if ($(""#chairmanship>option"").length > 3) {
                            $(data).each(function (i, d) {
                                $(""#chairmanship>option"").each(function (ii, dd) {
                                    if (dd.value == d.EvaluationHierarchyId) {
                                        bool = true;
                                    }
                                })
                      ");
            WriteLiteral(@"          if (bool == false) {
                                    $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                                }
                                bool = false;
                            })
                        } else {
                            $(data).each(function (i, d) {
                                $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                            })
                        }
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
                $.ajax({
                    type: 'post',
                    url: '/share/GetEmployee',
                    data: {
                        departmentId: $(""#management"").select2(""val"")
                    },
                    success: function (department) {");
            WriteLiteral(@"
                        $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departmentId);
                            $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
                $(""#s2id_management >ul>li>div"").each(function (i, dd) {
                    //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                    if ($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                        $(""#s2id_management >ul>li:eq("" + i + "")>a"").trigger(""click"");
                    }
                })
            } else {
                //$(""#chairmanship"").empty();
                //$(""#chairmanship"").append(""<option></option>"");
                //$(""");
            WriteLiteral(@"#chairmanship"").append(""<option value='0'>همه</option>"");
                //$(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
                $.ajax({
                    type: 'post',
                    url: '/assigntask/GetChairmanshipDepartment',
                    data: { departmentId: e.object.id },
                    success: function (data) {
                        $(data).each(function (i, d) {
                            $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
                $.ajax({
                    type: 'post',
                    url: '/share/GetEmployee',
                    data: {
                        departmentId: e.object.id
                    },
                    success: function (department) {
   ");
            WriteLiteral(@"                     $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departmentId);
                            $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
    })

    $('#management').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.log(e);
        if (e.choice.id == -1) {
            if ($(""#s2id_management >ul>li>div"").length == 1) {
                //$(""#chairmanship"").empty();
                //$(""#department"").empty();

                //$(""#chairmanship"").append(""<option></option>"");
                //$(""#chairmanship"").append(""<option value='0'>همه</option>"");
                //$(""#chairmanship""");
            WriteLiteral(@").append(""<option value='-1'>هیچکدام</option>"");
                //$(""#department"").append(""<option></option>"");
                //$(""#department"").append(""<option value='0'>همه</option>"");
                //$(""#department"").append(""<option value='-1'>هیچکدام</option>"");
                //$(""#chairmanship"").select2(""val"", """");
                //$(""#department"").select2(""val"", """");

                $(""#chairmanship > option"").each(function () {
                    $(this).remove();
                })
                $(""#s2id_chairmanship >ul>li>a"").each(function () {
                    $(this).trigger(""click"");
                })
            }
        } else if (e.choice.id == 0) {
        }
        else {
            $.ajax({
                type: 'post',
                url: '/assigntask/GetChairmanshipDepartment',
                data: { departmentId: e.choice.id },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $");
            WriteLiteral(@"(""#chairmanship > option[value='"" + d.EvaluationHierarchyId + ""']"").remove();
                        $(""#s2id_chairmanship >ul>li>div"").each(function (i, dd) {
                            if ($(""#s2id_chairmanship >ul>li:eq("" + i + "")>div"").text() == d.ShortName) {
                                $(""#s2id_chairmanship >ul>li:eq("" + i + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })

            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: { departmentId: e.choice.id },
                async: true,
                success: function (data) {
                    $(data).each(function (i, d) {

                        $(""#employee > option[value='"" + d.EvaluationHierarchyId + ""-"" + d.PeopleId + ""']"").remove();

                        $(""#s2id_em");
            WriteLiteral(@"ployee >ul>li>div"").each(function (ii, dd) {
                            if ($(""#s2id_employee >ul>li:eq("" + ii + "")>div"").text() == d.fullname) {
                                $(""#s2id_employee >ul>li:eq("" + ii + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#chairmanship').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);
        if (e.object.id == -1) {
            if ($(""#s2id_department >ul>li>div"").length == 0) {
                $.ajax({
                    type: 'get',
                    url: '/share/GetAllDepartment',
                    //data: { roleId: roleId },
                    async: false,
                    success: function (department) {
                        $(""#departme");
            WriteLiteral(@"nt"").empty();
                        $(""#department"").append(""<option></option>"");
                        $(""#department"").append(""<option value='0'>همه</option>"");
                        $(""#department"").append(""<option value='-1'>هیچکدام</option>"");

                        $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departmentId);
                            $(""#department"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        } else if (e.object.id == 0) {
            console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentTarget.childNodes[3].value)
            $(e.currentTarget.childNodes).each(function (i, d) {
              ");
            WriteLiteral(@"  if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#chairmanship option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#chairmanship"").trigger('change');
                }
            })
            $(""#department"").empty();
            $(""#department"").append(""<option></option>"");
            $(""#department"").append(""<option value='0'>همه</option>"");
            $(""#department"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/share/GetDepartment',
                data: { departmentId: $(""#chairmanship"").select2(""val"") },
                async: false,
                success: function (data) {
                    var bool = false;
                    if ($(""#department>option"").length > 3) {
                        $(data).each(function (i, d) {
                            $(""#d");
            WriteLiteral(@"epartment>option"").each(function (ii, dd) {
                                if (dd.value == d.EvaluationHierarchyId) {
                                    bool = true;
                                }
                            })
                            if (bool == false) {
                                $(""#department"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                            }
                            bool = false;
                        })
                    } else {
                        $(data).each(function (i, d) {
                            $(""#department"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    }
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $.ajax({
                type: 'post',
                url: '/share/GetEmpl");
            WriteLiteral(@"oyee',
                async: false,
                data: {
                    departmentId: $(""#chairmanship"").select2(""val"")
                },
                success: function (department) {
                    $(department).each(function (i, d) {
                        //$(""#parentName"").select2(""val"", d.departmentId);
                        $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $(""#s2id_chairmanship >ul>li>div"").each(function (i, dd) {
                //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                if ($(""#s2id_chairmanship >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_chairmanship >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })
        } ");
            WriteLiteral(@"else {
            //$(""#chairmanship"").empty();
            //$(""#chairmanship"").append(""<option></option>"");
            //$(""#chairmanship"").append(""<option value='0'>همه</option>"");
            //$(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/share/GetDepartment',
                data: { departmentId: e.object.id },
                async: false,
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#department"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: {
                    departmentId: e.object.id
              ");
            WriteLiteral(@"  },
                success: function (department) {
                    $(department).each(function (i, d) {
                        //$(""#parentName"").select2(""val"", d.departmentId);
                        $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
        //('#chairmanship').select2(""select2-blur"");
    })
    $('#chairmanship').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.log(e);
        if (e.choice.id == -1) {
            if ($(""#s2id_chairmanship >ul>li>div"").length == 1) {
                //$(""#department"").empty();

                //$(""#department"").append(""<option></option>"");
                //$(""#department"").append(""<option value='0'>همه</option>"");
           ");
            WriteLiteral(@"     //$(""#department"").append(""<option value='-1'>هیچکدام</option>"");
                //$(""#department"").select2(""val"", """");
                //$(""#department > option[value='"" + d.EvaluationHierarchyId + ""-"" + d.PeopleId + ""']"").remove();
                $(""#department > option"").each(function () {
                    $(this).remove();
                })
                $(""#s2id_department >ul>li>a"").each(function () {
                    $(this).trigger(""click"");
                })
            }
        } else if (e.choice.id == 0) {
        }
        else {
            $.ajax({
                type: 'post',
                url: '/share/GetDepartment',
                data: { departmentId: e.choice.id },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#department > option[value='"" + d.EvaluationHierarchyId + ""']"").remove();
                        $(""#s2id_department >ul>li>div"").each(function (i, dd) {
           ");
            WriteLiteral(@"                 if ($(""#s2id_department >ul>li:eq("" + i + "")>div"").text() == d.ShortName) {
                                $(""#s2id_department >ul>li:eq("" + i + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: { departmentId: e.choice.id },
                async: true,
                success: function (data) {
                    $(data).each(function (i, d) {

                        $(""#employee > option[value='"" + d.EvaluationHierarchyId + ""-"" + d.PeopleId + ""']"").remove();

                        $(""#s2id_employee >ul>li>div"").each(function (ii, dd) {
                            if ($(""#s2id_employee >ul>li:eq("" + ii + "")>div"").text() == d.fullname) {
                               ");
            WriteLiteral(@" $(""#s2id_employee >ul>li:eq("" + ii + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#department').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);
        if (e.object.id == -1) {
            if ($(""#s2id_department >ul>li>div"").length == 0) {
                //$.ajax({
                //    type: 'post',
                //    url: '/share/GetEmployee',
                //    data: {
                //        departmentId: -1
                //        // , chairmanshipId: $(""#chairmanship"").select2(""val"")
                //        // , managementId: $(""#management"").select2(""val"")
                //        //, assistantId: $(""#assistant"").select2(""val"")
                //    },
                //");
            WriteLiteral(@"    success: function (department) {
                //        $(""#employee"").empty();
                //        $(""#employee"").append(""<option></option>"");
                //        $(""#employee"").append(""<option value='0'>همه</option>"");
                //        $(""#employee"").append(""<option value='-1'>هیچکدام</option>"");

                //        $(department).each(function (i, d) {
                //            //$(""#parentName"").select2(""val"", d.departmentId);
                //            $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                //        })
                //    },
                //    error: function (status) {
                //        alert(""Error"");
                //    }
                //})
            }
        } else if (e.object.id == 0) {
            console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentT");
            WriteLiteral(@"arget.childNodes[3].value)
            $(e.currentTarget.childNodes).each(function (i, d) {
                if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#department option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#department"").trigger('change');
                }
            })
            //$(""#employee"").empty();
            //$(""#employee"").append(""<option></option>"");
            //$(""#employee"").append(""<option value='0'>همه</option>"");
            //$(""#employee"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: {
                    departmentId: $(""#department"").select2(""val"")
                    //, chairmanshipId: $(""#chairmanship"").select2(""val"")
                    //, managementId: $(""#management"").select2(""val"")
  ");
            WriteLiteral(@"                  //, assistantId: $(""#assistant"").select2(""val"")
                },
                success: function (data) {
                    var bool = false;
                    if ($(""#employee>option"").length > 3) {
                        $(data).each(function (i, d) {
                            $(""#employee>option"").each(function (ii, dd) {
                                if (dd.value == d.EvaluationHierarchyId) {
                                    bool = true;
                                }
                            })
                            if (bool == false) {
                                $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                            }
                            bool = false;
                        })
                    } else {
                        $(data).each(function (i, d) {
                            $(""#employee"").append(""<option value='"" + d.Eval");
            WriteLiteral(@"uationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                        })
                    }
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $(""#s2id_department >ul>li>div"").each(function (i, dd) {
                //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                if ($(""#s2id_department >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_department >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })
        } else {
            //$(""#chairmanship"").empty();
            //$(""#chairmanship"").append(""<option></option>"");
            //$(""#chairmanship"").append(""<option value='0'>همه</option>"");
            //$(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data");
            WriteLiteral(@": {
                    departmentId: e.object.id
                    // , chairmanshipId: $(""#chairmanship"").select2(""val"")
                    //, managementId: $(""#management"").select2(""val"")
                    //, assistantId: $(""#assistant"").select2(""val"")
                },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#employee"").append(""<option value='"" + d.EvaluationHierarchyId + '-' + d.PeopleId + ""'>"" + d.fullname + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
        //('#chairmanship').select2(""select2-blur"");
    })
    $('#department').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.log(e);

        if (e.choice.id == -1) {
            if ($(""#s2id_department >ul>li>div"").length == 1) {
         ");
            WriteLiteral(@"       //$(""#employee"").empty();

                //$(""#employee"").append(""<option></option>"");
                //$(""#employee"").append(""<option value='0'>همه</option>"");
                //$(""#employee"").append(""<option value='-1'>هیچکدام</option>"");
                //$(""#employee"").select2(""val"", """");


            }
        } else if (e.choice.id == 0) {
        }
        else {
            $.ajax({
                type: 'post',
                url: '/share/GetEmployee',
                data: { departmentId: e.choice.id },
                async: true,
                success: function (data) {
                    $(data).each(function (i, d) {

                        $(""#employee > option[value='"" + d.EvaluationHierarchyId + ""-"" + d.PeopleId + ""']"").remove();

                        $(""#s2id_employee >ul>li>div"").each(function (ii, dd) {
                            if ($(""#s2id_employee >ul>li:eq("" + ii + "")>div"").text() == d.fullname) {
                                $(""#s2id_emp");
            WriteLiteral(@"loyee >ul>li:eq("" + ii + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#employee').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);
        if (e.object.id == 0) {
            //console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentTarget.childNodes[3].value)
            $(e.currentTarget.childNodes).each(function (i, d) {
                if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#employee option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#employee"").trigger('change');
       ");
            WriteLiteral(@"         }
            })
            $(""#s2id_employee >ul>li>div"").each(function (i, dd) {
                //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                if ($(""#s2id_employee >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_employee >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })
        }
        //('#chairmanship').select2(""select2-blur"");
    })

    $('#periodDefinitionInitialDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#periodDefinitionInitialDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionInitialDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
  ");
            WriteLiteral(@"      changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionRunTimeDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#periodDefinitionRunTimeDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionRunTimeDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionFinalDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#periodDefinitionFinalDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay'");
            WriteLiteral(@"]));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionFinalDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });

    $('.selfScoreDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('.selfScoreDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('.selfScoreDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#participantScoreDateFrom");
            WriteLiteral(@"').datepicker({
        onSelect: function (dateText, inst) {
            $('#participantScoreDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#participantScoreDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#coacher1ScoreDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#coacher1ScoreDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
 ");
            WriteLiteral(@"   });
    $('#coacher1ScoreDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#coacher2ScoreDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#coacher2ScoreDateTo').datepicker('option', 'minDate',
                new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#coacher2ScoreDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });

    $('#periodDefinitionProtestDateFrom').datepicker({
        onSelect: function (dateText, inst) {
            $('#periodDefinitionProtestDateTo').datepicker('option', 'minDate',
       ");
            WriteLiteral(@"         new JalaliDate(inst['selectedYear'], inst['selectedMonth'], inst['selectedDay']));
        },
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });
    $('#periodDefinitionProtestDateTo').datepicker({
        showWeek: true,
        showButtonPanel: true,
        changeMonth: true,
        changeYear: true,
        dateFormat: ""yy/mm/dd""
    });

    $("".chk-click"").click(function () {
        if ($(this).is("":checked"") && $(this).val() == '1') {
            $('#periodInitialTimeRow').removeClass(""hidden"");
            $('#periodInitialTimeRow').find('input').removeAttr(""disabled"");
        }
        else if ($(this).is("":unchecked"") && $(this).val() == '1') {
            $('#periodInitialTimeRow').addClass(""hidden"");
            $('#periodInitialTimeRow').find('input').attr(""disabled"", ""disabled"");
        }

        if ($(this).is("":checked"") && $(this).val() == '2') {
           ");
            WriteLiteral(@" $('#periodRunTimeRow').removeClass(""hidden"");
            $('#periodRunTimeRow').find('input').removeAttr(""disabled"");
        }
        else if ($(this).is("":unchecked"") && $(this).val() == '2') {
            $('#periodRunTimeRow').addClass(""hidden"");
            $('#periodRunTimeRow').find('input').attr(""disabled"", ""disabled"");
        }

        if ($(this).is("":checked"") && $(this).val() == '3') {
            $('#periodFinalTimeRow').removeClass(""hidden"");
            $('#periodFinalTimeRow').find('input').removeAttr(""disabled"");
        }
        else if ($(this).is("":unchecked"") && $(this).val() == '3') {
            $('#periodFinalTimeRow').addClass(""hidden"");
            $('#periodFinalTimeRow').find('input').attr(""disabled"", ""disabled"");
        }

        if ($(this).is("":checked"") && $(this).val() == '4') {
            $('#periodProtestTimeRow').removeClass(""hidden"");
            $('#periodProtestTimeRow').find('input').removeAttr(""disabled"");
        }
        else if ($(this");
            WriteLiteral(@").is("":unchecked"") && $(this).val() == '4') {
            $('#periodProtestTimeRow').addClass(""hidden"");
            $('#periodProtestTimeRow').find('input').attr(""disabled"", ""disabled"");
        }
    })

    $(""#extendSectionPeriodFrm"").submit(function (e) {
        //alert('dpCreationSubmit');
        //var postdata2 = $(this).serializeArray();
        //debugger;
        var form = $('#extendSectionPeriodFrm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: """",
            rules: {
                periodDefinitionId: {
                    required: true
                },
                assistant: {
                    required: true
                },
                management: {
                    r");
            WriteLiteral(@"equired: true
                },
                chairmanship: {
                    required: true
                },
                department: {
                    required: true
                },
                employee: {
                    required: true
                },
                periodDefinitionInitialDateFrom: {
                    required: true
                },
                periodDefinitionInitialDateTo: {
                    required: true
                },
                periodDefinitionRunTimeDateFrom: {
                    required: true
                },
                periodDefinitionRunTimeDateTo: {
                    required: true
                },
                periodDefinitionFinalDateFrom: {
                    required: true
                },
                periodDefinitionFinalDateTo: {
                    required: true
                },
                selfScoreDateFrom: {
                    required: true
                ");
            WriteLiteral(@"},
                selfScoreDateTo: {
                    required: true
                },
                participantScoreDateFrom: {
                    required: true
                },
                participantScoreDateTo: {
                    required: true
                },
                coacher1ScoreDateFrom: {
                    required: true
                },
                coacher1ScoreDateTo: {
                    required: true
                },
                coacher2ScoreDateFrom: {
                    required: true
                },
                coacher2ScoreDateTo: {
                    required: true
                },
                periodDefinitionProtestDateFrom: {
                    required: true
                },
                periodDefinitionProtestDateTo: {
                    required: true
                }
            },
            messages: {
                periodDefinitionId: {
                    required: ""پر کردن این فیلد");
            WriteLiteral(@" الزامی می باشد""
                },
                assistant: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                management: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                chairmanship: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                department: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                employee: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionInitialDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionInitialDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionRunTimeDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },");
            WriteLiteral(@"
                periodDefinitionRunTimeDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionFinalDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionFinalDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                selfScoreDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                selfScoreDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                participantScoreDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                participantScoreDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                coacher1ScoreDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
          ");
            WriteLiteral(@"      },
                coacher1ScoreDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                coacher2ScoreDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                coacher2ScoreDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionProtestDateFrom: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                periodDefinitionProtestDateTo: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // re");
            WriteLiteral(@"nder error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass(""fa-warning"");
                icon.attr(""data-original-title"", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass(""fa-warning"").addClass(""fa-check"");
            },

            submitHandler: function (form) {
         ");
            WriteLiteral(@"       //                    success2.show();
                //                    error2.hide();
            }
        })
        if ($(""#periodInitialCheckBox"").is("":unchecked"") && $(""#periodRunTimeCheckBox"").is("":unchecked"") && $(""#periodFinalTimeCheckBox"").is("":unchecked"")
            && $(""#periodProtestTimeCheckBox"").is("":unchecked"")) {
            alert('حداقل یکی از دوره های زمانی باید در حالت انتخاب شده باشد');
            return false;
        }
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {
            //$(""#articleSubmit"").addClass('disabled');
            $(""#extendSectionPeriodSubmit"").attr(""disabled"", ""disabled"");
            var btn = $(""#extendSectionPeriodSubmit"");
            btn.button('loading');
            var postdata = new FormData(this);
            //var postdata = $('#dpcreation').serializeArray();

            console.log(postdata);
            $.ajax(
          ");
            WriteLiteral(@"      {
                    //data:postdata,
                    url: ""/ExtendSectionPeriod/AddExtendSectionPeriod"",
                    //url : formURL,
                    //data: postdata2,
                    data: postdata,
                    //data: ""firstName="" + $(""fn"").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: ""post"",

                    success: function (data, textStatus, jqXHR) {
                        var message = """";
                        var validation = """";
                        if (data.result > 0) {
                            message += ""<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.success(message);
                            $(""#extendSectionPeriodFrm"")[0].reset();
   ");
            WriteLiteral(@"                         $(""#extendSectionModal"").modal(""hide"");
                            dt.ajax.url(""/ExtendSectionPeriod/GetRelatedPeriodDefinitionWithExtendSectionPeriodList"");
                            dt.ajax.reload();
                        }
                        else if (data.result == 0) {
                            message += ""اطلاعات  مورد نظر ثبت نگردید."";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.info(message);
                        }
                        if (data.validation == ""notValid"") {

                            validation = ""بازه های زمانی مجاز نمی باشند دوباره سعی نمایید"";

                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.info(validation);
                        }

                        //$(""#p");
            WriteLiteral(@"eriodDefinitionTable"").DataTable().destroy();
                        //show_dataTable();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr00000"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $(""#extendSectionPeriodSubmit"").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $(""#articleForm"")[0].reset();
            //});
            e.preventDefault(e);
        }
    });
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
