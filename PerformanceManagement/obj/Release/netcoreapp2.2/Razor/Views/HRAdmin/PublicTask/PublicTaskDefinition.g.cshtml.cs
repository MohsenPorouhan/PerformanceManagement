#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\PublicTask\PublicTaskDefinition.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "41f6bb13a72410577805239cab9490ba7fee1a78"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_HRAdmin_PublicTask_PublicTaskDefinition), @"mvc.1.0.view", @"/Views/HRAdmin/PublicTask/PublicTaskDefinition.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/HRAdmin/PublicTask/PublicTaskDefinition.cshtml", typeof(AspNetCore.Views_HRAdmin_PublicTask_PublicTaskDefinition))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"41f6bb13a72410577805239cab9490ba7fee1a78", @"/Views/HRAdmin/PublicTask/PublicTaskDefinition.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_HRAdmin_PublicTask_PublicTaskDefinition : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("publicTaskFrm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\HRAdmin\PublicTask\PublicTaskDefinition.cshtml"
  
    ViewData["Title"] = "تعریف وظایف عمومی";

#line default
#line hidden
            DefineSection("Styles", async() => {
                BeginContext(69, 1196, true);
                WriteLiteral(@"
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/jquery-multi-select/css/multi-select-rtl.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/bootstrap-toastr/toastr-rtl.min.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/select2/select2-rtl.css"" />
<link id=""select2-metronic"" rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/select2/select2-metronic-rtl.css"" />

<link rel=""stylesheet"" href=""/assets/advancedDataTable/jquery.dataTables.css"" />
<link rel=""stylesheet"" href=""/assets/advancedDataTable/buttons.dataTables.css"" />
<style>
    .btn-sm, .btn-xs {
        margin: 2px;
    }

    td.details-control {
        background: url('/assets/img/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.details td.details-control {
        background: url('/assets/img/details_close.png') no-repeat center center;
    }

    .dataTable .details td, .dataTable .details th {
        padding: 8px;
        background");
                WriteLiteral(": none;\r\n        border: 0;\r\n    }\r\n\r\n    .select2-container .select2-choice > .select2-chosen {\r\n        /*display: block;*/\r\n        overflow: initial;\r\n    }\r\n</style>\r\n");
                EndContext();
            }
            );
            BeginContext(1268, 1686, true);
            WriteLiteral(@"<div class=""row"">
    <div class=""col-md-12"">
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class=""page-title"">
            <small></small>
            نام صفحه
        </h3>
        <ul class=""page-breadcrumb breadcrumb"">
            <li>
                <i class=""fa fa-home""></i>
                <a href=""../index.html"">
                    خانه
                </a>
                <i class=""fa fa-angle-left""></i>
            </li>
            <li>
                <a href=""#"">
                    مسیر مورد نظر
                </a>
            </li>
            <li class=""pull-right"">
                <div id=""dashboard-report-range"" class=""dashboard-date-range tooltips"" data-placement=""top"" data-original-title=""Change dashboard date range"">
                    <i class=""fa fa-calendar""></i>
                    <span>
                    </span>
                    <i class=""fa fa-angle-down""></i>
                </div>
            </li>
        </ul>
        <!-- END P");
            WriteLiteral(@"AGE TITLE & BREADCRUMB-->
    </div>
</div>
<!-- END PAGE HEADER-->
<div class=""modal fade"" id=""public_task"" tabindex="""" role="""" aria-hidden=""true"">
    <div class=""modal-dialog "">
        <div class=""modal-content"">
            <div class=""modal-header bg-blue"">
                <button type=""button"" id=""modal-close"" class=""close""
                        data-dismiss=""modal"" aria-hidden=""true""></button>
                <h4 id=""sabt_hazine_personnel"" class=""modal-title"">
                    <i class=""fa fa-file-o""></i>
                    تعریف وظایف عمومی
                </h4>
            </div>
            <!-- BEGIN FORM-->
            ");
            EndContext();
            BeginContext(2954, 4333, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "41f6bb13a72410577805239cab9490ba7fee1a789263", async() => {
                BeginContext(3017, 4263, true);
                WriteLiteral(@"
                <input type=""hidden"" id=""taskId"" name=""taskId"" />
                <div class=""modal-body"">
                    <div class=""form-body"">

                        <div id=""alert_danger"" class=""alert alert-danger display-hide"">
                            <button class=""close"" data-close=""alert""></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-12"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-2"">
                                        عنوان
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-10"">
       ");
                WriteLiteral(@"                                 <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <input id=""title"" name=""title""
                                                   type=""text"" class=""form-control input-medium"" placeholder="""">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>
                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-12"">
                                <div class=""form-group"">
                                    <label id=""activity_type_label"" class=""control-label col-md-2"">
                                        شرح
                                        <span class=""required"">
                                            *
         ");
                WriteLiteral(@"                               </span>
                                    </label>
                                    <div class=""col-md-10"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <textarea id=""description"" name=""description"" class=""form-control"" rows=""3""></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>
                        <div class=""row"">
                            <div class=""col-md-12"">
                                <div class=""form-group"">
                                    <label id=""mojri_name_label"" class=""control-label col-md-2"">
                                        ارتباط با اهداف
                                        <span class=""requ");
                WriteLiteral(@"ired"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-10"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select id=""correspondentTask"" name=""correspondentTask"" class=""select2 form-control input-lg"" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--/row-->
                    </div>
                    <!-- END FORM-->


                </div>
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn green input-sm input-small"" id=""publicTaskSubmit"">ذخيره</button>
                    <butt");
                WriteLiteral("on type=\"button\" class=\"btn red input-sm input-small\" id=\"cancel\" data-dismiss=\"modal\"><i class=\"fa fa-times\"></i>انصراف</button>\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7287, 2076, true);
            WriteLiteral(@"
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class=""row"">
    <div class=""col-md-12"">
        <div class=""portlet blue box"">
            <div class=""portlet-title"">
                <div class=""caption"">
                    <i class=""fa fa-cogs""></i>تعریف وظایف عمومی
                </div>
                <div class=""tools"">
                    <a href=""javascript:;"" class=""collapse"">
                    </a>
                    <a href=""#portlet-config"" data-toggle=""modal"" class=""config"">
                    </a>
                    <a href=""javascript:;"" class=""reload"">
                    </a>
                    <a href=""javascript:;"" class=""remove"">
                    </a>
                </div>
            </div>
            <div class=""portlet-body"">

                <a id=""addPublicTask"" class=""btn blue btn-sm pull-left"" data-toggle=""modal""
                   href=""#public_task"">تعریف  وظایف عمومی</a>

              ");
            WriteLiteral(@"  <div class=""clearfix"">
                </div>
                <table class=""table table-striped table-hover table-bordered"" id=""publicTaskTable"">
                    <thead>
                        <tr>
                            <th>
                                عنوان
                            </th>
                            <th>
                                شرح
                            </th>
                            <th>
                                ارتباط با اهداف
                            </th>
                            <th>
                                فعال/غیرفعال
                            </th>
                            <th>
                                ویرایش
                            </th>
                            <th>
                                حذف
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        ");
            WriteLiteral("</div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
            DefineSection("Plugins", async() => {
                BeginContext(9380, 1252, true);
                WriteLiteral(@"
<script src=""/assets/plugins/jquery-validation/dist/jquery.validate.min.js"" type=""text/javascript""></script>
<script src=""/assets/plugins/bootstrap-toastr/toastr.min.js""></script>
<script src=""/assets/scripts/custom/ui-toastr.js""></script>
<script type=""text/javascript"" src=""/assets/plugins/select2/select2.min.js""></script>
<script src=""/assets/plugins/jquery-validation/dist/jquery.validate.min.js"" type=""text/javascript""></script>

<script src=""/assets/advancedDataTable/DataTables-1.10.19.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/Buttons-for-DataTables-1.5.2.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.print.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.ColVis.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/jsZip.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/pdfmake.js"" type=""text/javascript""></script>
<script src=""/assets/advanc");
                WriteLiteral("edDataTable/pdfmake.font.js\" type=\"text/javascript\"></script>\r\n<script src=\"/assets/advancedDataTable/buttons.html5.js\" type=\"text/javascript\"></script>\r\n<script src=\"/assets/plugins/dist//jalali-moment.browser.js\"></script>\r\n\r\n");
                EndContext();
            }
            );
            BeginContext(10635, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(10654, 12983, true);
                WriteLiteral(@"
<script>
    $('.select2').select2({
        placeholder: ""انتخاب کنید"",
        allowClear: true
    });
    var submitUrl = """";
    $.ajax({
        type: 'get',
        url: '/PublicTask/GetTaskList',
        //data: { roleId: roleId },
        success: function (data) {
            $(""#correspondentTask"").empty();
            $(""#correspondentTask"").append(""<option></option>"");

            $(data).each(function (i, d) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#correspondentTask"").append(""<option value='"" + d.taskId + ""'>"" + d.title + ""</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    function resetFormValidation() {
        $("".select2-chosen"").html("""");
        //Begin of reset form validation
        $("".input-icon .fa-warning"").addClass('fa').removeClass('fa-warning');
        $("".input-icon .fa-check"").addClass('fa').removeClass('fa-check');
        $(");
                WriteLiteral(@""".alert-danger"").hide();
        $('.form-group').removeClass('has-error');
        $('.form-group').removeClass('has-success');
        //End of reset form validation
    }

    $('#public_task').on('hidden.bs.modal', function () {
        $(""#publicTaskFrm"")[0].reset();
        $("".select2-search-choice"").remove();
        resetFormValidation();
    });
    var dt;
    function show_dataTable() {
        dt = $('#publicTaskTable').DataTable({
            dom: 'CT<""clearfix"">lBfrtip',
            buttons: [
                'copy', 'csv', 'excel',
                'pdf',
                {
                    extend: 'pdfHtml5',
                    download: 'open',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colv");
                WriteLiteral(@"is'
            ],
            columnDefs: [
                {
                    targets: [-1],
                    visible: false
                }
            ],
            //                ""fnInitComplete"": function (oSettings, json) {
            //
            //                },
            ""fnDrawCallback"": function (oSettings) {
                $("".editPublicTaskBtn"").click(function () {
                    submitUrl = ""/PublicTask/EditPublicTask"";
                    var tr = $(this).closest('tr');
                    var row = dt.row(tr);
                    $(""#taskId"").val(row.data().TaskId);
                    $(""#title"").val(row.data().Title);
                    $(""#description"").val(row.data().Description);
                    $(""#correspondentTask"").select2(""val"", row.data().CorrespondentTaskId.split(','));
                });

                $("".activationPublicTaskBtn"").click(function () {
                    var tr = $(this).closest('tr');
                   ");
                WriteLiteral(@" var row = dt.row(tr);
                    $.ajax(
                        {
                            url: ""/PublicTask/ActivationPublicTaskDefinition"",
                            contentType: 'aplication/json;charset=utf-8',
                            type: ""GET"",
                            datatype: 'html',
                            data: {
                                taskId: row.data().TaskId
                                , title: row.data().Title
                                , isActive: row.data().IsActive
                            },
                            success: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
                                alert(textStatus);
                            }
                    ");
                WriteLiteral(@"    });
                });
                $("".deletePublicTaskBtn"").click(function () {
                    var tr3 = $(this).closest('tr');
                    var row3 = dt.row(tr3);
                    $.ajax(
                        {
                            url: ""/PublicTask/PublicTaskDefinitionDeletion"",
                            contentType: 'aplication/json;charset=utf-8',
                            type: ""GET"",
                            datatype: 'html',
                            data: {
                                taskId: row3.data().TaskId,
                                title: row3.data().Title
                            },
                            success: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
 ");
                WriteLiteral(@"                               alert(textStatus);
                            }
                        });
                });
            },
            ""pagingType"": ""full_numbers"",
            ""lengthMenu"": [
                [10, 25, 50, -1],
                [10, 25, 50, ""All""]
            ],
            ""columnDefs"": [
                //{ ""orderable"": false, ""targets"": [0] }
            ],
            ""serverSide"": true,
            ""processing"": true,
            ""ajax"": {
                ""url"": ""/PublicTask/GetPublicTaskList"",
                ""type"": ""POST"",
                //""contentType"": 'application/json; charset=utf-8',
                //""cache"": false,
                ""dataType"": ""json""
            },
            ""aoColumns"": [
                {
                    ""mData"": ""Title""
                },
                {
                    ""mData"": ""Description""
                },
                {
                    ""mData"": ""correspondentTask""
                },
 ");
                WriteLiteral(@"               {
                    ""mData"": ""IsActive"",
                    ""render"": function (data, type, row, meta) {
                        if (data == 1) {
                            data = ""<a class='btn activationPublicTaskBtn' data-toggle='modal'><span class='label label-sm label-success'>فعال</span></a>"";
                        } else if (data == 0) {
                            data = ""<a class='btn activationPublicTaskBtn' data-toggle='modal'><span class='label label-sm label-warning'>غیرفعال</span></a>"";
                        }
                        return data;
                    }
                },
                {
                    ""mData"": null,
                    ""render"": function (data, type, row, meta) {
                        data = ""<a href='#public_task' data-toggle='modal' class='btn editPublicTaskBtn' data-toggle='modal'><i class='fa fa-edit'></i></a>"";
                        return data;
                    }
                },
                {
  ");
                WriteLiteral(@"                  ""mData"": null,
                    ""render"": function (data, type, row, meta) {
                        data = ""<a href='#' data-toggle='modal' class='deletePublicTaskBtn'><i class='fa fa-trash-o'></i></a>"";
                        return data;
                    }
                }
            ]
        });

    }

    show_dataTable();
    $(""#addPublicTask"").click(function () {
        submitUrl = ""/PublicTask/PublicTaskDefinition"";
    })
    $(""#publicTaskFrm"").submit(function (e) {
        //var postdata2 = $(this).serializeArray();
        var form = $('#publicTaskFrm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            errorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: """",
            rules: {
                title: {
               ");
                WriteLiteral(@"     required: true
                },
                description: {
                    required: true
                }
            },
            messages: {
                title: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                description: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass(""fa-warning"");
                icon.attr(""data-original-title"", error.text()).tooltip();");
                WriteLiteral(@"
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass(""fa-warning"").addClass(""fa-check"");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
    ");
                WriteLiteral(@"    } else {
            //$(""#articleSubmit"").addClass('disabled');
            $(""#publicTaskSubmit"").attr(""disabled"", ""disabled"");
            var btn = $(""#publicTaskSubmit"");
            btn.button('loading');
            var postdata = new FormData(this);
            //var postdata = $('#dpcreation').serializeArray();

            $.ajax(
                {
                    //data:postdata,
                    url: submitUrl,
                    //url : formURL,
                    //data: postdata2,
                    data: postdata,
                    //data: ""firstName="" + $(""fn"").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: ""post"",

                    success: function (data, textStatus, jqXHR) {
                        //if ($.trim(data) === ""yess"")
                        //alert(""That's one I wanted. Excellent"")
                        //alert(data);
                ");
                WriteLiteral(@"        var message = """"
                        if (data > 0) {
                            message += ""<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.success(message);
                        }
                        else if (data == 0) {
                            message += ""<span>اطلاعات  مورد نظر ثبت نگردید..</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.info(message)
                        }

                        $(""#publicTaskFrm"")[0].reset();
                        resetFormValidation();
                        $(""#public_task"").modal(""hide"");
                        dt.ajax.reload();
                        //$(""#taskDefinitionTable"").DataTable");
                WriteLiteral(@"().destroy();
                        //show_dataTable();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr00000"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $(""#publicTaskSubmit"").button('reset');
                });
            //$.getScript('/assets/javascript/articleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $(""#articleForm"")[0].reset();
            //});
            e.preventDefault(e);
        }
    });



</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
