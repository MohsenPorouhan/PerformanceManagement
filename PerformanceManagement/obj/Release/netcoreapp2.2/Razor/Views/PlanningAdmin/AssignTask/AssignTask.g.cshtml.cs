#pragma checksum "D:\PerformanceManagement\PerformanceManagement\Views\PlanningAdmin\AssignTask\AssignTask.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "85c879d01051a2540b17f1ebacbd626ef4727c75"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PlanningAdmin_AssignTask_AssignTask), @"mvc.1.0.view", @"/Views/PlanningAdmin/AssignTask/AssignTask.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PlanningAdmin/AssignTask/AssignTask.cshtml", typeof(AspNetCore.Views_PlanningAdmin_AssignTask_AssignTask))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement;

#line default
#line hidden
#line 2 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models;

#line default
#line hidden
#line 3 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin;

#line default
#line hidden
#line 4 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.HRAdmin.View;

#line default
#line hidden
#line 5 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.ViewModels;

#line default
#line hidden
#line 6 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.Coacher.View;

#line default
#line hidden
#line 7 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin;

#line default
#line hidden
#line 8 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Models.PlanningAdmin.View;

#line default
#line hidden
#line 9 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 10 "D:\PerformanceManagement\PerformanceManagement\Views\_ViewImports.cshtml"
using PerformanceManagement.Util;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85c879d01051a2540b17f1ebacbd626ef4727c75", @"/Views/PlanningAdmin/AssignTask/AssignTask.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cbdcf2ba1ce3b535eb539d96aea4d66da299c9f", @"/Views/_ViewImports.cshtml")]
    public class Views_PlanningAdmin_AssignTask_AssignTask : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("assignTaskForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\PerformanceManagement\PerformanceManagement\Views\PlanningAdmin\AssignTask\AssignTask.cshtml"
  
    ViewData["Title"] = "تعریف هدف/KPI/برنامه عملیاتی";

#line default
#line hidden
            DefineSection("Styles", async() => {
                BeginContext(80, 305, true);
                WriteLiteral(@"
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/jquery-multi-select/css/multi-select-rtl.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/bootstrap-toastr/toastr-rtl.min.css"" />
<link rel=""stylesheet"" type=""text/css"" href=""/assets/plugins/select2/select2-rtl.css"" />
");
                EndContext();
                BeginContext(502, 121, true);
                WriteLiteral("<link id=\"select2-metronic\" rel=\"stylesheet\" type=\"text/css\" href=\"/assets/plugins/select2/select2-metronic-rtl.css\" />\r\n");
                EndContext();
                BeginContext(852, 859, true);
                WriteLiteral(@"
<link rel=""stylesheet"" href=""/assets/advancedDataTable/jquery.dataTables.css"" />
<link rel=""stylesheet"" href=""/assets/advancedDataTable/buttons.dataTables.css"" />
<style>
    .btn-sm, .btn-xs {
        margin: 2px;
    }

    td.details-control {
        background: url('/assets/img/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.details td.details-control {
        background: url('/assets/img/details_close.png') no-repeat center center;
    }

    .dataTable .details td, .dataTable .details th {
        padding: 8px;
        background: none;
        border: 0;
    }

    .select2-container .select2-choice > .select2-chosen {
        /*display: block;*/
        overflow: initial;
    }

    table.dataTable tbody tr.selected td {
        background-color: #B0BED9;
    }
</style>
");
                EndContext();
            }
            );
            BeginContext(1714, 3245, true);
            WriteLiteral(@"<div class=""modal fade"" id=""score"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true""></button>
                <h4 class=""modal-title"">تعیین نمره</h4>
            </div>
            <div class=""modal-body"">
                <div class=""col-md-6"">
                    <div class=""form-group"">
                        <label id=""mojri_name_label"" class=""control-label col-md-5"">
                            نمره
                            <span class=""required"">
                                *
                            </span>
                        </label>
                        <div class=""col-md-7"">
                            <div class=""input-icon right"">
                                <i class=""fa""></i>

                                <input type=""text"" clas");
            WriteLiteral(@"s=""form-control input-small input-sm"" placeholder=""نمره"">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn blue"">ذخیره</button>
                <button type=""button"" class=""btn default"" data-dismiss=""modal"">انصراف</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- BEGIN PAGE HEADER-->
<div class=""row"">
    <div class=""col-md-12"">
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class=""page-title"">
            <small></small>

        </h3>
        <div class=""clearfix""></div>
        <ul class=""page-breadcrumb breadcrumb"">
            <li>
                <i class=""fa fa-home""></i>
                <a href=""index.html"">
                    خانه
                </a>
                <i class=""fa fa-angle-left""></i>
            ");
            WriteLiteral(@"</li>
            <li>
                <a href=""#"">
                    مسیر مورد نظر
                </a>
            </li>
            <li class=""pull-right"">
                <div id=""dashboard-report-range"" class=""dashboard-date-range tooltips"" data-placement=""top"" data-original-title=""Change dashboard date range"">
                    <i class=""fa fa-calendar""></i>
                    <span>
                    </span>
                    <i class=""fa fa-angle-down""></i>
                </div>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
<!-- END PAGE HEADER-->
<div class=""modal fade"" id=""task_assign"" aria-hidden=""true"">
    <div class=""modal-dialog modal-wide"">
        <div class=""modal-content"">
            <div class=""modal-header bg-blue"">
                <button type=""button"" id=""modal-close"" class=""close""
                        data-dismiss=""modal"" aria-hidden=""true""></button>
                <h4 id=""sabt_hazine_personnel"" cla");
            WriteLiteral("ss=\"modal-title\">\r\n                    <i class=\"fa fa-file-o\"></i>\r\n                    تخصیص هدف سازمانی و معاونتی\r\n                </h4>\r\n            </div>\r\n            ");
            EndContext();
            BeginContext(4959, 7703, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7511916", async() => {
                BeginContext(5023, 4233, true);
                WriteLiteral(@"
                <div class=""modal-body"">
                    <div class=""form-body"">
                        <div id=""alert_danger"" class=""alert alert-danger display-hide"">
                            <button class=""close"" data-close=""alert""></button>
                            پر کردن فيلدهاي ستاره دار اجباري مي باشد.
                        </div>
                        <div class=""row"">
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        دوره عملکرد
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                          ");
                WriteLiteral(@"  <i class=""fa""></i>
                                            <select name=""periodDefinitionId"" id=""periodDefinitionId"" class=""form-control input-medium""></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""col-md-3 control-label"">
                                        تخصیص به مدیر عامل:
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""checkbox-list"">
                                            <label class=""checkbox-inline"">
                                                <input id=""ceoAssignment"" name=""ceoAssignment"" class=""ceo-chk"" type=""checkbox"" value=""1"">
                                            </lab");
                WriteLiteral(@"el>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخاب معاونت
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""assistant"" id=""assistant""
     ");
                WriteLiteral(@"                                               class=""select2 form-control input-medium"" multiple></select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخاب مدیریت
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""management"" id=""management""
                ");
                WriteLiteral("                                    class=\"select2 form-control input-medium\" multiple>\r\n                                                ");
                EndContext();
                BeginContext(9256, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7516776", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9273, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(9323, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7517951", async() => {
                    BeginContext(9341, 3, true);
                    WriteLiteral("همه");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9353, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(9403, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7519462", async() => {
                    BeginContext(9431, 7, true);
                    WriteLiteral("هیچکدام");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9447, 1282, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!--/span-->
                        </div>

                        <div class=""row"">
                            <!--/span-->
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        انتخاب ریاست
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""><");
                WriteLiteral(@"/i>
                                            <select disabled name=""chairmanship"" id=""chairmanship""
                                                    class=""select2 form-control input-medium"" multiple>
                                                ");
                EndContext();
                BeginContext(10729, 17, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7522592", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10746, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(10796, 30, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7523769", async() => {
                    BeginContext(10814, 3, true);
                    WriteLiteral("همه");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10826, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(10876, 44, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85c879d01051a2540b17f1ebacbd626ef4727c7525283", async() => {
                    BeginContext(10904, 7, true);
                    WriteLiteral("هیچکدام");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(10920, 1735, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label class=""control-label col-md-3"">
                                        هدف
                                        <span class=""required"">
                                            *
                                        </span>
                                    </label>
                                    <div class=""col-md-9"">
                                        <div class=""input-icon right"">
                                            <i class=""fa""></i>
                                            <select name=""taskList"" id=""taskList"" class=""form-control select2 input-medium"" multiple></select>
                     ");
                WriteLiteral(@"                   </div>
                                    </div>
                                </div>
                            </div>

                            <!--/span-->
                        </div>

                        <!--/row-->
                    </div>
                    <!-- END FORM-->
                </div>
                <div class=""modal-footer"">
                    <button type=""submit"" class=""btn green input-sm input-small"" id=""taskAssignmentSubmit"">ذخيره</button>
                    <button type=""button"" class=""btn red input-sm input-small"" id=""cancel"" data-dismiss=""modal""><i class=""fa fa-times""></i>انصراف</button>
                </div>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12662, 3551, true);
            WriteLiteral(@"
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class=""row"">

    <div class=""col-md-12"">
        <div class=""portlet blue box"">
            <div class=""portlet-title"">
                <div class=""caption"">
                    <i class=""fa fa-cogs""></i>تخصیص هدف سازمانی و معاونتی و تعیین وزن اهداف  و نمره عملکردی
                </div>
                <div class=""tools"">
                    <a href=""javascript:;"" class=""collapse"">
                    </a>
                    <a href=""#portlet-config"" data-toggle=""modal"" class=""config"">
                    </a>
                    <a href=""javascript:;"" class=""reload"">
                    </a>
                    <a href=""javascript:;"" class=""remove"">
                    </a>
                </div>
            </div>
            <div class=""portlet-body"">

                <a id=""taskAssignBtn"" class=""btn blue btn-sm pull-left"" data-toggle=""modal""
                   href=""#task_as");
            WriteLiteral(@"sign"">تخصیص هدف سازمانی و معاونتی</a>
                <a id=""weightAssignBtn"" class=""btn blue btn-sm pull-left"" data-toggle=""modal"">
                    تخصیص وزن به اهداف سازمانی و معاونتی
                </a>
                <a id=""scoreAssignBtn"" class=""btn blue btn-sm pull-left"" data-toggle=""modal"">
                    ثبت نمره عملکردی اهداف رده سازمانی و معاونتی
                </a>
                <div class=""clearfix"">
                </div>
                <table class=""table table-striped table-bordered table-hover"" id=""taskAssignmentTable"">
                    <thead>
                        <tr>
                            <th>
                                PeriodDefinitoionId
                            </th>
                            <th>
                                کد دوره
                            </th>
                            <th>
                                نام دوره
                            </th>
                            <th>
                     ");
            WriteLiteral(@"           RecieverAllocationPersonId
                            </th>
                            <th>
                                نام مسئول
                            </th>
                            <th>
                                RecieverAllocationEvaluationHierarchyId
                            </th>
                            <th>
                                DepartmentId
                            </th>
                            <th>
                                رده سازمانی
                            </th>
                            <th>
                                TaskId
                            </th>
                            <th>
                                نوع
                            </th>
                            <th>
                                متن هدف
                            </th>
                            <th>
                                وزن
                            </th>
                            <th>
  ");
            WriteLiteral(@"                              اختصاص دهنده
                            </th>
                            <th>
                                مشاهده نمره
                            </th>
                            <th>
                                حذف
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
            DefineSection("Plugins", async() => {
                BeginContext(16230, 334, true);
                WriteLiteral(@"
<script src=""/assets/plugins/jquery-validation/dist/jquery.validate.min.js"" type=""text/javascript""></script>
<script src=""/assets/plugins/bootstrap-toastr/toastr.min.js""></script>
<script src=""/assets/scripts/custom/ui-toastr.js""></script>
<script type=""text/javascript"" src=""/assets/plugins/select2/select2.min.js""></script>

");
                EndContext();
                BeginContext(16679, 114, true);
                WriteLiteral("\r\n<script src=\"/assets/plugins/jquery-validation/dist/jquery.validate.min.js\" type=\"text/javascript\"></script>\r\n\r\n");
                EndContext();
                BeginContext(17014, 738, true);
                WriteLiteral(@"
<script src=""/assets/advancedDataTable/DataTables-1.10.19.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/Buttons-for-DataTables-1.5.2.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.print.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.ColVis.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/jsZip.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/pdfmake.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/pdfmake.font.js"" type=""text/javascript""></script>
<script src=""/assets/advancedDataTable/buttons.html5.js"" type=""text/javascript""></script>

");
                EndContext();
            }
            );
            BeginContext(17755, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(17774, 39524, true);
                WriteLiteral(@"
<script>
    $('.select2').select2({
        placeholder: ""انتخاب کنید"",
        allowClear: true
    });

    $('#assistant').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        console.log(e);
        if (e.object.id == -1) {
            if ($(""#s2id_assistant >ul>li>div"").length == 0) {
                $.ajax({
                    type: 'get',
                    url: '/AssignTask/GetAllManagementDepartment',
                    //data: { roleId: roleId },
                    success: function (department) {
                        $(""#management"").empty();
                        $(""#management"").append(""<option></option>"");
                        $(""#management"").append(""<option value='0'>همه</option>"");
                        $(""#management"").append(""<option value='-1'>هیچکدام</option>"");

                        $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departme");
                WriteLiteral(@"ntId);
                            $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        } else if (e.object.id == 0) {
            console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentTarget.childNodes[3].value)
            $(e.currentTarget.childNodes).each(function (i, d) {
                if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#assistant option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#assistant"").trigger('change');
                }

            })
            $(""#management"").empty();
            $(""#manageme");
                WriteLiteral(@"nt"").append(""<option></option>"");
            $(""#management"").append(""<option value='0'>همه</option>"");
            $(""#management"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: $(""#assistant"").select2(""val"") },
                success: function (data) {
                    var bool = false;
                    if ($(""#management>option"").length > 3) {
                        $(data).each(function (i, d) {
                            $(""#management>option"").each(function (ii, dd) {
                                if (dd.value == d.EvaluationHierarchyId) {
                                    bool = true;
                                }
                            })
                            if (bool == false) {
                                $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</opti");
                WriteLiteral(@"on>"");
                            }
                            bool = false;
                        })
                    } else {
                        $(data).each(function (i, d) {
                            $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");

                        })
                    }
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
            $(""#s2id_assistant >ul>li>div"").each(function (i, dd) {
                if ($(""#s2id_assistant >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_assistant >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })
            //$('#assistant').select2(""select2-blur"");
        } else {
            //$(""#management"").empty();
            //$(""#management"").append(""<option></option>"");
            //$(""#management"").append(""<option value=");
                WriteLiteral(@"'0'>همه</option>"");
            //$(""#management"").append(""<option value='-1'>هیچکدام</option>"");
            $.ajax({
                type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: e.object.id },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#management"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#assistant').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.log(e);
        if (e.choice.id == -1) {
            if ($(""#s2id_assistant >ul>li>div"").length == 1) {
                $(""#management"").empty();
                $(""#chairmanship"").empty();
             ");
                WriteLiteral(@"   $(""#management"").append(""<option></option>"");
                $(""#management"").append(""<option value='0'>همه</option>"");
                $(""#management"").append(""<option value='-1'>هیچکدام</option>"");
                $(""#management"").select2(""val"", """");
                $(""#chairmanship"").select2(""val"", """");
            }
        } else {
            $.ajax({
                type: 'post',
                url: '/assigntask/GetManagementDepartment',
                data: { departmentId: e.choice.id },
                success: function (data) {
                    $(data).each(function (i, d) {
                        $(""#management > option[value='"" + d.EvaluationHierarchyId + ""']"").remove();
                        $(""#s2id_management >ul>li>div"").each(function (i, dd) {
                            if ($(""#s2id_management >ul>li:eq("" + i + "")>div"").text() == d.ShortName) {
                                $(""#s2id_management >ul>li:eq("" + i + "")>a"").trigger(""click"");
                         ");
                WriteLiteral(@"   }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#management').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);

        if (e.object.id == -1) {
            if ($(""#s2id_management >ul>li>div"").length == 0) {
                $.ajax({
                    type: 'get',
                    url: '/AssignTask/GetAllChairmanshipDepartment',
                    //data: { roleId: roleId },
                    success: function (department) {
                        $(""#chairmanship"").empty();
                        $(""#chairmanship"").append(""<option></option>"");
                        $(""#chairmanship"").append(""<option value='0'>همه</option>"");
                        $(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");

                  ");
                WriteLiteral(@"      $(department).each(function (i, d) {
                            //$(""#parentName"").select2(""val"", d.departmentId);
                            $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
            }
        }
        else
            if (e.object.id == 0) {
                console.log(e.currentTarget.childNodes)
                //alert(e.currentTarget.childNodes[3].text)
                //alert(e.currentTarget.childNodes[3].value)
                $(e.currentTarget.childNodes).each(function (i, d) {
                    if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                        //alert(d.text + ""   "" + d.value)
                        $(""#management option[value='"" + d.value + ""']"").attr(""selected"", ""se");
                WriteLiteral(@"lected"");

                        $(""#management"").trigger('change');
                    }
                })
                $(""#chairmanship"").empty();
                $(""#chairmanship"").append(""<option></option>"");
                $(""#chairmanship"").append(""<option value='0'>همه</option>"");
                $(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
                $.ajax({
                    type: 'post',
                    url: '/assigntask/GetChairmanshipDepartment',
                    data: { departmentId: $(""#management"").select2(""val"") },
                    success: function (data) {
                        var bool = false;
                        if ($(""#chairmanship>option"").length > 3) {
                            $(data).each(function (i, d) {
                                $(""#chairmanship>option"").each(function (ii, dd) {
                                    if (dd.value == d.EvaluationHierarchyId) {
                                        bool =");
                WriteLiteral(@" true;
                                    }
                                })
                                if (bool == false) {
                                    $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                                }
                                bool = false;
                            })
                        } else {
                            $(data).each(function (i, d) {
                                $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                            })
                        }
                    },
                    error: function (status) {
                        alert(""Error"");
                    }
                })
                $(""#s2id_management >ul>li>div"").each(function (i, dd) {
                    //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                ");
                WriteLiteral(@"    if ($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                        $(""#s2id_management >ul>li:eq("" + i + "")>a"").trigger(""click"");
                    }
                })
            } else {
                //$(""#chairmanship"").empty();
                //$(""#chairmanship"").append(""<option></option>"");
                //$(""#chairmanship"").append(""<option value='0'>همه</option>"");
                //$(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
                $.ajax({
                    type: 'post',
                    url: '/assigntask/GetChairmanshipDepartment',
                    data: { departmentId: e.object.id },
                    success: function (data) {
                        $(data).each(function (i, d) {
                            $(""#chairmanship"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                        })
                    },
                    error: function ");
                WriteLiteral(@"(status) {
                        alert(""Error"");
                    }
                })
            }
    })

    $('#management').on(""select2-removing"", function (e) {
        //alert(e.choice.id);
        //alert(e.choice.text);
        //console.log(e);
        if (e.choice.id == -1) {
            if ($(""#s2id_management >ul>li>div"").length == 1) {
                $(""#chairmanship"").empty();
                $(""#chairmanship"").append(""<option></option>"");
                $(""#chairmanship"").append(""<option value='0'>همه</option>"");
                $(""#chairmanship"").append(""<option value='-1'>هیچکدام</option>"");
                $(""#chairmanship"").select2(""val"", """");
            }
        } else if (e.choice.id == 0) {
        }
        else {
            $.ajax({
                type: 'post',
                url: '/assigntask/GetChairmanshipDepartment',
                data: { departmentId: e.choice.id },
                success: function (data) {
                    $(data).ea");
                WriteLiteral(@"ch(function (i, d) {
                        $(""#chairmanship > option[value='"" + d.EvaluationHierarchyId + ""']"").remove();
                        $(""#s2id_chairmanship >ul>li>div"").each(function (i, dd) {
                            if ($(""#s2id_chairmanship >ul>li:eq("" + i + "")>div"").text() == d.ShortName) {
                                $(""#s2id_chairmanship >ul>li:eq("" + i + "")>a"").trigger(""click"");
                            }
                        })
                    })
                },
                error: function (status) {
                    alert(""Error"");
                }
            })
        }
    })

    $('#chairmanship').on(""select2-selecting"", function (e) {
        //alert(e.object.id);
        //alert(e.object.text);
        //console.log(e);
        if (e.object.id == 0) {
            console.log(e.currentTarget.childNodes)
            //alert(e.currentTarget.childNodes[3].text)
            //alert(e.currentTarget.childNodes[3].value)
            $(");
                WriteLiteral(@"e.currentTarget.childNodes).each(function (i, d) {
                if (d.nodeName == ""OPTION"" && d.value != 0 && d.value != """" && d.value != -1) {
                    //alert(d.text + ""   "" + d.value)
                    $(""#chairmanship option[value='"" + d.value + ""']"").attr(""selected"", ""selected"");

                    $(""#chairmanship"").trigger('change');
                }
            })
            $(""#s2id_chairmanship >ul>li>div"").each(function (i, dd) {
                //alert($(""#s2id_management >ul>li>div:eq("" + i + "")"")[0].innerText)
                if ($(""#s2id_chairmanship >ul>li>div:eq("" + i + "")"")[0].text() == ""همه"") {
                    $(""#s2id_chairmanship >ul>li:eq("" + i + "")>a"").trigger(""click"");
                }
            })
        }
        //('#chairmanship').select2(""select2-blur"");
    })

    $(""#taskAssignBtn"").click(function () {
        $.ajax({
            type: 'get',
            url: '/AssignTask/GetTaskList',
            //data: { roleId: roleId },
 ");
                WriteLiteral(@"           success: function (department) {
                $(""#taskList"").empty();
                $(""#taskList"").append(""<option></option>"");

                $(department).each(function (i, d) {
                    //$(""#parentName"").select2(""val"", d.departmentId);
                    $(""#taskList"").append(""<option value='"" + d.taskId + ""'>"" + d.title + ""</option>"");
                })
            },
            error: function (status) {
                alert(""Error"");
            }
        })

        $.ajax({
            type: 'get',
            url: '/AssignTask/GetAssistantDepartment',
            //data: { roleId: roleId },
            success: function (department) {
                $(""#assistant"").empty();
                $(""#assistant"").append(""<option></option>"");
                $(""#assistant"").append(""<option value='0'>همه</option>"");
                $(""#assistant"").append(""<option value='-1'>هیچکدام</option>"");

                $(department).each(function (i, d) {
    ");
                WriteLiteral(@"                //$(""#parentName"").select2(""val"", d.departmentId);
                    $(""#assistant"").append(""<option value='"" + d.EvaluationHierarchyId + ""'>"" + d.ShortName + ""</option>"");
                })
            },
            error: function (status) {
                alert(""Error"");
            }
        })

        $.ajax({
            type: 'get',
            url: '/share/GetPeriodDefinition',
            //data: { roleId: roleId },
            success: function (periodDefinition) {
                $(""#periodDefinitionId"").empty();
                $(""#periodDefinitionId"").append(""<option></option>"");

                $(periodDefinition).each(function (i, p) {
                    //$(""#parentName"").select2(""val"", d.departmentId);
                    $(""#periodDefinitionId"").append(""<option value='"" + p.periodDefinitoionId + ""'>"" + p.periodTitle + "" ("" + p.periodCode + "")</option>"");
                })
            },
            error: function (status) {
                ale");
                WriteLiteral(@"rt(""Error"");
            }
        })
    })

    var dt;
    function show_dataTable() {
        dt = $('#taskAssignmentTable').DataTable({
            dom: 'CT<""clearfix"">lBfrtip',
            buttons: [
                'copy', 'csv', 'excel',
                'pdf',
                {
                    extend: 'pdfHtml5',
                    download: 'open',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'print',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                'colvis'
            ],
            columnDefs: [
                {
                    targets: [-1],
                    visible: false
                }
            ],
            ""fnInitComplete"": function (oSettings, json) {

            },
            ""fnDrawCallback"": function (oSettings) {
        ");
                WriteLiteral(@"        $("".viewScoreBtn"").click(function () {
                    $('#taskAssignmentTable >tbody>tr').each(function () {
                        $(this).removeClass('selected');
                    })
                    $.ajax(
                        {
                            url: ""/AssignTask/ViewScore"",
                            contentType: 'aplication/json;charset=utf-8',
                            type: ""GET"",
                            datatype: 'html',
                            //data: { CoacherType: $(this).attr(""coacherType"") },
                            success: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
                                alert(textStatus);
                            }
                        });");
                WriteLiteral(@"
                });
                $("".deleteTaskAssignBtn"").click(function () {
                    $('#taskAssignmentTable >tbody>tr').each(function () {
                        $(this).removeClass('selected');
                    })
                    var tr = $(this).closest('tr');
                    var row = dt.row(tr);
                    $.ajax(
                        {
                            //data:postdata,
                            url: '/AssignTask/DeleteTaskAssign',
                            //url : formURL,
                            //data: postdata,
                            contentType: 'aplication/json;charset=utf-8',
                            type: ""GET"",
                            datatype: 'html',
                            data: {
                                periodDefinitoionId: row.data().PeriodDefinitoionId
                                , evaluationId: row.data().EvaluationId
                                , title: row.data().Title
      ");
                WriteLiteral(@"                      },
                            //data: JSON.stringify(EvaluationView),
                            //data: ""firstName="" + $(""fn"").val(),
                            //cache: false,
                            //contentType: false,
                            //processData: false,
                            //datatype: 'json',
                            //contentType: 'application/json; charset=utf-8',
                            //type: 'POST',
                            success: function (data, textStatus, jqXHR) {
                                $(""#modalPlace"").html(data);

                                //if (data.notAllowed) {
                                //    var message = """";
                                //    message += ""<span>وظایفی که فقط خود اختصاص دهنده آن هستید قابل حذف می باشد.</span><br><br>"";
                                //    toastr.options.timeOut = ""15000"";
                                //    toastr.options.positionClass = ""toast-top-cen");
                WriteLiteral(@"ter"";
                                //    toastr.info(message);
                                //}
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert(""erorr"");
                                alert(jqXHR);
                                alert(textStatus);
                            }
                        });
                });
                // Array to track the ids of the details displayed rows
                //var detailRows = [];
                //$('.details-control').on('click', function () {
                //    var tr = $(this).closest('tr');
                //    var row = dt.row(tr);
                //    var idx = $.inArray(tr.attr('id'), detailRows);

                //    if (row.child.isShown()) {
                //        tr.removeClass('details');
                //        row.child.hide();

                //        // Remove from the 'open' array
               ");
                WriteLiteral(@" //        detailRows.splice(idx, 1);
                //    }
                //    else {
                //        tr.addClass('details');
                //        row.child(format(row.data())).show();

                //        // Add to the 'open' array
                //        if (idx === -1) {
                //            detailRows.push(tr.attr('id'));
                //        }
                //    }
                //});
                //// On each draw, loop over the `detailRows` array and show any child rows
                //dt.on('draw', function () {
                //    $.each(detailRows, function (i, id) {
                //        $('#' + id + ' td.details-control').trigger('click');
                //    });
                //});
            },
            ""pagingType"": ""full_numbers"",
            ""lengthMenu"": [
                [10, 25, 50, -1],
                [10, 25, 50, ""All""]
            ],
            ""columnDefs"": [
                { ""orderable"": false");
                WriteLiteral(@", ""targets"": [0] }
            ],
            ""processing"": true,
            ""serverSide"": true,
            ""ajax"": {
                ""url"": ""/AssignTask/GetTaskAssignmentList"",
                ""type"": ""Post"",
                ""data"": function (d) {
                    d.departmentId2 = $('#departmentId').children('option:selected').val(),
                        d.periodDefinitionIdDT2 = $('#periodDefinitionIdDT').children('option:selected').val()
                },
                //""contentType"": 'application/json; charset=utf-8',
                //""cache"": false,
                ""dataType"": ""json"",
                //'data': function (data) {
                //    data = JSON.stringify(data)
                //    return data;
                //}
            },
            ""aoColumns"": [
                {
                    ""mData"": ""PeriodDefinitoionId"", ""sClass"": ""hidden""
                },
                {
                    ""mData"": ""PeriodCode"",
                },
        ");
                WriteLiteral(@"        {
                    ""mData"": ""PeriodTitle""
                },
                {
                    ""mData"": ""RecieverAllocationPersonId"", ""sClass"": ""hidden""
                },
                {
                    ""mData"": ""fullName""
                },
                {
                    ""mData"": ""RecieverAllocationEvaluationHierarchyId"", ""sClass"": ""hidden""
                },
                {
                    ""mData"": ""DepartmentId"", ""sClass"": ""hidden""
                },
                {
                    ""mData"": ""ShortName""
                },
                {
                    ""mData"": ""TaskId"", ""sClass"": ""hidden""
                },
                {
                    ""mData"": ""Type"",
                    ""render"": function (data, type, row, meta) {
                        if (data == ""1"") {
                            data = 'هدف سازمانی'
                        }
                        else if (data == ""2"") {
                            data = 'هدف معاو");
                WriteLiteral(@"نتی'
                        }
                        //else if (data == ""3"") {
                        //    data = 'برنامه عملیاتی'
                        //}
                        return data;
                    }
                },
                {
                    ""mData"": ""Title""
                },
                {
                    ""mData"": ""TaskWeight""
                },
                {
                    ""mData"": ""allocatorRoleName"",
                    ""render"": function (data, type, row, meta) {
                        if (data == ""PlanningAdmin"") {
                            data = 'ادمین برنامه ریزی'
                        }
                        else if (data == ""2"") {
                            data = 'KPI'
                        }
                        else if (data == ""HRAdmin"") {
                            data = 'ادمین سرمایه انسانی'
                        }
                        return data;
                    }
                },
  ");
                WriteLiteral(@"              {
                    ""mData"": null,
                    ""render"": function (data, type, row, meta) {
                        data = ""<a href='#' data-toggle='modal' class='viewScoreBtn'>مشاهده نمره</a>"";
                        return data;
                    }
                },
                {
                    ""mData"": null,
                    ""render"": function (data, type, row, meta) {
                        data = ""<a href='#' data-toggle='modal' class='btn deleteTaskAssignBtn'><i class='fa fa-trash-o'></i></a>"";
                        return data;
                    }
                }
            ]
        });

    }

    show_dataTable();

    $(""#assignTaskForm"").submit(function (e) {
        //var postdata2 = $(this).serializeArray();
        var form = $('#assignTaskForm');
        form.validate({
            //console.log($('#registerform').serializeArray());
            errorElement: 'span', //default input error message container
            er");
                WriteLiteral(@"rorClass: 'help-block', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            ignore: """",
            rules: {
                periodDefinitionId: {
                    required: true
                },
                assistant: {
                    required: true
                },
                management: {
                    required: true
                },
                chairmanship: {
                    required: true
                },
                taskList: {
                    required: true
                }
            },
            messages: {
                periodDefinitionId: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                assistant: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                management: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
     ");
                WriteLiteral(@"           chairmanship: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                },
                taskList: {
                    required: ""پر کردن این فیلد الزامی می باشد""
                }
            },
            invalidHandler: function (event, validator) { //display error alert on form submit
                //                    success2.hide();
                //                    error2.show();
                //                    App.scrollTo(error2, -200);
            },
            errorPlacement: function (error, element) { // render error placement for each input type
                var icon = $(element).parent('.input-icon').children('i');
                icon.removeClass('fa-check').addClass(""fa-warning"");
                icon.attr(""data-original-title"", error.text()).tooltip();
            },
            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').addClass(");
                WriteLiteral(@"'has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight

            },

            success: function (label, element) {
                var icon = $(element).parent('.input-icon').children('i');
                $(element).closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                icon.removeClass(""fa-warning"").addClass(""fa-check"");
            },

            submitHandler: function (form) {
                //                    success2.show();
                //                    error2.hide();
            }
        })
        if (form.valid() == false) {
            //console.log($('#registerform').serializeArray());
            return false;
        } else {
            //$(""#articleSubmit"").addClass('disabled');
            $(""#taskAssignmentSubmit"").attr(""disabled"", ""disabled"");
            var btn = $(""#tas");
                WriteLiteral(@"kAssignmentSubmit"");
            btn.button('loading');
            var postdata = new FormData(this);
            //var postdata = $('#dpcreation').serializeArray();

            $.ajax(
                {
                    //data:postdata,
                    url: ""/AssignTask/AssignTask"",
                    //url : formURL,
                    //data: postdata2,
                    data: postdata,
                    //data: ""firstName="" + $(""fn"").val(),
                    cache: false,
                    contentType: false,
                    processData: false,
                    type: ""post"",

                    success: function (data, textStatus, jqXHR) {
                        //if ($.trim(data) === ""yess"")
                        //alert(""That's one I wanted. Excellent"")
                        //alert(data);
                        var message = """";
                        var duplicate = """";
                        if (data.saveChangeResult > 0) {
                 ");
                WriteLiteral(@"           message += ""<span>اطلاعات  مورد نظر با موفقیت ثبت گردید</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.success(message);
                        }
                        else if (data.saveChangeResult == 0) {
                            message += ""<span>اطلاعات  مورد نظر ثبت نگردید..</span><br><br>"";
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
                            toastr.info(message);
                        }


                        if (data.assistantDuplicationList != """") {
                            $(data.assistantDuplicationList).each(function (i, m) {
                                duplicate += ""<span>"" + m + ""</span><br><br>"";
                            })
                        }
                        if (data.manage");
                WriteLiteral(@"mentDuplicationList != """") {
                            $(data.managementDuplicationList).each(function (i, m) {
                                duplicate += ""<span>"" + m + ""</span><br><br>"";
                            })
                        }
                        if (data.chairmanshipDuplicationList != """") {
                            $(data.chairmanshipDuplicationList).each(function (i, m) {
                                duplicate += ""<span>"" + m + ""</span><br><br>"";
                            })
                        }
                        if (data.ceoDuplicationList != """") {
                            $(data.ceoDuplicationList).each(function (i, m) {
                                duplicate += ""<span>"" + m + ""</span><br><br>"";
                            })
                        }
                        if (duplicate != """") {
                            toastr.options.timeOut = ""15000"";
                            toastr.options.positionClass = ""toast-top-center"";
");
                WriteLiteral(@"                            toastr.info(duplicate);
                        }
                        $(""#assignTaskForm"")[0].reset();
                        resetFormValidation();
                        $(""#task_assign"").modal(""hide"");
                        //$(""#taskAssignmentTable"").DataTable().destroy();
                        //show_dataTable();
                        $(""#periodDefinitionIdDT"").val("""");
                        $(""#departmentId"").empty();

                        dt.ajax.url(""/AssignTask/GetTaskAssignmentList"");
                        dt.ajax.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr00000"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                }).always(function () {
                    $(""#taskAssignmentSubmit"").button('reset');
                });
            //$.getScript('/assets/javascript/arti");
                WriteLiteral(@"cleForm.js', function () {
            //    ArticleForm.init(postdata);
            //    $(""#articleForm"")[0].reset();
            //});
            e.preventDefault(e);
        }
    });

    function resetFormValidation() {
        $("".select2-chosen"").html("""");
        $(""#assistant"").empty();
        $(""#assistant"").select2(""val"", """");
        //////$(""#management"").empty();////////
        //////$(""#management"").select2(""val"", """");////////
        ////////$(""#chairmanship"").empty();////////
        ////////$(""#chairmanship"").select2(""val"", """");////////
        $(""#taskList"").empty();
        $(""#taskList"").select2(""val"", """");
        //Begin of reset form validation
        $("".input-icon .fa-warning"").addClass('fa').removeClass('fa-warning');
        $("".input-icon .fa-check"").addClass('fa').removeClass('fa-check');
        $("".alert-danger"").hide();
        $('.form-group').removeClass('has-error');
        $('.form-group').removeClass('has-success');
        $(""#uniform-ceoAs");
                WriteLiteral(@"signment span"").removeClass(""checked"");
        $('.ceo-chk').prop('checked', false);
        //End of reset form validation
    }
    $('#task_assign').on('hidden.bs.modal', function () {
        $(""#assignTaskForm"")[0].reset();
        resetFormValidation();
    });

    $(""#taskAssignmentTable_filter"").after(""<div class='dataTables_filter col-md-3'><label>انتخاب رده سازمانی:<select name='departmentId' id='departmentId' class='form-control input-medium'></select></label></div>"");

    $(""#taskAssignmentTable_filter"").after(""<div class='dataTables_filter'><label>دوره عملکرد:<select name='periodDefinitionIdDT' id='periodDefinitionIdDT' class='form-control i   put-medium'></select></label></div>"");

    $(""#taskAssignmentTable_filter"").after(""<div class='clearfix'></div>"");

    $.ajax({
        type: 'get',
        url: '/share/GetPeriodDefinitionFromEvaluation',
        //data: { roleId: roleId },
        success: function (periodDefinition) {
            $(""#periodDefinitionIdDT"").empty(");
                WriteLiteral(@");
            $(""#periodDefinitionIdDT"").append(""<option></option>"");

            $(periodDefinition).each(function (i, p) {
                //$(""#parentName"").select2(""val"", d.departmentId);
                $(""#periodDefinitionIdDT"").append(""<option value='"" + p.periodDefinitoionId + ""'>"" + p.periodTitle + "" ("" + p.periodCode + "")</option>"");
            })
        },
        error: function (status) {
            alert(""Error"");
        }
    })

    $('#periodDefinitionIdDT').on('change', function () {
        if ($('#periodDefinitionIdDT').children('option:selected').val() == """" && $('#departmentId').children('option:selected').val() != """") {
            dt.ajax.url(""/AssignTask/GetTaskAssignmentList"");
            dt.ajax.reload();
        }
        $.ajax({
            type: 'get',
            url: '/AssignTask/GetDepartmentList',
            data: { periodDefinitionId: $('#periodDefinitionIdDT').children('option:selected').val() },
            success: function (periodDefinition");
                WriteLiteral(@") {
                $(""#departmentId"").empty();
                $(""#departmentId"").append(""<option></option>"");

                $(periodDefinition).each(function (i, p) {
                    //$(""#parentName"").select2(""val"", d.departmentId);
                    $(""#departmentId"").append(""<option value='"" + p.recieverAllocationEvaluationHierarchyId + ""'>"" + p.shortName + ""</option>"");
                })
            },
            error: function (status) {
                alert(""Error"");
            }
        })
    });
    $(""#taskAssignmentTable tbody"").on('click', 'tr', function () {
        $(this).toggleClass('selected');
    });
    $('#departmentId').on('change', function () {
        dt.ajax.url(""/AssignTask/GetTaskAssignmentList"");
        dt.ajax.reload();
    })
    $(""#weightAssignBtn"").click(function () {
        if ($('#periodDefinitionIdDT').children('option:selected').val() != """" && $('#departmentId').children('option:selected').val() != """") {
            $.ajax(
      ");
                WriteLiteral(@"          {
                    url: ""/AssignTask/AssignWeight"",
                    contentType: 'aplication/json;charset=utf-8',
                    type: ""GET"",
                    datatype: 'html',

                    success: function (data, textStatus, jqXHR) {
                        $(""#modalPlace"").html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                });
        } else {
            alert(""دوره و رده سازمانی می بایست در حالت انتخاب باشد"");
        }
    });

    $(""#scoreAssignBtn"").click(function () {
        if ($('#periodDefinitionIdDT').children('option:selected').val() != """" && $('#departmentId').children('option:selected').val() != """") {
            $.ajax(
                {
                    url: ""/AssignTask/AssignScore"",
                    contentType: 'a");
                WriteLiteral(@"plication/json;charset=utf-8',
                    type: ""GET"",
                    datatype: 'html',

                    success: function (data, textStatus, jqXHR) {
                        $(""#modalPlace"").html(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert(""erorr"");
                        alert(jqXHR);
                        alert(textStatus);
                    }
                });
        } else {
            alert(""دوره و رده سازمانی می بایست در حالت انتخاب باشد"");
        }
    });
</script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
